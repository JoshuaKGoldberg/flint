{
	"alerts": {
		"biome": [
			{
				"name": "noAlert",
				"url": "https://biomejs.dev/linter/rules/noAlert"
			}
		],
		"eslint": [
			{
				"name": "no-alert",
				"url": "https://eslint.org/docs/latest/rules/no-alert"
			}
		],
		"flint": {
			"name": "browserAlerts",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-alert",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-alert.html"
			}
		],
		"raw": {
			"Flint Name": "browserAlerts",
			"Flint Plugin": "Browser",
			"Flint Preset": "Logical",
			"Biome Name": "noAlert",
			"ESLint Name": "no-alert",
			"Oxlint Name": "eslint/no-alert"
		}
	},
	"documentCookies": {
		"biome": [
			{
				"name": "noDocumentCookie",
				"url": "https://biomejs.dev/linter/rules/noDocumentCookie"
			}
		],
		"eslint": [
			{
				"name": "unicorn/no-document-cookie",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-document-cookie.md"
			}
		],
		"flint": {
			"name": "documentCookies",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-document-cookie",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-document-cookie.html"
			}
		],
		"raw": {
			"Flint Name": "documentCookies",
			"Flint Plugin": "Browser",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"Biome Name": "noDocumentCookie",
			"ESLint Name": "unicorn/no-document-cookie",
			"Oxlint Name": "unicorn/no-document-cookie"
		}
	},
	"eventClasses": {
		"eslint": [
			{
				"name": "unicorn/prefer-event-target",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-event-target.md"
			}
		],
		"flint": {
			"name": "eventClasses",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-event-target",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-event-target.html"
			}
		],
		"raw": {
			"Flint Name": "eventClasses",
			"Flint Plugin": "Browser",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-event-target",
			"Oxlint Name": "unicorn/prefer-event-target"
		}
	},
	"eventListenerSubscriptions": {
		"eslint": [
			{
				"name": "unicorn/prefer-add-event-listener",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-add-event-listener.md"
			}
		],
		"flint": {
			"name": "eventListenerSubscriptions",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-add-event-listener",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-add-event-listener.html"
			}
		],
		"raw": {
			"Flint Name": "eventListenerSubscriptions",
			"Flint Plugin": "Browser",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-add-event-listener",
			"Oxlint Name": "unicorn/prefer-add-event-listener"
		}
	},
	"implicitGlobals": {
		"eslint": [
			{
				"name": "no-implicit-globals",
				"url": "https://eslint.org/docs/latest/rules/no-implicit-globals"
			}
		],
		"flint": {
			"name": "implicitGlobals",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "implicitGlobals",
			"Flint Plugin": "Browser",
			"Flint Preset": "Logical",
			"ESLint Name": "no-implicit-globals"
		}
	},
	"nodeAppendMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-dom-node-append",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-dom-node-append.md"
			}
		],
		"flint": {
			"name": "nodeAppendMethods",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-dom-node-append",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-dom-node-append.html"
			}
		],
		"raw": {
			"Flint Name": "nodeAppendMethods",
			"Flint Plugin": "Browser",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-dom-node-append",
			"Oxlint Name": "unicorn/prefer-dom-node-append"
		}
	},
	"nodeDatasetAttributes": {
		"eslint": [
			{
				"name": "unicorn/prefer-dom-node-dataset",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-dom-node-dataset.md"
			}
		],
		"flint": {
			"name": "nodeDatasetAttributes",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-dom-node-dataset",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-dom-node-dataset.html"
			}
		],
		"raw": {
			"Flint Name": "nodeDatasetAttributes",
			"Flint Plugin": "Browser",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-dom-node-dataset",
			"Oxlint Name": "unicorn/prefer-dom-node-dataset"
		}
	},
	"nodeModificationMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-modern-dom-apis",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-modern-dom-apis.md"
			}
		],
		"flint": {
			"name": "nodeModificationMethods",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-modern-dom-apis",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-modern-dom-apis.html"
			}
		],
		"raw": {
			"Flint Name": "nodeModificationMethods",
			"Flint Plugin": "Browser",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-modern-dom-apis",
			"Oxlint Name": "unicorn/prefer-modern-dom-apis"
		}
	},
	"nodeRemoveMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-dom-node-remove",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-dom-node-remove.md"
			}
		],
		"flint": {
			"name": "nodeRemoveMethods",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-dom-node-remove",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-dom-node-remove.html"
			}
		],
		"raw": {
			"Flint Name": "nodeRemoveMethods",
			"Flint Plugin": "Browser",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-dom-node-remove",
			"Oxlint Name": "unicorn/prefer-dom-node-remove"
		}
	},
	"nodeTextContents": {
		"eslint": [
			{
				"name": "unicorn/prefer-dom-node-text-content",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-dom-node-text-content.md"
			}
		],
		"flint": {
			"name": "nodeTextContents",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-dom-node-text-content",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-dom-node-text-content.html"
			}
		],
		"raw": {
			"Flint Name": "nodeTextContents",
			"Flint Plugin": "Browser",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-dom-node-text-content",
			"Oxlint Name": "unicorn/prefer-dom-node-text-content"
		}
	},
	"removeEventListenerExpressions": {
		"eslint": [
			{
				"name": "unicorn/no-invalid-remove-event-listener",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-invalid-remove-event-listener.md"
			}
		],
		"flint": {
			"name": "removeEventListenerExpressions",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-invalid-remove-event-listener",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-invalid-remove-event-listener.html"
			}
		],
		"raw": {
			"Flint Name": "removeEventListenerExpressions",
			"Flint Plugin": "Browser",
			"Flint Preset": "Logical",
			"ESLint Name": "unicorn/no-invalid-remove-event-listener",
			"Oxlint Name": "unicorn/no-invalid-remove-event-listener"
		}
	},
	"scriptUrls": {
		"eslint": [
			{
				"name": "no-script-url",
				"url": "https://eslint.org/docs/latest/rules/no-script-url"
			}
		],
		"flint": {
			"name": "scriptUrls",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-script-url",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-script-url.html"
			}
		],
		"raw": {
			"Flint Name": "scriptUrls",
			"Flint Plugin": "Browser",
			"Flint Preset": "Logical",
			"ESLint Name": "no-script-url",
			"Oxlint Name": "eslint/no-script-url"
		}
	},
	"keyboardEventKeys": {
		"eslint": [
			{
				"name": "unicorn/prefer-keyboard-event-key",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-keyboard-event-key.md"
			}
		],
		"flint": {
			"name": "keyboardEventKeys",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by deprecated",
		"raw": {
			"Flint Name": "keyboardEventKeys",
			"Flint Plugin": "Browser",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prefer-keyboard-event-key",
			"Notes": "Superseded by deprecated"
		}
	},
	"windowMessagingTargetOrigin": {
		"eslint": [
			{
				"name": "unicorn/require-post-message-target-origin",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/require-post-message-target-origin.md"
			}
		],
		"flint": {
			"name": "windowMessagingTargetOrigin",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/require-post-message-target-origin",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/require-post-message-target-origin.html"
			}
		],
		"raw": {
			"Flint Name": "windowMessagingTargetOrigin",
			"Flint Plugin": "Browser",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/require-post-message-target-origin",
			"Oxlint Name": "unicorn/require-post-message-target-origin"
		}
	},
	"classListToggles": {
		"eslint": [
			{
				"name": "unicorn/prefer-classlist-toggle",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-classlist-toggle.md"
			}
		],
		"flint": {
			"name": "classListToggles",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "classListToggles",
			"Flint Plugin": "Browser",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-classlist-toggle"
		}
	},
	"nodeQueryMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-query-selector",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-query-selector.md"
			}
		],
		"flint": {
			"name": "nodeQueryMethods",
			"plugin": {
				"code": "browser",
				"name": "Browser"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-query-selector",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-query-selector.html"
			}
		],
		"raw": {
			"Flint Name": "nodeQueryMethods",
			"Flint Plugin": "Browser",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-query-selector",
			"Oxlint Name": "unicorn/prefer-query-selector"
		}
	},
	"asciiCharacters": {
		"deno": [
			{
				"name": "prefer-ascii",
				"url": "https://docs.deno.com/lint/rules/prefer-ascii"
			}
		],
		"flint": {
			"name": "asciiCharacters",
			"plugin": {
				"code": "deno",
				"name": "Deno"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "asciiCharacters",
			"Flint Plugin": "Deno",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "prefer-ascii"
		}
	},
	"nodeGlobals": {
		"deno": [
			{
				"name": "no-node-globals",
				"url": "https://docs.deno.com/lint/rules/no-node-globals"
			}
		],
		"flint": {
			"name": "nodeGlobals",
			"plugin": {
				"code": "deno",
				"name": "Deno"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "nodeGlobals",
			"Flint Plugin": "Deno",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "no-node-globals"
		}
	},
	"syncFunctionInAsyncFunctions": {
		"deno": [
			{
				"name": "no-sync-fn-in-async-fn",
				"url": "https://docs.deno.com/lint/rules/no-sync-fn-in-async-fn"
			}
		],
		"flint": {
			"name": "syncFunctionInAsyncFunctions",
			"plugin": {
				"code": "deno",
				"name": "Deno"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "syncFunctionInAsyncFunctions",
			"Flint Plugin": "Deno",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "no-sync-fn-in-async-fn"
		}
	},
	"keyDuplicates": {
		"deno": [
			{
				"name": "no-dupe-keys",
				"url": "https://docs.deno.com/lint/rules/no-dupe-keys"
			}
		],
		"eslint": [
			{
				"name": "jsonc/no-dupe-keys",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-dupe-keys.html"
			}
		],
		"flint": {
			"name": "keyDuplicates",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "keyDuplicates",
			"Flint Plugin": "JSON",
			"Flint Preset": "Logical",
			"Deno Lint Name": "no-dupe-keys",
			"ESLint Name": "jsonc/no-dupe-keys"
		}
	},
	"keyNormalization": {
		"eslint": [
			{
				"name": "json/no-unnormalized-keys",
				"url": "https://github.com/eslint/json/blob/main/docs/rules/no-unnormalized-keys.md"
			}
		],
		"flint": {
			"name": "keyNormalization",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "keyNormalization",
			"Flint Plugin": "JSON",
			"Flint Preset": "Logical",
			"ESLint Name": "json/no-unnormalized-keys"
		}
	},
	"valueSafety": {
		"eslint": [
			{
				"name": "json/no-unsafe-values",
				"url": "https://github.com/eslint/json/blob/main/docs/rules/no-unsafe-values.md"
			}
		],
		"flint": {
			"name": "valueSafety",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "valueSafety",
			"Flint Plugin": "JSON",
			"Flint Preset": "Logical",
			"ESLint Name": "json/no-unsafe-values"
		}
	},
	"arrayElementsSorting": {
		"eslint": [
			{
				"name": "jsonc/sort-array-values",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/sort-array-values.html"
			}
		],
		"flint": {
			"name": "arrayElementsSorting",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "arrayElementsSorting",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/sort-array-values"
		}
	},
	"bigintLiterals": {
		"eslint": [
			{
				"name": "jsonc/no-bigint-literals",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-bigint-literals.html"
			}
		],
		"flint": {
			"name": "bigintLiterals",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "bigintLiterals",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-bigint-literals",
			"Notes": "Generally handled by parsers."
		}
	},
	"binaryExpressions": {
		"eslint": [
			{
				"name": "jsonc/no-binary-expression",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-binary-expression.html"
			}
		],
		"flint": {
			"name": "binaryExpressions",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "binaryExpressions",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-binary-expression",
			"Notes": "Generally handled by parsers."
		}
	},
	"binaryNumericLiterals": {
		"eslint": [
			{
				"name": "jsonc/no-binary-numeric-literals",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-binary-numeric-literals.html"
			}
		],
		"flint": {
			"name": "binaryNumericLiterals",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "binaryNumericLiterals",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-binary-numeric-literals",
			"Notes": "Generally handled by parsers."
		}
	},
	"comments": {
		"eslint": [
			{
				"name": "jsonc/no-comments",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-comments.html"
			}
		],
		"flint": {
			"name": "comments",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "comments",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-comments",
			"Notes": "Generally handled by parsers."
		}
	},
	"floatingDecimals": {
		"eslint": [
			{
				"name": "jsonc/no-floating-decimal",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-floating-decimal.html"
			}
		],
		"flint": {
			"name": "floatingDecimals",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "floatingDecimals",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-floating-decimal",
			"Notes": "Generally handled by parsers."
		}
	},
	"hexadecimalNumericLiterals": {
		"eslint": [
			{
				"name": "jsonc/no-hexadecimal-numeric-literals",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-hexadecimal-numeric-literals.html"
			}
		],
		"flint": {
			"name": "hexadecimalNumericLiterals",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "hexadecimalNumericLiterals",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-hexadecimal-numeric-literals",
			"Notes": "Generally handled by parsers."
		}
	},
	"identifierEscapeSequences": {
		"eslint": [
			{
				"name": "jsonc/no-escape-sequence-in-identifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-escape-sequence-in-identifier.html"
			}
		],
		"flint": {
			"name": "identifierEscapeSequences",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "identifierEscapeSequences",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-escape-sequence-in-identifier",
			"Notes": "Generally handled by parsers."
		}
	},
	"identifierNumbers": {
		"eslint": [
			{
				"name": "jsonc/no-number-props",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-number-props.html"
			}
		],
		"flint": {
			"name": "identifierNumbers",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "identifierNumbers",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-number-props",
			"Notes": "Generally handled by parsers."
		}
	},
	"infinity": {
		"eslint": [
			{
				"name": "jsonc/no-infinity",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-infinity.html"
			}
		],
		"flint": {
			"name": "infinity",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "infinity",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-infinity",
			"Notes": "Generally handled by parsers."
		}
	},
	"irregularWhitespace": {
		"eslint": [
			{
				"name": "yml/no-irregular-whitespace",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-irregular-whitespace.html"
			}
		],
		"flint": {
			"name": "irregularWhitespace",
			"plugin": {
				"code": "yml",
				"name": "YML"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "irregularWhitespace",
			"Flint Plugin": "YML",
			"Flint Preset": "Stylistic",
			"ESLint Name": "yml/no-irregular-whitespace"
		}
	},
	"keyCasing": {
		"eslint": [
			{
				"name": "jsonc/key-name-casing",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/key-name-casing.html"
			}
		],
		"flint": {
			"name": "keyCasing",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "keyCasing",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/key-name-casing"
		}
	},
	"keyContents": {
		"eslint": [
			{
				"name": "json/no-empty-keys",
				"url": "https://github.com/eslint/json/blob/main/docs/rules/no-empty-keys.md"
			}
		],
		"flint": {
			"name": "keyContents",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "keyContents",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "json/no-empty-keys"
		}
	},
	"multilineStrings": {
		"eslint": [
			{
				"name": "no-multi-str",
				"url": "https://eslint.org/docs/latest/rules/no-multi-str"
			}
		],
		"flint": {
			"name": "multilineStrings",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-multi-str",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-multi-str.html"
			}
		],
		"raw": {
			"Flint Name": "multilineStrings",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-multi-str",
			"Oxlint Name": "eslint/no-multi-str"
		}
	},
	"nan": {
		"eslint": [
			{
				"name": "jsonc/no-nan",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-nan.html"
			}
		],
		"flint": {
			"name": "nan",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "nan",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-nan",
			"Notes": "Generally handled by parsers."
		}
	},
	"numbers": {
		"eslint": [
			{
				"name": "jsonc/valid-json-number",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/valid-json-number.html"
			}
		],
		"flint": {
			"name": "numbers",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "numbers",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/valid-json-number",
			"Notes": "Generally handled by parsers."
		}
	},
	"numericSeparators": {
		"eslint": [
			{
				"name": "jsonc/no-numeric-separators",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-numeric-separators.html"
			}
		],
		"flint": {
			"name": "numericSeparators",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "numericSeparators",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-numeric-separators",
			"Notes": "Generally handled by parsers."
		}
	},
	"octalEscapeSequences": {
		"eslint": [
			{
				"name": "jsonc/no-octal-escape",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-octal-escape.html"
			}
		],
		"flint": {
			"name": "octalEscapeSequences",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "octalEscapeSequences",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-octal-escape",
			"Notes": "Generally handled by parsers."
		}
	},
	"octalLiterals": {
		"eslint": [
			{
				"name": "jsonc/no-octal-escape",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-octal-escape.html"
			}
		],
		"flint": {
			"name": "octalLiterals",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "octalLiterals",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-octal-escape",
			"Notes": "Generally handled by parsers."
		}
	},
	"octalNumericLiterals": {
		"eslint": [
			{
				"name": "jsonc/no-octal-numeric-literals",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-octal-numeric-literals.html"
			}
		],
		"flint": {
			"name": "octalNumericLiterals",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "octalNumericLiterals",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-octal-numeric-literals",
			"Notes": "Generally handled by parsers."
		}
	},
	"parentheses": {
		"eslint": [
			{
				"name": "jsonc/no-parenthesized",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-parenthesized.html"
			}
		],
		"flint": {
			"name": "parentheses",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "parentheses",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-parenthesized",
			"Notes": "Generally handled by parsers."
		}
	},
	"plusOperators": {
		"eslint": [
			{
				"name": "jsonc/no-plus-sign",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-plus-sign.html"
			}
		],
		"flint": {
			"name": "plusOperators",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "plusOperators",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-plus-sign",
			"Notes": "Generally handled by parsers."
		}
	},
	"regexLiterals": {
		"biome": [
			{
				"name": "useRegexLiterals",
				"url": "https://biomejs.dev/linter/rules/useRegexLiterals"
			}
		],
		"eslint": [
			{
				"name": "prefer-regex-literals",
				"url": "https://eslint.org/docs/latest/rules/prefer-regex-literals"
			}
		],
		"flint": {
			"name": "regexLiterals",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexLiterals",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useRegexLiterals",
			"ESLint Name": "prefer-regex-literals"
		}
	},
	"sparseArrays": {
		"biome": [
			{
				"name": "noSparseArray",
				"url": "https://biomejs.dev/linter/rules/noSparseArray"
			}
		],
		"deno": [
			{
				"name": "no-sparse-arrays",
				"url": "https://docs.deno.com/lint/rules/no-sparse-arrays"
			}
		],
		"eslint": [
			{
				"name": "no-sparse-arrays",
				"url": "https://eslint.org/docs/latest/rules/no-sparse-arrays"
			}
		],
		"flint": {
			"name": "sparseArrays",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-sparse-arrays",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-sparse-arrays.html"
			}
		],
		"raw": {
			"Flint Name": "sparseArrays",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noSparseArray",
			"Deno Lint Name": "no-sparse-arrays",
			"ESLint Name": "no-sparse-arrays",
			"Oxlint Name": "eslint/no-sparse-arrays"
		}
	},
	"templateLiterals": {
		"eslint": [
			{
				"name": "jsonc/no-template-literals",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-template-literals.html"
			}
		],
		"flint": {
			"name": "templateLiterals",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "templateLiterals",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-template-literals",
			"Notes": "Generally handled by parsers."
		}
	},
	"topLevelInteroperability": {
		"eslint": [
			{
				"name": "json/top-level-interop",
				"url": "https://github.com/eslint/json/blob/main/docs/rules/top-level-interop.md"
			}
		],
		"flint": {
			"name": "topLevelInteroperability",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "topLevelInteroperability",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "json/top-level-interop"
		}
	},
	"undefined": {
		"eslint": [
			{
				"name": "jsonc/no-undefined-value",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-undefined-value.html"
			}
		],
		"flint": {
			"name": "undefined",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "undefined",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-undefined-value",
			"Notes": "Generally handled by parsers."
		}
	},
	"unicodeCodepointEscapes": {
		"eslint": [
			{
				"name": "jsonc/no-unicode-codepoint-escapes",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-unicode-codepoint-escapes.html"
			}
		],
		"flint": {
			"name": "unicodeCodepointEscapes",
			"plugin": {
				"code": "json",
				"name": "JSON"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "unicodeCodepointEscapes",
			"Flint Plugin": "JSON",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsonc/no-unicode-codepoint-escapes",
			"Notes": "Generally handled by parsers."
		}
	},
	"unnecessaryEscapes": {
		"biome": [
			{
				"name": "noUselessEscapeInRegex",
				"url": "https://biomejs.dev/linter/rules/noUselessEscapeInRegex"
			},
			{
				"name": "noUselessEscapeInString",
				"url": "https://biomejs.dev/linter/rules/noUselessEscapeInString"
			}
		],
		"eslint": [
			{
				"name": "no-useless-escape",
				"url": "https://eslint.org/docs/latest/rules/no-useless-escape"
			}
		],
		"flint": {
			"name": "unnecessaryEscapes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "unnecessaryEscapes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noUselessEscapeInRegex; noUselessEscapeInString",
			"ESLint Name": "no-useless-escape"
		}
	},
	"accessKeys": {
		"eslint": [
			{
				"name": "jsx-a11y/no-access-key",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-access-key.md"
			}
		],
		"flint": {
			"name": "accessKeys",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-access-key",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-access-key.html"
			}
		],
		"raw": {
			"Flint Name": "accessKeys",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/no-access-key",
			"Oxlint Name": "eslint/no-access-key"
		}
	},
	"altText": {
		"eslint": [
			{
				"name": "jsx-a11y/alt-text",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/alt-text.md"
			}
		],
		"flint": {
			"name": "altText",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/alt-text",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/alt-text.html"
			}
		],
		"raw": {
			"Flint Name": "altText",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/alt-text",
			"Oxlint Name": "jsx_a11y/alt-text"
		}
	},
	"anchorAmbiguousText": {
		"eslint": [
			{
				"name": "jsx-a11y/anchor-ambiguous-text",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-ambiguous-text.md"
			}
		],
		"flint": {
			"name": "anchorAmbiguousText",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "jsx-a11y/anchor-ambiguous-text",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx-a11y/anchor-ambiguous-text.html"
			}
		],
		"raw": {
			"Flint Name": "anchorAmbiguousText",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "jsx-a11y/anchor-ambiguous-text",
			"Oxlint Name": "jsx-a11y/anchor-ambiguous-text"
		}
	},
	"anchorContent": {
		"eslint": [
			{
				"name": "jsx-a11y/anchor-content",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-content.md"
			}
		],
		"flint": {
			"name": "anchorContent",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/anchor-has-content",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/anchor-has-content.html"
			}
		],
		"raw": {
			"Flint Name": "anchorContent",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/anchor-content",
			"Oxlint Name": "jsx_a11y/anchor-has-content"
		}
	},
	"anchorValidity": {
		"eslint": [
			{
				"name": "jsx-a11y/anchor-is-valid",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"
			}
		],
		"flint": {
			"name": "anchorValidity",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/anchor-is-valid",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/anchor-is-valid.html"
			}
		],
		"raw": {
			"Flint Name": "anchorValidity",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/anchor-is-valid",
			"Oxlint Name": "jsx_a11y/anchor-is-valid"
		}
	},
	"ariaActiveDescendantTabIndex": {
		"eslint": [
			{
				"name": "jsx-a11y/aria-activedescendant-has-tabindex",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/aria-activedescendant-has-tabindex.md"
			}
		],
		"flint": {
			"name": "ariaActiveDescendantTabIndex",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/aria-activedescendant-has-tabindex",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/aria-activedescendant-has-tabindex.html"
			}
		],
		"raw": {
			"Flint Name": "ariaActiveDescendantTabIndex",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/aria-activedescendant-has-tabindex",
			"Oxlint Name": "jsx_a11y/aria-activedescendant-has-tabindex"
		}
	},
	"ariaHiddenFocusables": {
		"eslint": [
			{
				"name": "jsx-a11y/no-aria-hidden-on-focusable",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-aria-hidden-on-focusable.md"
			}
		],
		"flint": {
			"name": "ariaHiddenFocusables",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/no-aria-hidden-on-focusable",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-aria-hidden-on-focusable.html"
			}
		],
		"raw": {
			"Flint Name": "ariaHiddenFocusables",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "jsx-a11y/no-aria-hidden-on-focusable",
			"Oxlint Name": "jsx_a11y/no-aria-hidden-on-focusable"
		}
	},
	"ariaProps": {
		"eslint": [
			{
				"name": "jsx-a11y/aria-props",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/aria-props.md"
			}
		],
		"flint": {
			"name": "ariaProps",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/aria-props",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/aria-props.html"
			}
		],
		"raw": {
			"Flint Name": "ariaProps",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/aria-props",
			"Oxlint Name": "jsx_a11y/aria-props"
		}
	},
	"ariaPropTypes": {
		"eslint": [
			{
				"name": "jsx-a11y/aria-proptypes",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/aria-proptypes.md"
			}
		],
		"flint": {
			"name": "ariaPropTypes",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "ariaPropTypes",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/aria-proptypes"
		}
	},
	"ariaRoles": {
		"eslint": [
			{
				"name": "jsx-a11y/aria-role",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/aria-role.md"
			}
		],
		"flint": {
			"name": "ariaRoles",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/aria-role",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/aria-role.html"
			}
		],
		"raw": {
			"Flint Name": "ariaRoles",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/aria-role",
			"Oxlint Name": "jsx_a11y/aria-role"
		}
	},
	"ariaUnsupportedElements": {
		"eslint": [
			{
				"name": "jsx-a11y/aria-unsupported-elements",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/aria-unsupported-elements.md"
			}
		],
		"flint": {
			"name": "ariaUnsupportedElements",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/aria-unsupported-elements",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/aria-unsupported-elements.html"
			}
		],
		"raw": {
			"Flint Name": "ariaUnsupportedElements",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/aria-unsupported-elements",
			"Oxlint Name": "jsx_a11y/aria-unsupported-elements"
		}
	},
	"autocomplete": {
		"eslint": [
			{
				"name": "jsx-a11y/autocomplete-valid",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/autocomplete-valid.md"
			}
		],
		"flint": {
			"name": "autocomplete",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/autocomplete-valid",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/autocomplete-valid.html"
			}
		],
		"raw": {
			"Flint Name": "autocomplete",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/autocomplete-valid",
			"Oxlint Name": "jsx_a11y/autocomplete-valid"
		}
	},
	"autoFocusProps": {
		"eslint": [
			{
				"name": "jsx-a11y/no-autofocus",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-autofocus.md"
			}
		],
		"flint": {
			"name": "autoFocusProps",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/no-autofocus",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-autofocus.html"
			}
		],
		"raw": {
			"Flint Name": "autoFocusProps",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/no-autofocus",
			"Oxlint Name": "jsx_a11y/no-autofocus"
		}
	},
	"clickEventKeyEvents": {
		"eslint": [
			{
				"name": "jsx-a11y/click-events-have-key-events",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/click-events-have-key-events.md"
			}
		],
		"flint": {
			"name": "clickEventKeyEvents",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/click-events-have-key-events",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/click-events-have-key-events.html"
			}
		],
		"raw": {
			"Flint Name": "clickEventKeyEvents",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/click-events-have-key-events",
			"Oxlint Name": "jsx_a11y/click-events-have-key-events"
		}
	},
	"distractingElements": {
		"eslint": [
			{
				"name": "jsx-a11y/no-distracting-elements",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-distracting-elements.md"
			}
		],
		"flint": {
			"name": "distractingElements",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/no-distracting-elements",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-distracting-elements.html"
			}
		],
		"raw": {
			"Flint Name": "distractingElements",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/no-distracting-elements",
			"Oxlint Name": "jsx_a11y/no-distracting-elements"
		}
	},
	"duplicateProps": {
		"deno": [
			{
				"name": "jsx-no-duplicate-props",
				"url": "https://docs.deno.com/lint/rules/jsx-no-duplicate-props"
			}
		],
		"flint": {
			"name": "duplicateProps",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "duplicateProps",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"Deno Lint Name": "jsx-no-duplicate-props"
		}
	},
	"duplicateSpreads": {
		"deno": [
			{
				"name": "jsx-props-no-spread-multi",
				"url": "https://docs.deno.com/lint/rules/jsx-props-no-spread-multi"
			}
		],
		"flint": {
			"name": "duplicateSpreads",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "duplicateSpreads",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"Deno Lint Name": "jsx-props-no-spread-multi"
		}
	},
	"headingContents": {
		"eslint": [
			{
				"name": "jsx-a11y/heading-has-content",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/heading-has-content.md"
			}
		],
		"flint": {
			"name": "headingContents",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "headingContents",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/heading-has-content"
		}
	},
	"htmlLangs": {
		"eslint": [
			{
				"name": "jsx-a11y/html-has-lang",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/html-has-lang.md"
			}
		],
		"flint": {
			"name": "htmlLangs",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/html-has-lang",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/html-has-lang.html"
			}
		],
		"raw": {
			"Flint Name": "htmlLangs",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/html-has-lang",
			"Oxlint Name": "jsx_a11y/html-has-lang"
		}
	},
	"iframeTitles": {
		"eslint": [
			{
				"name": "jsx-a11y/iframe-has-title",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/iframe-has-title.md"
			}
		],
		"flint": {
			"name": "iframeTitles",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/iframe-has-title",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/iframe-has-title.html"
			}
		],
		"raw": {
			"Flint Name": "iframeTitles",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/iframe-has-title",
			"Oxlint Name": "jsx_a11y/iframe-has-title"
		}
	},
	"imageAltRedundancy": {
		"eslint": [
			{
				"name": "jsx-a11y/img-redundant-alt",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/img-redundant-alt.md"
			}
		],
		"flint": {
			"name": "imageAltRedundancy",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/img-redundant-alt",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/img-redundant-alt.html"
			}
		],
		"raw": {
			"Flint Name": "imageAltRedundancy",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/img-redundant-alt",
			"Oxlint Name": "jsx_a11y/img-redundant-alt"
		}
	},
	"interactiveElementNonInteractiveRoles": {
		"eslint": [
			{
				"name": "jsx-a11y/no-interactive-element-to-noninteractive-role",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-interactive-element-to-noninteractive-role.md"
			}
		],
		"flint": {
			"name": "interactiveElementNonInteractiveRoles",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "interactiveElementNonInteractiveRoles",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/no-interactive-element-to-noninteractive-role"
		}
	},
	"interactiveElementsFocusable": {
		"eslint": [
			{
				"name": "jsx-a11y/interactive-elements-focusable",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/interactive-elements-focusable.md"
			}
		],
		"flint": {
			"name": "interactiveElementsFocusable",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "interactiveElementsFocusable",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/interactive-elements-focusable"
		}
	},
	"labelAssociatedControls": {
		"eslint": [
			{
				"name": "jsx-a11y/label-has-associated-control",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/label-has-associated-control.md"
			}
		],
		"flint": {
			"name": "labelAssociatedControls",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/label-has-associated-control",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/label-has-associated-control.html"
			}
		],
		"raw": {
			"Flint Name": "labelAssociatedControls",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/label-has-associated-control",
			"Oxlint Name": "jsx_a11y/label-has-associated-control"
		}
	},
	"langValidity": {
		"eslint": [
			{
				"name": "jsx-a11y/lang",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/lang.md"
			}
		],
		"flint": {
			"name": "langValidity",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/lang",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/lang.html"
			}
		],
		"raw": {
			"Flint Name": "langValidity",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "jsx-a11y/lang",
			"Oxlint Name": "jsx_a11y/lang"
		}
	},
	"mediaCaptions": {
		"eslint": [
			{
				"name": "jsx-a11y/media-has-caption",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/media-has-caption.md"
			}
		],
		"flint": {
			"name": "mediaCaptions",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/media-has-caption",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/media-has-caption.html"
			}
		],
		"raw": {
			"Flint Name": "mediaCaptions",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/media-has-caption",
			"Oxlint Name": "jsx_a11y/media-has-caption"
		}
	},
	"mouseEventKeyEvents": {
		"eslint": [
			{
				"name": "jsx-a11y/mouse-events-have-key-events",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/mouse-events-have-key-events.md"
			}
		],
		"flint": {
			"name": "mouseEventKeyEvents",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/mouse-events-have-key-events",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/mouse-events-have-key-events.html"
			}
		],
		"raw": {
			"Flint Name": "mouseEventKeyEvents",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/mouse-events-have-key-events",
			"Oxlint Name": "jsx_a11y/mouse-events-have-key-events"
		}
	},
	"nonInteractiveElementInteractions": {
		"eslint": [
			{
				"name": "jsx-a11y/no-noninteractive-element-interactions",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-noninteractive-element-interactions.md"
			}
		],
		"flint": {
			"name": "nonInteractiveElementInteractions",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "nonInteractiveElementInteractions",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/no-noninteractive-element-interactions"
		}
	},
	"nonInteractiveElementInteractiveRoles": {
		"eslint": [
			{
				"name": "jsx-a11y/no-noninteractive-element-to-interactive-role",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-noninteractive-element-to-interactive-role.md"
			}
		],
		"flint": {
			"name": "nonInteractiveElementInteractiveRoles",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "nonInteractiveElementInteractiveRoles",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/no-noninteractive-element-to-interactive-role"
		}
	},
	"nonInteractiveElementTabIndexes": {
		"eslint": [
			{
				"name": "jsx-a11y/no-noninteractive-tabindex",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-noninteractive-tabindex.md"
			}
		],
		"flint": {
			"name": "nonInteractiveElementTabIndexes",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/no-noninteractive-tabindex",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-noninteractive-tabindex.html"
			}
		],
		"raw": {
			"Flint Name": "nonInteractiveElementTabIndexes",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/no-noninteractive-tabindex",
			"Oxlint Name": "jsx_a11y/no-noninteractive-tabindex"
		}
	},
	"roleRedundancies": {
		"eslint": [
			{
				"name": "jsx-a11y/no-redundant-roles",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-redundant-roles.md"
			}
		],
		"flint": {
			"name": "roleRedundancies",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/no-redundant-roles",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-redundant-roles.html"
			}
		],
		"raw": {
			"Flint Name": "roleRedundancies",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/no-redundant-roles",
			"Oxlint Name": "jsx_a11y/no-redundant-roles"
		}
	},
	"roleRequiredAriaProps": {
		"eslint": [
			{
				"name": "jsx-a11y/role-has-required-aria-props",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/role-has-required-aria-props.md"
			}
		],
		"flint": {
			"name": "roleRequiredAriaProps",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/role-has-required-aria-props",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/role-has-required-aria-props.html"
			}
		],
		"raw": {
			"Flint Name": "roleRequiredAriaProps",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/role-has-required-aria-props",
			"Oxlint Name": "jsx_a11y/role-has-required-aria-props"
		}
	},
	"roleTags": {
		"eslint": [
			{
				"name": "jsx-a11y/prefer-tag-over-role",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/prefer-tag-over-role.md"
			}
		],
		"flint": {
			"name": "roleTags",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/prefer-tag-over-role",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/prefer-tag-over-role.html"
			}
		],
		"raw": {
			"Flint Name": "roleTags",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "jsx-a11y/prefer-tag-over-role",
			"Oxlint Name": "jsx_a11y/prefer-tag-over-role"
		}
	},
	"ruleSupportedAriaProps": {
		"eslint": [
			{
				"name": "jsx-a11y/role-supports-aria-props",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/role-supports-aria-props.md"
			}
		],
		"flint": {
			"name": "ruleSupportedAriaProps",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/role-supports-aria-props",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/role-supports-aria-props.html"
			}
		],
		"raw": {
			"Flint Name": "ruleSupportedAriaProps",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/role-supports-aria-props",
			"Oxlint Name": "jsx_a11y/role-supports-aria-props"
		}
	},
	"scopeProps": {
		"eslint": [
			{
				"name": "jsx-a11y/scope",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/scope.md"
			}
		],
		"flint": {
			"name": "scopeProps",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/scope",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/scope.html"
			}
		],
		"raw": {
			"Flint Name": "scopeProps",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/scope",
			"Oxlint Name": "jsx_a11y/scope"
		}
	},
	"staticElementInteractions": {
		"eslint": [
			{
				"name": "jsx-a11y/no-static-element-interactions",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-static-element-interactions.md"
			}
		],
		"flint": {
			"name": "staticElementInteractions",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "staticElementInteractions",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/no-static-element-interactions"
		}
	},
	"svgTitles": {
		"biome": [
			{
				"name": "noSvgWithoutTitle",
				"url": "https://biomejs.dev/linter/rules/noSvgWithoutTitle"
			}
		],
		"flint": {
			"name": "svgTitles",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "svgTitles",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"Biome Name": "noSvgWithoutTitle"
		}
	},
	"tabIndexPositiveValues": {
		"eslint": [
			{
				"name": "jsx-a11y/tabindex-no-positive",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/tabindex-no-positive.md"
			}
		],
		"flint": {
			"name": "tabIndexPositiveValues",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/tabindex-no-positive",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/tabindex-no-positive.html"
			}
		],
		"raw": {
			"Flint Name": "tabIndexPositiveValues",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"ESLint Name": "jsx-a11y/tabindex-no-positive",
			"Oxlint Name": "jsx_a11y/tabindex-no-positive"
		}
	},
	"validElementChildren": {
		"deno": [
			{
				"name": "jsx-void-dom-elements-no-children",
				"url": "https://docs.deno.com/lint/rules/jsx-void-dom-elements-no-children"
			}
		],
		"flint": {
			"name": "validElementChildren",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "validElementChildren",
			"Flint Plugin": "JSX",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"Deno Lint Name": "jsx-void-dom-elements-no-children"
		}
	},
	"buttonTypes": {
		"deno": [
			{
				"name": "button-has-type",
				"url": "https://docs.deno.com/lint/rules/button-has-type"
			},
			{
				"name": "jsx-button-has-type",
				"url": "https://docs.deno.com/lint/rules/jsx-button-has-type"
			}
		],
		"flint": {
			"name": "buttonTypes",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "buttonTypes",
			"Flint Plugin": "JSX",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "button-has-type; jsx-button-has-type"
		}
	},
	"childrenProps": {
		"deno": [
			{
				"name": "jsx-no-children-prop",
				"url": "https://docs.deno.com/lint/rules/jsx-no-children-prop"
			}
		],
		"flint": {
			"name": "childrenProps",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "childrenProps",
			"Flint Plugin": "JSX",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "jsx-no-children-prop"
		}
	},
	"commentTextNodes": {
		"deno": [
			{
				"name": "jsx-no-comment-text-nodes",
				"url": "https://docs.deno.com/lint/rules/jsx-no-comment-text-nodes"
			}
		],
		"flint": {
			"name": "commentTextNodes",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "commentTextNodes",
			"Flint Plugin": "JSX",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "jsx-no-comment-text-nodes"
		}
	},
	"iterableKeys": {
		"deno": [
			{
				"name": "jsx-key",
				"url": "https://docs.deno.com/lint/rules/jsx-key"
			}
		],
		"flint": {
			"name": "iterableKeys",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "iterableKeys",
			"Flint Plugin": "JSX",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "jsx-key"
		}
	},
	"misleadingSemicolons": {
		"biome": [
			{
				"name": "noSuspiciousSemicolonInJsx",
				"url": "https://biomejs.dev/linter/rules/noSuspiciousSemicolonInJsx"
			}
		],
		"flint": {
			"name": "misleadingSemicolons",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "misleadingSemicolons",
			"Flint Plugin": "JSX",
			"Flint Preset": "Not implementing",
			"Biome Name": "noSuspiciousSemicolonInJsx"
		}
	},
	"booleanValues": {
		"deno": [
			{
				"name": "jsx-boolean-value",
				"url": "https://docs.deno.com/lint/rules/jsx-boolean-value"
			}
		],
		"flint": {
			"name": "booleanValues",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "booleanValues",
			"Flint Plugin": "JSX",
			"Flint Preset": "Stylistic",
			"Deno Lint Name": "jsx-boolean-value"
		}
	},
	"bracedStatements": {
		"deno": [
			{
				"name": "jsx-curly-braces",
				"url": "https://docs.deno.com/lint/rules/jsx-curly-braces"
			}
		],
		"flint": {
			"name": "bracedStatements",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "bracedStatements",
			"Flint Plugin": "JSX",
			"Flint Preset": "Stylistic",
			"Deno Lint Name": "jsx-curly-braces"
		}
	},
	"unescapedEntities": {
		"deno": [
			{
				"name": "jsx-no-unescaped-entities",
				"url": "https://docs.deno.com/lint/rules/jsx-no-unescaped-entities"
			}
		],
		"flint": {
			"name": "unescapedEntities",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "unescapedEntities",
			"Flint Plugin": "JSX",
			"Flint Preset": "Stylistic",
			"Deno Lint Name": "jsx-no-unescaped-entities"
		}
	},
	"unnecessaryFragments": {
		"deno": [
			{
				"name": "jsx-no-useless-fragment",
				"url": "https://docs.deno.com/lint/rules/jsx-no-useless-fragment"
			}
		],
		"flint": {
			"name": "unnecessaryFragments",
			"plugin": {
				"code": "jsx",
				"name": "JSX"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "unnecessaryFragments",
			"Flint Plugin": "JSX",
			"Flint Preset": "Stylistic",
			"Deno Lint Name": "jsx-no-useless-fragment"
		}
	},
	"definitionContents": {
		"eslint": [
			{
				"name": "markdown/no-empty-definitions",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-empty-definitions.md"
			}
		],
		"flint": {
			"name": "definitionContents",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "definitionContents",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"ESLint Name": "markdown/no-empty-definitions"
		}
	},
	"definitionDuplicates": {
		"eslint": [
			{
				"name": "markdown/no-duplicate-definitions",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-duplicate-definitions.md"
			}
		],
		"flint": {
			"name": "definitionDuplicates",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "definitionDuplicates",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"ESLint Name": "markdown/no-duplicate-definitions"
		}
	},
	"definitionUses": {
		"eslint": [
			{
				"name": "markdown/no-unused-definitions",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-unused-definitions.md"
			}
		],
		"flint": {
			"name": "definitionUses",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "definitionUses",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"ESLint Name": "markdown/no-unused-definitions"
		}
	},
	"headingIncrements": {
		"eslint": [
			{
				"name": "markdown/heading-increment",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/heading-increment.md"
			}
		],
		"flint": {
			"implemented": true,
			"name": "headingIncrements",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "headingIncrements",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"ESLint Name": "markdown/heading-increment"
		}
	},
	"headingsRootDuplicates": {
		"eslint": [
			{
				"name": "markdown/no-multiple-h1",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-multiple-h1.md"
			}
		],
		"flint": {
			"name": "headingsRootDuplicates",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "headingsRootDuplicates",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "markdown/no-multiple-h1"
		}
	},
	"imageAltTexts": {
		"eslint": [
			{
				"name": "markdown/require-alt-text",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/require-alt-text.md"
			}
		],
		"flint": {
			"name": "imageAltTexts",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "imageAltTexts",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"ESLint Name": "markdown/require-alt-text"
		}
	},
	"imageContents": {
		"eslint": [
			{
				"name": "markdown/no-empty-images",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-empty-images.md"
			}
		],
		"flint": {
			"name": "imageContents",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "imageContents",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"ESLint Name": "markdown/no-empty-images"
		}
	},
	"labelReferences": {
		"eslint": [
			{
				"name": "markdown/no-missing-label-refs",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-missing-label-refs.md"
			}
		],
		"flint": {
			"name": "labelReferences",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "labelReferences",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"ESLint Name": "markdown/no-missing-label-refs"
		}
	},
	"labelReferenceValidity": {
		"eslint": [
			{
				"name": "markdown/no-invalid-label-refs",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-invalid-label-refs.md"
			}
		],
		"flint": {
			"name": "labelReferenceValidity",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "labelReferenceValidity",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"ESLint Name": "markdown/no-invalid-label-refs"
		}
	},
	"linkContents": {
		"eslint": [
			{
				"name": "markdown/no-empty-links",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-empty-links.md"
			}
		],
		"flint": {
			"name": "linkContents",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "linkContents",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"ESLint Name": "markdown/no-empty-links"
		}
	},
	"linkFragments": {
		"eslint": [
			{
				"name": "markdown/no-missing-link-fragments",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-missing-link-fragments.md"
			}
		],
		"flint": {
			"name": "linkFragments",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "linkFragments",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"ESLint Name": "markdown/no-missing-link-fragments"
		}
	},
	"referenceLikeUrls": {
		"eslint": [
			{
				"name": "markdown/no-reference-like-url",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-reference-like-url.md"
			}
		],
		"flint": {
			"name": "referenceLikeUrls",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "referenceLikeUrls",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"ESLint Name": "markdown/no-reference-like-url"
		}
	},
	"tableColumnCounts": {
		"eslint": [
			{
				"name": "markdown/table-column-count",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/table-column-count.md"
			}
		],
		"flint": {
			"name": "tableColumnCounts",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "tableColumnCounts",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Logical",
			"ESLint Name": "markdown/table-column-count"
		}
	},
	"emphasisMarkerSpacing": {
		"eslint": [
			{
				"name": "markdown/no-space-in-emphasis",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-space-in-emphasis.md"
			}
		],
		"flint": {
			"name": "emphasisMarkerSpacing",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "emphasisMarkerSpacing",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Not implementing",
			"ESLint Name": "markdown/no-space-in-emphasis"
		}
	},
	"headingSpaces": {
		"eslint": [
			{
				"name": "markdown/no-missing-atx-heading-space",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-missing-atx-heading-space.md"
			}
		],
		"flint": {
			"name": "headingSpaces",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Not implementing"
		},
		"notes": "I intend to write a Prettier plugin.",
		"raw": {
			"Flint Name": "headingSpaces",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Not implementing",
			"ESLint Name": "markdown/no-missing-atx-heading-space",
			"Notes": "I intend to write a Prettier plugin."
		}
	},
	"html": {
		"eslint": [
			{
				"name": "markdown/no-html",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-html.md"
			}
		],
		"flint": {
			"name": "html",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "html",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Not implementing",
			"ESLint Name": "markdown/no-html"
		}
	},
	"bareUrls": {
		"eslint": [
			{
				"name": "markdown/no-bare-urls",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-bare-urls.md"
			}
		],
		"flint": {
			"name": "bareUrls",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "bareUrls",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "markdown/no-bare-urls"
		}
	},
	"fencedCodeLanguages": {
		"eslint": [
			{
				"name": "markdown/fenced-code-language",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/fenced-code-language.md"
			}
		],
		"flint": {
			"name": "fencedCodeLanguages",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "fencedCodeLanguages",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "markdown/fenced-code-language"
		}
	},
	"headingDuplicates": {
		"eslint": [
			{
				"name": "markdown/no-duplicate-headings",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-duplicate-headings.md"
			}
		],
		"flint": {
			"name": "headingDuplicates",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"notes": "Enable with Markdownlint's siblings_only equivalent",
		"raw": {
			"Flint Name": "headingDuplicates",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "markdown/no-duplicate-headings",
			"Notes": "Enable with Markdownlint's siblings_only equivalent"
		}
	},
	"mediaSyntaxReversals": {
		"eslint": [
			{
				"name": "markdown/no-reversed-media-syntax",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-reversed-media-syntax.md"
			}
		],
		"flint": {
			"name": "mediaSyntaxReversals",
			"plugin": {
				"code": "md",
				"name": "Markdown"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "mediaSyntaxReversals",
			"Flint Plugin": "Markdown",
			"Flint Preset": "Stylistic",
			"ESLint Name": "markdown/no-reversed-media-syntax"
		}
	},
	"bufferAllocators": {
		"eslint": [
			{
				"name": "unicorn/no-new-buffer",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-new-buffer.md"
			}
		],
		"flint": {
			"name": "bufferAllocators",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-new-buffer",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-new-buffer.html"
			}
		],
		"raw": {
			"Flint Name": "bufferAllocators",
			"Flint Plugin": "Node",
			"Flint Preset": "Logical",
			"ESLint Name": "unicorn/no-new-buffer",
			"Oxlint Name": "unicorn/no-new-buffer"
		}
	},
	"exportsAssignments": {
		"eslint": [
			{
				"name": "n/no-exports-assign",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-exports-assign.md"
			}
		],
		"flint": {
			"name": "exportsAssignments",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "node/no-exports-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/node/no-exports-assign.html"
			}
		],
		"raw": {
			"Flint Name": "exportsAssignments",
			"Flint Plugin": "Node",
			"Flint Preset": "Logical",
			"ESLint Name": "n/no-exports-assign",
			"Oxlint Name": "node/no-exports-assign"
		}
	},
	"hashbangs": {
		"eslint": [
			{
				"name": "n/hashbang",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/hashbang.md"
			}
		],
		"flint": {
			"name": "hashbangs",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "hashbangs",
			"Flint Plugin": "Node",
			"Flint Preset": "Logical",
			"ESLint Name": "n/hashbang"
		}
	},
	"nodeProtocols": {
		"biome": [
			{
				"name": "useNodejsImportProtocol",
				"url": "https://biomejs.dev/linter/rules/useNodejsImportProtocol"
			}
		],
		"eslint": [
			{
				"name": "import/enforce-node-protocol-usage",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/enforce-node-protocol-usage.md"
			},
			{
				"name": "n/prefer-node-protocol",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-node-protocol.md"
			},
			{
				"name": "unicorn/prefer-node-protocol",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-node-protocol.md"
			}
		],
		"flint": {
			"name": "nodeProtocols",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-node-protocol",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-node-protocol.html"
			}
		],
		"raw": {
			"Flint Name": "nodeProtocols",
			"Flint Plugin": "Node",
			"Flint Preset": "Logical",
			"Biome Name": "useNodejsImportProtocol",
			"ESLint Name": "import/enforce-node-protocol-usage; n/prefer-node-protocol; unicorn/prefer-node-protocol",
			"Oxlint Name": "unicorn/prefer-node-protocol"
		}
	},
	"processExists": {
		"eslint": [
			{
				"name": "n/no-process-exit",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-process-exit.md"
			},
			{
				"name": "unicorn/no-process-exit",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-process-exit.md"
			}
		],
		"flint": {
			"name": "processExists",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-process-exit",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-process-exit.html"
			}
		],
		"raw": {
			"Flint Name": "processExists",
			"Flint Plugin": "Node",
			"Flint Preset": "Logical",
			"ESLint Name": "n/no-process-exit; unicorn/no-process-exit",
			"Oxlint Name": "unicorn/no-process-exit"
		}
	},
	"unpublishedBins": {
		"eslint": [
			{
				"name": "n/no-unpublished-bin",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-bin.md"
			}
		],
		"flint": {
			"name": "unpublishedBins",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "unpublishedBins",
			"Flint Plugin": "Node",
			"Flint Preset": "Logical",
			"ESLint Name": "n/no-unpublished-bin"
		}
	},
	"unpublishedImports": {
		"eslint": [
			{
				"name": "n/no-unpublished-import",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-import.md"
			}
		],
		"flint": {
			"name": "unpublishedImports",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "unpublishedImports",
			"Flint Plugin": "Node",
			"Flint Preset": "Logical",
			"ESLint Name": "n/no-unpublished-import"
		}
	},
	"unsupportedGlobals": {
		"eslint": [
			{
				"name": "n/no-unsupported-features/es-builtins",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features.md"
			}
		],
		"flint": {
			"name": "unsupportedGlobals",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "unsupportedGlobals",
			"Flint Plugin": "Node",
			"Flint Preset": "Logical",
			"ESLint Name": "n/no-unsupported-features/es-builtins"
		}
	},
	"unsupportedNodeAPIs": {
		"eslint": [
			{
				"name": "n/no-unsupported-features/node-builtins",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features.md"
			}
		],
		"flint": {
			"name": "unsupportedNodeAPIs",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "unsupportedNodeAPIs",
			"Flint Plugin": "Node",
			"Flint Preset": "Logical",
			"ESLint Name": "n/no-unsupported-features/node-builtins"
		}
	},
	"unsupportedSyntax": {
		"eslint": [
			{
				"name": "n/no-unsupported-features/es-syntax",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features.md"
			}
		],
		"flint": {
			"name": "unsupportedSyntax",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "unsupportedSyntax",
			"Flint Plugin": "Node",
			"Flint Preset": "Logical",
			"ESLint Name": "n/no-unsupported-features/es-syntax"
		}
	},
	"importFileExtensions": {
		"biome": [
			{
				"name": "useImportExtensions",
				"url": "https://biomejs.dev/linter/rules/useImportExtensions"
			}
		],
		"deno": [
			{
				"name": "no-sloppy-imports",
				"url": "https://docs.deno.com/lint/rules/no-sloppy-imports"
			}
		],
		"eslint": [
			{
				"name": "n/file-extension-in-import",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/file-extension-in-import.md"
			}
		],
		"flint": {
			"name": "importFileExtensions",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "import/extensions",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/extensions.html"
			}
		],
		"raw": {
			"Flint Name": "importFileExtensions",
			"Flint Plugin": "Node",
			"Flint Preset": "None",
			"Biome Name": "useImportExtensions",
			"Deno Lint Name": "no-sloppy-imports",
			"ESLint Name": "n/file-extension-in-import",
			"Oxlint Name": "import/extensions"
		}
	},
	"assertStrict": {
		"biome": [
			{
				"name": "useNodeAssertStrict",
				"url": "https://biomejs.dev/linter/rules/useNodeAssertStrict"
			}
		],
		"flint": {
			"name": "assertStrict",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "assertStrict",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"Biome Name": "useNodeAssertStrict"
		}
	},
	"callbackErrorHandling": {
		"eslint": [
			{
				"name": "n/handle-callback-err",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/handle-callback-err.md"
			}
		],
		"flint": {
			"name": "callbackErrorHandling",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "callbackErrorHandling",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/handle-callback-err"
		}
	},
	"callbackErrorLiterals": {
		"eslint": [
			{
				"name": "n/no-callback-literal",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-callback-literal.md"
			}
		],
		"flint": {
			"name": "callbackErrorLiterals",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "callbackErrorLiterals",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/no-callback-literal"
		}
	},
	"callbackReturns": {
		"eslint": [
			{
				"name": "n/callback-return",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/callback-return.md"
			}
		],
		"flint": {
			"name": "callbackReturns",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "callbackReturns",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/callback-return"
		}
	},
	"deprecatedAPIs": {
		"deno": [
			{
				"name": "no-deprecated-deno-api",
				"url": "https://docs.deno.com/lint/rules/no-deprecated-deno-api"
			}
		],
		"eslint": [
			{
				"name": "n/no-deprecated-api",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-deprecated-api.md"
			}
		],
		"flint": {
			"name": "deprecatedAPIs",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by deprecated",
		"raw": {
			"Flint Name": "deprecatedAPIs",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "no-deprecated-deno-api",
			"ESLint Name": "n/no-deprecated-api",
			"Notes": "Superseded by deprecated"
		}
	},
	"exportsStyle": {
		"eslint": [
			{
				"name": "n/exports-style",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/exports-style.md"
			}
		],
		"flint": {
			"name": "exportsStyle",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"notes": "CJS-specific",
		"raw": {
			"Flint Name": "exportsStyle",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/exports-style",
			"Notes": "CJS-specific"
		}
	},
	"extraneousImports": {
		"eslint": [
			{
				"name": "n/no-extraneous-import",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-extraneous-import.md"
			}
		],
		"flint": {
			"name": "extraneousImports",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by Knip",
		"raw": {
			"Flint Name": "extraneousImports",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/no-extraneous-import",
			"Notes": "Superseded by Knip"
		}
	},
	"extraneousRequires": {
		"eslint": [
			{
				"name": "n/no-extraneous-require",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-extraneous-require.md"
			}
		],
		"flint": {
			"name": "extraneousRequires",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by Knip",
		"raw": {
			"Flint Name": "extraneousRequires",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/no-extraneous-require",
			"Notes": "Superseded by Knip"
		}
	},
	"globalBuffer": {
		"eslint": [
			{
				"name": "n/prefer-global/buffer",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalBuffer",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "globalBuffer",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/prefer-global/buffer"
		}
	},
	"globalConsole": {
		"eslint": [
			{
				"name": "n/prefer-global/console",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalConsole",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "globalConsole",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/prefer-global/console"
		}
	},
	"globalProcess": {
		"biome": [
			{
				"name": "noProcessGlobal",
				"url": "https://biomejs.dev/linter/rules/noProcessGlobal"
			}
		],
		"deno": [
			{
				"name": "no-process-global",
				"url": "https://docs.deno.com/lint/rules/no-process-global"
			}
		],
		"eslint": [
			{
				"name": "n/prefer-global/process",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalProcess",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "globalProcess",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"Biome Name": "noProcessGlobal",
			"Deno Lint Name": "no-process-global",
			"ESLint Name": "n/prefer-global/process"
		}
	},
	"globalTextDecoder": {
		"eslint": [
			{
				"name": "n/prefer-global/text-decoder",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalTextDecoder",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "globalTextDecoder",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/prefer-global/text-decoder"
		}
	},
	"globalTextEncoder": {
		"eslint": [
			{
				"name": "n/prefer-global/text-encoder",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalTextEncoder",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "globalTextEncoder",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/prefer-global/text-encoder"
		}
	},
	"globalURL": {
		"eslint": [
			{
				"name": "n/prefer-global/url-search-params",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalURL",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "globalURL",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/prefer-global/url-search-params"
		}
	},
	"globalURLSearchParams": {
		"eslint": [
			{
				"name": "n/prefer-global/url-search-params",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalURLSearchParams",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "globalURLSearchParams",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/prefer-global/url-search-params"
		}
	},
	"missingImports": {
		"eslint": [
			{
				"name": "n/no-missing-import",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-missing-import.md"
			}
		],
		"flint": {
			"name": "missingImports",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "missingImports",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/no-missing-import"
		}
	},
	"missingRequires": {
		"eslint": [
			{
				"name": "n/no-missing-require",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-missing-require.md"
			}
		],
		"flint": {
			"name": "missingRequires",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "missingRequires",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/no-missing-require"
		}
	},
	"mixedRequires": {
		"eslint": [
			{
				"name": "n/no-mixed-requires",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-mixed-requires.md"
			}
		],
		"flint": {
			"name": "mixedRequires",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by ESM and ordering rules",
		"raw": {
			"Flint Name": "mixedRequires",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/no-mixed-requires",
			"Notes": "Superseded by ESM and ordering rules"
		}
	},
	"newRequires": {
		"eslint": [
			{
				"name": "n/no-new-requires",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-new-requires.md"
			}
		],
		"flint": {
			"name": "newRequires",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "node/no-new-require",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/node/no-new-require.html"
			}
		],
		"raw": {
			"Flint Name": "newRequires",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/no-new-requires",
			"Oxlint Name": "node/no-new-require"
		}
	},
	"pathConcatenations": {
		"eslint": [
			{
				"name": "n/no-path-concat",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-path-concat.md"
			}
		],
		"flint": {
			"name": "pathConcatenations",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "pathConcatenations",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/no-path-concat"
		}
	},
	"processEnvs": {
		"eslint": [
			{
				"name": "n/no-process-env",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-process-env.md"
			}
		],
		"flint": {
			"name": "processEnvs",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "processEnvs",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/no-process-env"
		}
	},
	"processExitThrows": {
		"eslint": [
			{
				"name": "n/process-exit-as-throw",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/process-exit-as-throw.md"
			}
		],
		"flint": {
			"name": "processExitThrows",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "processExitThrows",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/process-exit-as-throw"
		}
	},
	"promiseCallbackFunctions": {
		"eslint": [
			{
				"name": "promise/no-callback-in-promise",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/no-callback-in-promise.md"
			}
		],
		"flint": {
			"name": "promiseCallbackFunctions",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/no-callback-in-promise",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-callback-in-promise.html"
			}
		],
		"raw": {
			"Flint Name": "promiseCallbackFunctions",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "promise/no-callback-in-promise",
			"Oxlint Name": "promise/no-callback-in-promise"
		}
	},
	"promisesDNS": {
		"eslint": [
			{
				"name": "n/prefer-promises/dns",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-promises.md"
			}
		],
		"flint": {
			"name": "promisesDNS",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "promisesDNS",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/prefer-promises/dns"
		}
	},
	"promisesFS": {
		"eslint": [
			{
				"name": "n/prefer-promises/fs",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-promises.md"
			}
		],
		"flint": {
			"name": "promisesFS",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "promisesFS",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/prefer-promises/fs"
		}
	},
	"restrictedImports": {
		"biome": [
			{
				"name": "noRestrictedImports",
				"url": "https://biomejs.dev/linter/rules/noRestrictedImports"
			}
		],
		"eslint": [
			{
				"name": "no-restricted-imports",
				"url": "https://eslint.org/docs/latest/rules/no-restricted-imports"
			},
			{
				"name": "@typescript-eslint/no-restricted-imports",
				"url": "https://typescript-eslint.io/rules/no-restricted-imports"
			}
		],
		"flint": {
			"name": "restrictedImports",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "eslint/no-restricted-imports",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-restricted-imports.html"
			}
		],
		"raw": {
			"Flint Name": "restrictedImports",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "None",
			"Biome Name": "noRestrictedImports",
			"ESLint Name": "no-restricted-imports; @typescript-eslint/no-restricted-imports",
			"Oxlint Name": "eslint/no-restricted-imports"
		}
	},
	"restrictedRequires": {
		"eslint": [
			{
				"name": "n/no-restricted-require",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-restricted-require.md"
			}
		],
		"flint": {
			"name": "restrictedRequires",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "restrictedRequires",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/no-restricted-require"
		}
	},
	"synchronousMethods": {
		"eslint": [
			{
				"name": "n/no-sync",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-sync.md"
			}
		],
		"flint": {
			"name": "synchronousMethods",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "synchronousMethods",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/no-sync"
		}
	},
	"topLevelAwaits": {
		"eslint": [
			{
				"name": "unicorn/prefer-top-level-await",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-top-level-await.md"
			}
		],
		"flint": {
			"name": "topLevelAwaits",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "topLevelAwaits",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-top-level-await"
		}
	},
	"topLevelRequires": {
		"eslint": [
			{
				"name": "n/global-require",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/global-require.md"
			}
		],
		"flint": {
			"name": "topLevelRequires",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"notes": "CJS-specific",
		"raw": {
			"Flint Name": "topLevelRequires",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/global-require",
			"Notes": "CJS-specific"
		}
	},
	"unpublishedRequires": {
		"eslint": [
			{
				"name": "n/no-unpublished-require",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-require.md"
			}
		],
		"flint": {
			"name": "unpublishedRequires",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "unpublishedRequires",
			"Flint Plugin": "Node",
			"Flint Preset": "Not implementing",
			"ESLint Name": "n/no-unpublished-require"
		}
	},
	"assertStyles": {
		"eslint": [
			{
				"name": "unicorn/consistent-assert",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/consistent-assert.md"
			}
		],
		"flint": {
			"name": "assertStyles",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/consistent-assert",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-assert.html"
			}
		],
		"raw": {
			"Flint Name": "assertStyles",
			"Flint Plugin": "Node",
			"Flint Preset": "Stylistic",
			"ESLint Name": "unicorn/consistent-assert",
			"Oxlint Name": "unicorn/consistent-assert"
		}
	},
	"blobReadingMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-blob-reading-methods",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-blob-reading-methods.md"
			}
		],
		"flint": {
			"name": "blobReadingMethods",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-blob-reading-methods",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-blob-reading-methods.html"
			}
		],
		"raw": {
			"Flint Name": "blobReadingMethods",
			"Flint Plugin": "Node",
			"Flint Preset": "Stylistic",
			"ESLint Name": "unicorn/prefer-blob-reading-methods",
			"Oxlint Name": "unicorn/prefer-blob-reading-methods"
		}
	},
	"consoleSpaces": {
		"eslint": [
			{
				"name": "unicorn/no-console-spaces",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-console-spaces.md"
			}
		],
		"flint": {
			"name": "consoleSpaces",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-console-spaces",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-console-spaces.html"
			}
		],
		"raw": {
			"Flint Name": "consoleSpaces",
			"Flint Plugin": "Node",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/no-console-spaces",
			"Oxlint Name": "unicorn/no-console-spaces"
		}
	},
	"filePathsFromImportMeta": {
		"eslint": [
			{
				"name": "unicorn/prefer-import-meta-properties",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-import-meta-properties.md"
			}
		],
		"flint": {
			"name": "filePathsFromImportMeta",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "filePathsFromImportMeta",
			"Flint Plugin": "Node",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-import-meta-properties"
		}
	},
	"fileReadJSONBuffers": {
		"eslint": [
			{
				"name": "unicorn/prefer-json-parse-buffer",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-json-parse-buffer.md"
			}
		],
		"flint": {
			"name": "fileReadJSONBuffers",
			"plugin": {
				"code": "node",
				"name": "Node"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "fileReadJSONBuffers",
			"Flint Plugin": "Node",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-json-parse-buffer"
		}
	},
	"authorValidity": {
		"eslint": [
			{
				"name": "package-json/valid-author",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-author.md"
			}
		],
		"flint": {
			"name": "authorValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "authorValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-author"
		}
	},
	"binValidity": {
		"eslint": [
			{
				"name": "package-json/valid-bin",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-bin.md"
			}
		],
		"flint": {
			"name": "binValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "binValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-bin"
		}
	},
	"bundleDependenciesValidity": {
		"eslint": [
			{
				"name": "package-json/valid-bundleDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-bundleDependencies.md"
			}
		],
		"flint": {
			"name": "bundleDependenciesValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "bundleDependenciesValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-bundleDependencies"
		}
	},
	"configValidity": {
		"eslint": [
			{
				"name": "package-json/valid-config",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-config.md"
			}
		],
		"flint": {
			"name": "configValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "configValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-config"
		}
	},
	"cpuValidity": {
		"eslint": [
			{
				"name": "package-json/valid-cpu",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-cpu.md"
			}
		],
		"flint": {
			"name": "cpuValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "cpuValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-cpu"
		}
	},
	"dependenciesValidity": {
		"eslint": [
			{
				"name": "package-json/valid-dependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-dependencies.md"
			}
		],
		"flint": {
			"name": "dependenciesValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "dependenciesValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-dependencies"
		}
	},
	"dependencyUniqueness": {
		"eslint": [
			{
				"name": "package-json/unique-dependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/unique-dependencies.md"
			}
		],
		"flint": {
			"name": "dependencyUniqueness",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "dependencyUniqueness",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/unique-dependencies"
		}
	},
	"descriptionPresence": {
		"eslint": [
			{
				"name": "package-json/require-description",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-description.md"
			}
		],
		"flint": {
			"name": "descriptionPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "descriptionPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/require-description"
		}
	},
	"descriptionValidity": {
		"eslint": [
			{
				"name": "package-json/valid-description",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-description.md"
			}
		],
		"flint": {
			"name": "descriptionValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "descriptionValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-description"
		}
	},
	"devDependenciesValidity": {
		"eslint": [
			{
				"name": "package-json/valid-devDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-devDependencies.md"
			}
		],
		"flint": {
			"name": "devDependenciesValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "devDependenciesValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-devDependencies"
		}
	},
	"directoriesValidity": {
		"eslint": [
			{
				"name": "package-json/valid-directories",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-directories.md"
			}
		],
		"flint": {
			"name": "directoriesValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "directoriesValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-directories"
		}
	},
	"emptyFields": {
		"eslint": [
			{
				"name": "package-json/no-empty-fields",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/no-empty-fields.md"
			}
		],
		"flint": {
			"name": "emptyFields",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "emptyFields",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/no-empty-fields"
		}
	},
	"exportsValidity": {
		"eslint": [
			{
				"name": "package-json/valid-exports",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-exports.md"
			}
		],
		"flint": {
			"name": "exportsValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "exportsValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-exports"
		}
	},
	"filesRedundancy": {
		"eslint": [
			{
				"name": "package-json/no-redundant-files",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/no-redundant-files.md"
			}
		],
		"flint": {
			"name": "filesRedundancy",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "filesRedundancy",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/no-redundant-files"
		}
	},
	"filesValidity": {
		"eslint": [
			{
				"name": "package-json/valid-files",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-files.md"
			}
		],
		"flint": {
			"name": "filesValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "filesValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-files"
		}
	},
	"homepageValidity": {
		"eslint": [
			{
				"name": "package-json/valid-homepage",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-homepage.md"
			}
		],
		"flint": {
			"name": "homepageValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "homepageValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-homepage"
		}
	},
	"keywordsValidity": {
		"eslint": [
			{
				"name": "package-json/valid-keywords",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-keywords.md"
			}
		],
		"flint": {
			"name": "keywordsValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "keywordsValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-keywords"
		}
	},
	"licenseRequired": {
		"eslint": [
			{
				"name": "package-json/license-required",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/license-required.md"
			}
		],
		"flint": {
			"name": "licenseRequired",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "licenseRequired",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/license-required"
		}
	},
	"licenseValidity": {
		"eslint": [
			{
				"name": "package-json/valid-license",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-license.md"
			}
		],
		"flint": {
			"name": "licenseValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "licenseValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-license"
		}
	},
	"mainValidity": {
		"eslint": [
			{
				"name": "package-json/valid-main",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-main.md"
			}
		],
		"flint": {
			"name": "mainValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "mainValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-main"
		}
	},
	"manValidity": {
		"eslint": [
			{
				"name": "package-json/valid-man",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-man.md"
			}
		],
		"flint": {
			"name": "manValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "manValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-man"
		}
	},
	"namePresence": {
		"eslint": [
			{
				"name": "package-json/require-name",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-name.md"
			}
		],
		"flint": {
			"name": "namePresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "namePresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/require-name"
		}
	},
	"nameValidity": {
		"eslint": [
			{
				"name": "package-json/valid-name",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-name.md"
			}
		],
		"flint": {
			"name": "nameValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "nameValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-name"
		}
	},
	"optionalDependenciesValidity": {
		"eslint": [
			{
				"name": "package-json/valid-optionalDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-optionalDependencies.md"
			}
		],
		"flint": {
			"name": "optionalDependenciesValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "optionalDependenciesValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-optionalDependencies"
		}
	},
	"osValidity": {
		"eslint": [
			{
				"name": "package-json/valid-os",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-os.md"
			}
		],
		"flint": {
			"name": "osValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "osValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-os"
		}
	},
	"peerDependenciesValidity": {
		"eslint": [
			{
				"name": "package-json/valid-peerDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-peerDependencies.md"
			}
		],
		"flint": {
			"name": "peerDependenciesValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "peerDependenciesValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-peerDependencies"
		}
	},
	"privateValidity": {
		"eslint": [
			{
				"name": "package-json/valid-private",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-private.md"
			}
		],
		"flint": {
			"name": "privateValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "privateValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-private"
		}
	},
	"propertyOrdering": {
		"eslint": [
			{
				"name": "package-json/order-properties",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/order-properties.md"
			}
		],
		"flint": {
			"name": "propertyOrdering",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "propertyOrdering",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/order-properties"
		}
	},
	"publishConfigValidity": {
		"eslint": [
			{
				"name": "package-json/valid-publishConfig",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-publishConfig.md"
			}
		],
		"flint": {
			"name": "publishConfigValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "publishConfigValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-publishConfig"
		}
	},
	"repositoryDirectoryValidity": {
		"eslint": [
			{
				"name": "package-json/valid-repository-directory",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-repository-directory.md"
			}
		],
		"flint": {
			"name": "repositoryDirectoryValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "repositoryDirectoryValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-repository-directory"
		}
	},
	"repositoryShorthand": {
		"eslint": [
			{
				"name": "package-json/repository-shorthand",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/repository-shorthand.md"
			}
		],
		"flint": {
			"name": "repositoryShorthand",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "repositoryShorthand",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/repository-shorthand"
		}
	},
	"repositoryValidity": {
		"eslint": [
			{
				"name": "package-json/valid-repository",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-repository.md"
			}
		],
		"flint": {
			"name": "repositoryValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "repositoryValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-repository"
		}
	},
	"scriptsValidity": {
		"eslint": [
			{
				"name": "package-json/valid-scripts",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-scripts.md"
			}
		],
		"flint": {
			"name": "scriptsValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "scriptsValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-scripts"
		}
	},
	"typePresence": {
		"eslint": [
			{
				"name": "package-json/require-type",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-type.md"
			}
		],
		"flint": {
			"name": "typePresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "typePresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/require-type"
		}
	},
	"typeRequired": {
		"eslint": [
			{
				"name": "package-json/type-required",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/type-required.md"
			}
		],
		"flint": {
			"name": "typeRequired",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "typeRequired",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/type-required"
		}
	},
	"typeValidity": {
		"eslint": [
			{
				"name": "package-json/valid-type",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-type.md"
			}
		],
		"flint": {
			"name": "typeValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "typeValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-type"
		}
	},
	"versionPresence": {
		"eslint": [
			{
				"name": "package-json/require-version",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-version.md"
			}
		],
		"flint": {
			"name": "versionPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "versionPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/require-version"
		}
	},
	"versionValidity": {
		"eslint": [
			{
				"name": "package-json/valid-version",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-version.md"
			}
		],
		"flint": {
			"name": "versionValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "versionValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-version"
		}
	},
	"workspacesValidity": {
		"eslint": [
			{
				"name": "package-json/valid-workspaces",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-workspaces.md"
			}
		],
		"flint": {
			"name": "workspacesValidity",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "workspacesValidity",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "Logical",
			"ESLint Name": "package-json/valid-workspaces"
		}
	},
	"authorPresence": {
		"eslint": [
			{
				"name": "package-json/require-author",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-author.md"
			}
		],
		"flint": {
			"name": "authorPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "authorPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "None",
			"ESLint Name": "package-json/require-author"
		}
	},
	"bugsPresence": {
		"eslint": [
			{
				"name": "package-json/require-bugs",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-bugs.md"
			}
		],
		"flint": {
			"name": "bugsPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "bugsPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "None",
			"ESLint Name": "package-json/require-bugs"
		}
	},
	"bundleDependenciesPresence": {
		"eslint": [
			{
				"name": "package-json/require-bundleDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-bundleDependencies.md"
			}
		],
		"flint": {
			"name": "bundleDependenciesPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "bundleDependenciesPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "None",
			"ESLint Name": "package-json/require-bundleDependencies"
		}
	},
	"dependenciesPresence": {
		"eslint": [
			{
				"name": "package-json/require-dependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-dependencies.md"
			}
		],
		"flint": {
			"name": "dependenciesPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "dependenciesPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "None",
			"ESLint Name": "package-json/require-dependencies"
		}
	},
	"dependencyRanges": {
		"eslint": [
			{
				"name": "package-json/restrict-dependency-ranges",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/restrict-dependency-ranges.md"
			}
		],
		"flint": {
			"name": "dependencyRanges",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "dependencyRanges",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "None",
			"ESLint Name": "package-json/restrict-dependency-ranges"
		}
	},
	"devDependenciesPresence": {
		"eslint": [
			{
				"name": "package-json/require-devDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-devDependencies.md"
			}
		],
		"flint": {
			"name": "devDependenciesPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "devDependenciesPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "None",
			"ESLint Name": "package-json/require-devDependencies"
		}
	},
	"enginesPresence": {
		"eslint": [
			{
				"name": "package-json/require-engines",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-engines.md"
			}
		],
		"flint": {
			"name": "enginesPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "enginesPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "None",
			"ESLint Name": "package-json/require-engines"
		}
	},
	"filesPresence": {
		"eslint": [
			{
				"name": "package-json/require-files",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-files.md"
			}
		],
		"flint": {
			"name": "filesPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "filesPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "None",
			"ESLint Name": "package-json/require-files"
		}
	},
	"keywordsPresence": {
		"eslint": [
			{
				"name": "package-json/require-keywords",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-keywords.md"
			}
		],
		"flint": {
			"name": "keywordsPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "keywordsPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "None",
			"ESLint Name": "package-json/require-keywords"
		}
	},
	"optionalDependenciesPresence": {
		"eslint": [
			{
				"name": "package-json/require-optionalDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-optionalDependencies.md"
			}
		],
		"flint": {
			"name": "optionalDependenciesPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "optionalDependenciesPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "None",
			"ESLint Name": "package-json/require-optionalDependencies"
		}
	},
	"peerDependenciesPresence": {
		"eslint": [
			{
				"name": "package-json/require-peerDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-peerDependencies.md"
			}
		],
		"flint": {
			"name": "peerDependenciesPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "peerDependenciesPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "None",
			"ESLint Name": "package-json/require-peerDependencies"
		}
	},
	"typesPresence": {
		"eslint": [
			{
				"name": "package-json/require-types",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-types.md"
			}
		],
		"flint": {
			"name": "typesPresence",
			"plugin": {
				"code": "package-json",
				"name": "PackageJSON"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "typesPresence",
			"Flint Plugin": "PackageJSON",
			"Flint Preset": "None",
			"ESLint Name": "package-json/require-types"
		}
	},
	"deletes": {
		"biome": [
			{
				"name": "noDelete",
				"url": "https://biomejs.dev/linter/rules/noDelete"
			}
		],
		"flint": {
			"name": "deletes",
			"plugin": {
				"code": "performance",
				"name": "Performance"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "deletes",
			"Flint Plugin": "Performance",
			"Flint Preset": "Logical",
			"Biome Name": "noDelete"
		}
	},
	"importedNamespaceDynamicAccesses": {
		"biome": [
			{
				"name": "noDynamicNamespaceImportAccess",
				"url": "https://biomejs.dev/linter/rules/noDynamicNamespaceImportAccess"
			}
		],
		"flint": {
			"name": "importedNamespaceDynamicAccesses",
			"plugin": {
				"code": "performance",
				"name": "Performance"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "importedNamespaceDynamicAccesses",
			"Flint Plugin": "Performance",
			"Flint Preset": "Logical",
			"Biome Name": "noDynamicNamespaceImportAccess"
		}
	},
	"spreadAccumulators": {
		"biome": [
			{
				"name": "noAccumulatingSpread",
				"url": "https://biomejs.dev/linter/rules/noAccumulatingSpread"
			}
		],
		"flint": {
			"name": "spreadAccumulators",
			"plugin": {
				"code": "performance",
				"name": "Performance"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/no-accumulating-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-accumulating-spread.html"
			}
		],
		"raw": {
			"Flint Name": "spreadAccumulators",
			"Flint Plugin": "Performance",
			"Flint Preset": "Logical",
			"Biome Name": "noAccumulatingSpread",
			"Oxlint Name": "oxc/no-accumulating-spread"
		}
	},
	"mappedObjectSpreads": {
		"flint": {
			"name": "mappedObjectSpreads",
			"plugin": {
				"code": "performance",
				"name": "Performance"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/no-map-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-map-spread.html"
			}
		],
		"raw": {
			"Flint Name": "mappedObjectSpreads",
			"Flint Plugin": "Performance",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "oxc/no-map-spread"
		}
	},
	"arrayIncludes": {
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-includes",
				"url": "https://typescript-eslint.io/rules/prefer-includes"
			}
		],
		"flint": {
			"name": "arrayIncludes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "@typescript-eslint/prefer-includes",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/@typescript-eslint/prefer-includes.html"
			}
		],
		"raw": {
			"Flint Name": "arrayIncludes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "@typescript-eslint/prefer-includes",
			"Oxlint Name": "@typescript-eslint/prefer-includes"
		}
	},
	"classes": {
		"biome": [
			{
				"name": "useSortedClasses",
				"url": "https://biomejs.dev/linter/rules/useSortedClasses"
			}
		],
		"eslint": [
			{
				"name": "perfectionist/sort-classes",
				"url": "https://perfectionist.dev/rules/sort-classes"
			}
		],
		"flint": {
			"name": "classes",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "classes",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"Biome Name": "useSortedClasses",
			"ESLint Name": "perfectionist/sort-classes"
		}
	},
	"decorators": {
		"eslint": [
			{
				"name": "perfectionist/sort-decorators",
				"url": "https://perfectionist.dev/rules/sort-decorators"
			}
		],
		"flint": {
			"name": "decorators",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "decorators",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-decorators"
		}
	},
	"enums": {
		"biome": [
			{
				"name": "noEnum",
				"url": "https://biomejs.dev/linter/rules/noEnum"
			}
		],
		"eslint": [
			{
				"name": "erasable-syntax-only/enums",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-erasable-syntax-only/blob/HEAD/docs/rules/enums.md"
			}
		],
		"flint": {
			"name": "enums",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "enums",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noEnum",
			"ESLint Name": "erasable-syntax-only/enums"
		}
	},
	"exports": {
		"eslint": [
			{
				"name": "perfectionist/sort-named-exports",
				"url": "https://perfectionist.dev/rules/sort-named-exports"
			}
		],
		"flint": {
			"name": "exports",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "exports",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-named-exports"
		}
	},
	"heritageClauses": {
		"eslint": [
			{
				"name": "perfectionist/sort-heritage-clauses",
				"url": "https://perfectionist.dev/rules/sort-heritage-clauses"
			}
		],
		"flint": {
			"name": "heritageClauses",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "heritageClauses",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-heritage-clauses"
		}
	},
	"importsSorting": {
		"eslint": [
			{
				"name": "sort-imports",
				"url": "https://eslint.org/docs/latest/rules/sort-imports"
			}
		],
		"flint": {
			"name": "importsSorting",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "importsSorting",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "sort-imports"
		}
	},
	"interfaces": {
		"eslint": [
			{
				"name": "perfectionist/sort-interfaces",
				"url": "https://perfectionist.dev/rules/sort-interfaces"
			}
		],
		"flint": {
			"name": "interfaces",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "interfaces",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-interfaces"
		}
	},
	"intersectionTypes": {
		"eslint": [
			{
				"name": "perfectionist/sort-intersection-types",
				"url": "https://perfectionist.dev/rules/sort-intersection-types"
			}
		],
		"flint": {
			"name": "intersectionTypes",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "intersectionTypes",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-intersection-types"
		}
	},
	"jsdocTags": {
		"eslint": [
			{
				"name": "jsdoc/sort-tags",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/sort-tags.md"
			}
		],
		"flint": {
			"name": "jsdocTags",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "jsdocTags",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/sort-tags"
		}
	},
	"jsonKeys": {
		"eslint": [
			{
				"name": "json/sort-keys",
				"url": "https://github.com/eslint/json/blob/main/docs/rules/sort-keys.md"
			},
			{
				"name": "jsonc/sort-keys",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/sort-keys.html"
			}
		],
		"flint": {
			"name": "jsonKeys",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "jsonKeys",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "json/sort-keys; jsonc/sort-keys"
		}
	},
	"jsxProps": {
		"eslint": [
			{
				"name": "perfectionist/sort-jsx-props",
				"url": "https://perfectionist.dev/rules/sort-jsx-props"
			}
		],
		"flint": {
			"name": "jsxProps",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "jsxProps",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-jsx-props"
		}
	},
	"maps": {
		"eslint": [
			{
				"name": "perfectionist/sort-maps",
				"url": "https://perfectionist.dev/rules/sort-maps"
			}
		],
		"flint": {
			"name": "maps",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "maps",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-maps"
		}
	},
	"modules": {
		"eslint": [
			{
				"name": "perfectionist/sort-modules",
				"url": "https://perfectionist.dev/rules/sort-modules"
			}
		],
		"flint": {
			"name": "modules",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "modules",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-modules"
		}
	},
	"objects": {
		"eslint": [
			{
				"name": "sort-keys",
				"url": "https://eslint.org/docs/latest/rules/sort-keys"
			},
			{
				"name": "perfectionist/sort-objects",
				"url": "https://perfectionist.dev/rules/sort-objects"
			}
		],
		"flint": {
			"name": "objects",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/sort-keys",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/sort-keys.html"
			}
		],
		"raw": {
			"Flint Name": "objects",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "sort-keys; perfectionist/sort-objects",
			"Oxlint Name": "eslint/sort-keys"
		}
	},
	"objectTypes": {
		"eslint": [
			{
				"name": "perfectionist/sort-object-types",
				"url": "https://perfectionist.dev/rules/sort-object-types"
			}
		],
		"flint": {
			"name": "objectTypes",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "objectTypes",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-object-types"
		}
	},
	"packageCollections": {
		"eslint": [
			{
				"name": "package-json/sort-collections",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/sort-collections.md"
			}
		],
		"flint": {
			"name": "packageCollections",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "packageCollections",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "package-json/sort-collections"
		}
	},
	"regexCharacterClasses": {
		"eslint": [
			{
				"name": "regexp/prefer-character-class",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-character-class.html"
			}
		],
		"flint": {
			"name": "regexCharacterClasses",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexCharacterClasses",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/prefer-character-class"
		}
	},
	"regexFlags": {
		"eslint": [
			{
				"name": "regexp/sort-flags",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/sort-flags.html"
			}
		],
		"flint": {
			"name": "regexFlags",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "regexFlags",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "regexp/sort-flags"
		}
	},
	"regexLists": {
		"eslint": [
			{
				"name": "regexp/sort-alternatives",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/sort-alternatives.html"
			}
		],
		"flint": {
			"name": "regexLists",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "regexLists",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "regexp/sort-alternatives"
		}
	},
	"sets": {
		"eslint": [
			{
				"name": "perfectionist/sort-sets",
				"url": "https://perfectionist.dev/rules/sort-sets"
			}
		],
		"flint": {
			"name": "sets",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "sets",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-sets"
		}
	},
	"switchCases": {
		"eslint": [
			{
				"name": "perfectionist/sort-switch-case",
				"url": "https://perfectionist.dev/rules/sort-switch-case"
			}
		],
		"flint": {
			"name": "switchCases",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "switchCases",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-switch-case"
		}
	},
	"unionTypes": {
		"eslint": [
			{
				"name": "perfectionist/sort-union-types",
				"url": "https://perfectionist.dev/rules/sort-union-types"
			}
		],
		"flint": {
			"name": "unionTypes",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "unionTypes",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-union-types"
		}
	},
	"variableDeclarations": {
		"eslint": [
			{
				"name": "perfectionist/sort-variable-declarations",
				"url": "https://perfectionist.dev/rules/sort-variable-declarations"
			}
		],
		"flint": {
			"name": "variableDeclarations",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "variableDeclarations",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "perfectionist/sort-variable-declarations"
		}
	},
	"ymlKeys": {
		"eslint": [
			{
				"name": "yml/sort-keys",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/sort-keys.html"
			}
		],
		"flint": {
			"name": "ymlKeys",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "ymlKeys",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "yml/sort-keys"
		}
	},
	"ymlSequenceValues": {
		"eslint": [
			{
				"name": "yml/sort-sequence-values",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/sort-sequence-values.html"
			}
		],
		"flint": {
			"name": "ymlSequenceValues",
			"plugin": {
				"code": "sorting",
				"name": "Sorting"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "ymlSequenceValues",
			"Flint Plugin": "Sorting",
			"Flint Preset": "Stylistic",
			"ESLint Name": "yml/sort-sequence-values"
		}
	},
	"accessorThisRecursion": {
		"eslint": [
			{
				"name": "unicorn/no-accessor-recursion",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-accessor-recursion.md"
			}
		],
		"flint": {
			"name": "accessorThisRecursion",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-accessor-recursion",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-accessor-recursion.html"
			}
		],
		"raw": {
			"Flint Name": "accessorThisRecursion",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/no-accessor-recursion",
			"Oxlint Name": "unicorn/no-accessor-recursion"
		}
	},
	"anyArguments": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-argument",
				"url": "https://typescript-eslint.io/rules/no-unsafe-argument"
			}
		],
		"flint": {
			"name": "anyArguments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-argument",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-argument.html"
			}
		],
		"raw": {
			"Flint Name": "anyArguments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unsafe-argument",
			"Oxlint Name": "typescript/no-unsafe-argument"
		}
	},
	"anyAssignments": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-assignment",
				"url": "https://typescript-eslint.io/rules/no-unsafe-assignment"
			}
		],
		"flint": {
			"name": "anyAssignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-assignment",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-assignment.html"
			}
		],
		"raw": {
			"Flint Name": "anyAssignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unsafe-assignment",
			"Oxlint Name": "typescript/no-unsafe-assignment"
		}
	},
	"anyCalls": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-call",
				"url": "https://typescript-eslint.io/rules/no-unsafe-call"
			}
		],
		"flint": {
			"name": "anyCalls",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-call",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-call.html"
			}
		],
		"raw": {
			"Flint Name": "anyCalls",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unsafe-call",
			"Oxlint Name": "typescript/no-unsafe-call"
		}
	},
	"anyMemberAccess": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-member-access",
				"url": "https://typescript-eslint.io/rules/no-unsafe-member-access"
			}
		],
		"flint": {
			"name": "anyMemberAccess",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-member-access",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-member-access.html"
			}
		],
		"raw": {
			"Flint Name": "anyMemberAccess",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unsafe-member-access",
			"Oxlint Name": "typescript/no-unsafe-member-access"
		}
	},
	"anyReturns": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-return",
				"url": "https://typescript-eslint.io/rules/no-unsafe-return"
			}
		],
		"flint": {
			"name": "anyReturns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-return.html"
			}
		],
		"raw": {
			"Flint Name": "anyReturns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unsafe-return",
			"Oxlint Name": "typescript/no-unsafe-return"
		}
	},
	"arguments": {
		"biome": [
			{
				"name": "noArguments",
				"url": "https://biomejs.dev/linter/rules/noArguments"
			}
		],
		"eslint": [
			{
				"name": "prefer-rest-params",
				"url": "https://eslint.org/docs/latest/rules/prefer-rest-params"
			}
		],
		"flint": {
			"name": "arguments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-rest-params",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-rest-params.html"
			}
		],
		"raw": {
			"Flint Name": "arguments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noArguments",
			"ESLint Name": "prefer-rest-params",
			"Oxlint Name": "eslint/prefer-rest-params"
		}
	},
	"arrayConstructors": {
		"biome": [
			{
				"name": "useArrayLiterals",
				"url": "https://biomejs.dev/linter/rules/useArrayLiterals"
			}
		],
		"deno": [
			{
				"name": "no-array-constructor",
				"url": "https://docs.deno.com/lint/rules/no-array-constructor"
			}
		],
		"eslint": [
			{
				"name": "no-array-constructor",
				"url": "https://eslint.org/docs/latest/rules/no-array-constructor"
			},
			{
				"name": "@typescript-eslint/no-array-constructor",
				"url": "https://typescript-eslint.io/rules/no-array-constructor"
			},
			{
				"name": "unicorn/no-new-array",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-new-array.md"
			}
		],
		"flint": {
			"name": "arrayConstructors",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-array-constructor",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-array-constructor.html"
			},
			{
				"name": "unicorn/no-new-array",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-new-array.html"
			}
		],
		"raw": {
			"Flint Name": "arrayConstructors",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useArrayLiterals",
			"Deno Lint Name": "no-array-constructor",
			"ESLint Name": "no-array-constructor; @typescript-eslint/no-array-constructor; unicorn/no-new-array",
			"Oxlint Name": "eslint/no-array-constructor; unicorn/no-new-array"
		}
	},
	"arrayElementDeletions": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-array-delete",
				"url": "https://typescript-eslint.io/rules/no-array-delete"
			}
		],
		"flint": {
			"name": "arrayElementDeletions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-array-delete",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-array-delete.html"
			}
		],
		"raw": {
			"Flint Name": "arrayElementDeletions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-array-delete",
			"Oxlint Name": "typescript/no-array-delete"
		}
	},
	"arrayEmptyCallbackSlots": {
		"flint": {
			"name": "arrayEmptyCallbackSlots",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/uninvoked-array-callback",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/uninvoked-array-callback.html"
			}
		],
		"raw": {
			"Flint Name": "arrayEmptyCallbackSlots",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Oxlint Name": "oxc/uninvoked-array-callback"
		}
	},
	"arrayMapIdentities": {
		"biome": [
			{
				"name": "noFlatMapIdentity",
				"url": "https://biomejs.dev/linter/rules/noFlatMapIdentity"
			}
		],
		"flint": {
			"name": "arrayMapIdentities",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "arrayMapIdentities",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noFlatMapIdentity"
		}
	},
	"arrayUnnecessaryLengthChecks": {
		"eslint": [
			{
				"name": "unicorn/no-useless-length-check",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-useless-length-check.md"
			}
		],
		"flint": {
			"name": "arrayUnnecessaryLengthChecks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-useless-length-check",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-length-check.html"
			}
		],
		"raw": {
			"Flint Name": "arrayUnnecessaryLengthChecks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "unicorn/no-useless-length-check",
			"Oxlint Name": "unicorn/no-useless-length-check"
		}
	},
	"asyncFunctionAwaits": {
		"biome": [
			{
				"name": "useAwait",
				"url": "https://biomejs.dev/linter/rules/useAwait"
			}
		],
		"deno": [
			{
				"name": "require-await",
				"url": "https://docs.deno.com/lint/rules/require-await"
			}
		],
		"eslint": [
			{
				"name": "require-await",
				"url": "https://eslint.org/docs/latest/rules/require-await"
			},
			{
				"name": "@typescript-eslint/require-await",
				"url": "https://typescript-eslint.io/rules/require-await"
			}
		],
		"flint": {
			"name": "asyncFunctionAwaits",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/require-await",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/require-await.html"
			},
			{
				"name": "typescript/require-await",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/require-await.html"
			}
		],
		"raw": {
			"Flint Name": "asyncFunctionAwaits",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useAwait",
			"Deno Lint Name": "require-await",
			"ESLint Name": "require-await; @typescript-eslint/require-await",
			"Oxlint Name": "eslint/require-await; typescript/require-await"
		}
	},
	"asyncPromiseExecutors": {
		"biome": [
			{
				"name": "noAsyncPromiseExecutor",
				"url": "https://biomejs.dev/linter/rules/noAsyncPromiseExecutor"
			}
		],
		"deno": [
			{
				"name": "no-async-promise-executor",
				"url": "https://docs.deno.com/lint/rules/no-async-promise-executor"
			}
		],
		"eslint": [
			{
				"name": "no-async-promise-executor",
				"url": "https://eslint.org/docs/latest/rules/no-async-promise-executor"
			}
		],
		"flint": {
			"name": "asyncPromiseExecutors",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-async-promise-executor",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-async-promise-executor.html"
			}
		],
		"raw": {
			"Flint Name": "asyncPromiseExecutors",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noAsyncPromiseExecutor",
			"Deno Lint Name": "no-async-promise-executor",
			"ESLint Name": "no-async-promise-executor",
			"Oxlint Name": "eslint/no-async-promise-executor"
		}
	},
	"asyncUnnecessaryPromiseWrappers": {
		"eslint": [
			{
				"name": "unicorn/no-useless-promise-resolve-reject",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-useless-promise-resolve-reject.md"
			}
		],
		"flint": {
			"name": "asyncUnnecessaryPromiseWrappers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-useless-promise-resolve-reject",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-promise-resolve-reject.html"
			}
		],
		"raw": {
			"Flint Name": "asyncUnnecessaryPromiseWrappers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "unicorn/no-useless-promise-resolve-reject",
			"Oxlint Name": "unicorn/no-useless-promise-resolve-reject"
		}
	},
	"awaitInsidePromiseMethods": {
		"eslint": [
			{
				"name": "unicorn/no-await-in-promise-methods",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-await-in-promise-methods.md"
			}
		],
		"flint": {
			"name": "awaitInsidePromiseMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-await-in-promise-methods",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-await-in-promise-methods.html"
			}
		],
		"raw": {
			"Flint Name": "awaitInsidePromiseMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/no-await-in-promise-methods",
			"Oxlint Name": "unicorn/no-await-in-promise-methods"
		}
	},
	"awaitThenable": {
		"eslint": [
			{
				"name": "@typescript-eslint/await-thenable",
				"url": "https://typescript-eslint.io/rules/await-thenable"
			},
			{
				"name": "unicorn/no-unnecessary-await",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-unnecessary-await.md"
			}
		],
		"flint": {
			"name": "awaitThenable",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/await-thenable",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/await-thenable.html"
			},
			{
				"name": "unicorn/no-unnecessary-await",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unnecessary-await.html"
			}
		],
		"raw": {
			"Flint Name": "awaitThenable",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/await-thenable; unicorn/no-unnecessary-await",
			"Oxlint Name": "typescript/await-thenable; unicorn/no-unnecessary-await"
		}
	},
	"caseDuplicates": {
		"biome": [
			{
				"name": "noDuplicateCase",
				"url": "https://biomejs.dev/linter/rules/noDuplicateCase"
			}
		],
		"deno": [
			{
				"name": "no-duplicate-case",
				"url": "https://docs.deno.com/lint/rules/no-duplicate-case"
			}
		],
		"eslint": [
			{
				"name": "no-duplicate-case",
				"url": "https://eslint.org/docs/latest/rules/no-duplicate-case"
			}
		],
		"flint": {
			"name": "caseDuplicates",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-duplicate-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-duplicate-case.html"
			}
		],
		"raw": {
			"Flint Name": "caseDuplicates",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noDuplicateCase",
			"Deno Lint Name": "no-duplicate-case",
			"ESLint Name": "no-duplicate-case",
			"Oxlint Name": "eslint/no-duplicate-case"
		}
	},
	"caseFallthroughs": {
		"biome": [
			{
				"name": "noFallthroughSwitchClause",
				"url": "https://biomejs.dev/linter/rules/noFallthroughSwitchClause"
			}
		],
		"deno": [
			{
				"name": "no-fallthrough",
				"url": "https://docs.deno.com/lint/rules/no-fallthrough"
			}
		],
		"eslint": [
			{
				"name": "no-fallthrough",
				"url": "https://eslint.org/docs/latest/rules/no-fallthrough"
			}
		],
		"flint": {
			"name": "caseFallthroughs",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-fallthrough",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-fallthrough.html"
			}
		],
		"raw": {
			"Flint Name": "caseFallthroughs",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noFallthroughSwitchClause",
			"Deno Lint Name": "no-fallthrough",
			"ESLint Name": "no-fallthrough",
			"Oxlint Name": "eslint/no-fallthrough"
		}
	},
	"catchCallbackTypes": {
		"eslint": [
			{
				"name": "@typescript-eslint/use-unknown-in-catch-callback-variable",
				"url": "https://typescript-eslint.io/rules/use-unknown-in-catch-callback-variable"
			}
		],
		"flint": {
			"name": "catchCallbackTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/use-unknown-in-catch-callback-variable",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/use-unknown-in-catch-callback-variable.html"
			}
		],
		"raw": {
			"Flint Name": "catchCallbackTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/use-unknown-in-catch-callback-variable",
			"Oxlint Name": "typescript/use-unknown-in-catch-callback-variable"
		}
	},
	"caughtErrorCauses": {
		"eslint": [
			{
				"name": "preserve-caught-error",
				"url": "https://eslint.org/docs/latest/rules/preserve-caught-error"
			}
		],
		"flint": {
			"name": "caughtErrorCauses",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "caughtErrorCauses",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "preserve-caught-error"
		}
	},
	"charAtComparisons": {
		"flint": {
			"name": "charAtComparisons",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/bad-char-at-comparison",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-char-at-comparison.html"
			}
		],
		"raw": {
			"Flint Name": "charAtComparisons",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Oxlint Name": "oxc/bad-char-at-comparison"
		}
	},
	"constVariables": {
		"biome": [
			{
				"name": "useConst",
				"url": "https://biomejs.dev/linter/rules/useConst"
			}
		],
		"deno": [
			{
				"name": "prefer-const",
				"url": "https://docs.deno.com/lint/rules/prefer-const"
			}
		],
		"eslint": [
			{
				"name": "prefer-const",
				"url": "https://eslint.org/docs/latest/rules/prefer-const"
			}
		],
		"flint": {
			"name": "constVariables",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "constVariables",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useConst",
			"Deno Lint Name": "prefer-const",
			"ESLint Name": "prefer-const"
		}
	},
	"dateConstructorClones": {
		"eslint": [
			{
				"name": "unicorn/consistent-date-clone",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/consistent-date-clone.md"
			}
		],
		"flint": {
			"name": "dateConstructorClones",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"notes": "unicorn/consistent-date-clone",
		"raw": {
			"Flint Name": "dateConstructorClones",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "unicorn/consistent-date-clone",
			"Notes": "unicorn/consistent-date-clone"
		}
	},
	"dateNowTimestamps": {
		"biome": [
			{
				"name": "useDateNow",
				"url": "https://biomejs.dev/linter/rules/useDateNow"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-date-now",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-date-now.md"
			}
		],
		"flint": {
			"name": "dateNowTimestamps",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-date-now",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-date-now.html"
			}
		],
		"raw": {
			"Flint Name": "dateNowTimestamps",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"Biome Name": "useDateNow",
			"ESLint Name": "unicorn/prefer-date-now",
			"Oxlint Name": "unicorn/prefer-date-now"
		}
	},
	"debugger": {
		"biome": [
			{
				"name": "noDebugger",
				"url": "https://biomejs.dev/linter/rules/noDebugger"
			}
		],
		"deno": [
			{
				"name": "no-debugger",
				"url": "https://docs.deno.com/lint/rules/no-debugger"
			}
		],
		"eslint": [
			{
				"name": "no-debugger",
				"url": "https://eslint.org/docs/latest/rules/no-debugger"
			}
		],
		"flint": {
			"name": "debugger",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-debugger",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-debugger.html"
			}
		],
		"raw": {
			"Flint Name": "debugger",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noDebugger",
			"Deno Lint Name": "no-debugger",
			"ESLint Name": "no-debugger",
			"Oxlint Name": "eslint/no-debugger"
		}
	},
	"defaultCaseLast": {
		"biome": [
			{
				"name": "useDefaultSwitchClauseLast",
				"url": "https://biomejs.dev/linter/rules/useDefaultSwitchClauseLast"
			}
		],
		"eslint": [
			{
				"name": "default-case-last",
				"url": "https://eslint.org/docs/latest/rules/default-case-last"
			}
		],
		"flint": {
			"name": "defaultCaseLast",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/default-case-last",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/default-case-last.html"
			}
		],
		"raw": {
			"Flint Name": "defaultCaseLast",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useDefaultSwitchClauseLast",
			"ESLint Name": "default-case-last",
			"Oxlint Name": "eslint/default-case-last"
		}
	},
	"deprecated": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-deprecated",
				"url": "https://typescript-eslint.io/rules/no-deprecated"
			}
		],
		"flint": {
			"name": "deprecated",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "deprecated",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-deprecated"
		}
	},
	"directivePairs": {
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/disable-enable-pair",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directivePairs",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "directivePairs",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "@eslint-community/eslint-comments/disable-enable-pair"
		}
	},
	"dynamicDeletes": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-dynamic-delete",
				"url": "https://typescript-eslint.io/rules/no-dynamic-delete"
			}
		],
		"flint": {
			"name": "dynamicDeletes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-dynamic-delete",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-dynamic-delete.html"
			}
		],
		"raw": {
			"Flint Name": "dynamicDeletes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-dynamic-delete",
			"Oxlint Name": "typescript/no-dynamic-delete"
		}
	},
	"elseIfDuplicates": {
		"biome": [
			{
				"name": "noDuplicateElseIf",
				"url": "https://biomejs.dev/linter/rules/noDuplicateElseIf"
			}
		],
		"eslint": [
			{
				"name": "no-dupe-else-if",
				"url": "https://eslint.org/docs/latest/rules/no-dupe-else-if"
			}
		],
		"flint": {
			"name": "elseIfDuplicates",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-dupe-else-if",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-dupe-else-if.html"
			}
		],
		"raw": {
			"Flint Name": "elseIfDuplicates",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noDuplicateElseIf",
			"ESLint Name": "no-dupe-else-if",
			"Oxlint Name": "eslint/no-dupe-else-if"
		}
	},
	"emptyDestructures": {
		"biome": [
			{
				"name": "noEmptyPattern",
				"url": "https://biomejs.dev/linter/rules/noEmptyPattern"
			}
		],
		"deno": [
			{
				"name": "no-empty-pattern",
				"url": "https://docs.deno.com/lint/rules/no-empty-pattern"
			}
		],
		"eslint": [
			{
				"name": "no-empty-pattern",
				"url": "https://eslint.org/docs/latest/rules/no-empty-pattern"
			}
		],
		"flint": {
			"name": "emptyDestructures",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-empty-pattern",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty-pattern.html"
			}
		],
		"raw": {
			"Flint Name": "emptyDestructures",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noEmptyPattern",
			"Deno Lint Name": "no-empty-pattern",
			"ESLint Name": "no-empty-pattern",
			"Oxlint Name": "eslint/no-empty-pattern"
		}
	},
	"emptyEnums": {
		"deno": [
			{
				"name": "no-empty-enum",
				"url": "https://docs.deno.com/lint/rules/no-empty-enum"
			}
		],
		"flint": {
			"name": "emptyEnums",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "emptyEnums",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Deno Lint Name": "no-empty-enum"
		}
	},
	"emptyExports": {
		"biome": [
			{
				"name": "noUselessEmptyExport",
				"url": "https://biomejs.dev/linter/rules/noUselessEmptyExport"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-useless-empty-export",
				"url": "https://typescript-eslint.io/rules/no-useless-empty-export"
			}
		],
		"flint": {
			"name": "emptyExports",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-useless-empty-export",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-useless-empty-export.html"
			}
		],
		"raw": {
			"Flint Name": "emptyExports",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUselessEmptyExport",
			"ESLint Name": "@typescript-eslint/no-useless-empty-export",
			"Oxlint Name": "typescript/no-useless-empty-export"
		}
	},
	"emptyObjectTypes": {
		"biome": [
			{
				"name": "noBannedTypes",
				"url": "https://biomejs.dev/linter/rules/noBannedTypes"
			}
		],
		"deno": [
			{
				"name": "ban-types",
				"url": "https://docs.deno.com/lint/rules/ban-types"
			},
			{
				"name": "no-empty-interface",
				"url": "https://docs.deno.com/lint/rules/no-empty-interface"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-empty-object-type",
				"url": "https://typescript-eslint.io/rules/no-empty-object-type"
			}
		],
		"flint": {
			"name": "emptyObjectTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/ban-types",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/ban-types.html"
			},
			{
				"name": "typescript/no-empty-object-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-empty-object-type.html"
			},
			{
				"name": "typescript/no-empty-interface",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-empty-interface.html"
			}
		],
		"raw": {
			"Flint Name": "emptyObjectTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noBannedTypes",
			"Deno Lint Name": "ban-types; no-empty-interface",
			"ESLint Name": "@typescript-eslint/no-empty-object-type",
			"Oxlint Name": "typescript/ban-types; typescript/no-empty-object-type; typescript/no-empty-interface"
		}
	},
	"enumMemberLiterals": {
		"biome": [
			{
				"name": "useLiteralEnumMembers",
				"url": "https://biomejs.dev/linter/rules/useLiteralEnumMembers"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-literal-enum-member",
				"url": "https://typescript-eslint.io/rules/prefer-literal-enum-member"
			}
		],
		"flint": {
			"name": "enumMemberLiterals",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-literal-enum-member",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-literal-enum-member.html"
			}
		],
		"raw": {
			"Flint Name": "enumMemberLiterals",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useLiteralEnumMembers",
			"ESLint Name": "@typescript-eslint/prefer-literal-enum-member",
			"Oxlint Name": "typescript/prefer-literal-enum-member"
		}
	},
	"enumMixedValues": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-misused-spread",
				"url": "https://typescript-eslint.io/rules/no-misused-spread"
			}
		],
		"flint": {
			"name": "enumMixedValues",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-misused-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-misused-spread.html"
			}
		],
		"raw": {
			"Flint Name": "enumMixedValues",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-misused-spread",
			"Oxlint Name": "typescript/no-misused-spread"
		}
	},
	"enumValueConsistency": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-mixed-enums",
				"url": "https://typescript-eslint.io/rules/no-mixed-enums"
			}
		],
		"flint": {
			"name": "enumValueConsistency",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-mixed-enums",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-mixed-enums.html"
			}
		],
		"raw": {
			"Flint Name": "enumValueConsistency",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-mixed-enums",
			"Oxlint Name": "typescript/no-mixed-enums"
		}
	},
	"enumValueDuplicates": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-duplicate-enum-values",
				"url": "https://typescript-eslint.io/rules/no-duplicate-enum-values"
			}
		],
		"flint": {
			"name": "enumValueDuplicates",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-duplicate-enum-values",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-duplicate-enum-values.html"
			}
		],
		"raw": {
			"Flint Name": "enumValueDuplicates",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-duplicate-enum-values",
			"Oxlint Name": "typescript/no-duplicate-enum-values"
		}
	},
	"equalityOperators": {
		"biome": [
			{
				"name": "noDoubleEquals",
				"url": "https://biomejs.dev/linter/rules/noDoubleEquals"
			}
		],
		"deno": [
			{
				"name": "eqeqeq",
				"url": "https://docs.deno.com/lint/rules/eqeqeq"
			}
		],
		"eslint": [
			{
				"name": "eqeqeq",
				"url": "https://eslint.org/docs/latest/rules/eqeqeq"
			}
		],
		"flint": {
			"name": "equalityOperators",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"notes": "Default ESLint's \"smart\" to true",
		"oxlint": [
			{
				"name": "eslint/eqeqeq",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/eqeqeq.html"
			}
		],
		"raw": {
			"Flint Name": "equalityOperators",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noDoubleEquals",
			"Deno Lint Name": "eqeqeq",
			"ESLint Name": "eqeqeq",
			"Oxlint Name": "eslint/eqeqeq",
			"Notes": "Default ESLint's \"smart\" to true"
		}
	},
	"errorMessages": {
		"biome": [
			{
				"name": "useErrorMessage",
				"url": "https://biomejs.dev/linter/rules/useErrorMessage"
			}
		],
		"eslint": [
			{
				"name": "unicorn/error-message",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/error-message.md"
			}
		],
		"flint": {
			"name": "errorMessages",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/error-message",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/error-message.html"
			}
		],
		"raw": {
			"Flint Name": "errorMessages",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"Biome Name": "useErrorMessage",
			"ESLint Name": "unicorn/error-message",
			"Oxlint Name": "unicorn/error-message"
		}
	},
	"errorSubclassProperties": {
		"eslint": [
			{
				"name": "unicorn/custom-error-definition",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/custom-error-definition.md"
			}
		],
		"flint": {
			"name": "errorSubclassProperties",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "errorSubclassProperties",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/custom-error-definition"
		}
	},
	"errorUnnecessaryCaptureStackTraces": {
		"eslint": [
			{
				"name": "unicorn/no-useless-error-capture-stack-trace",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-useless-error-capture-stack-trace.md"
			}
		],
		"flint": {
			"name": "errorUnnecessaryCaptureStackTraces",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "errorUnnecessaryCaptureStackTraces",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "unicorn/no-useless-error-capture-stack-trace"
		}
	},
	"evals": {
		"biome": [
			{
				"name": "noGlobalEval",
				"url": "https://biomejs.dev/linter/rules/noGlobalEval"
			}
		],
		"deno": [
			{
				"name": "no-eval",
				"url": "https://docs.deno.com/lint/rules/no-eval"
			}
		],
		"eslint": [
			{
				"name": "no-eval",
				"url": "https://eslint.org/docs/latest/rules/no-eval"
			}
		],
		"flint": {
			"name": "evals",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-eval",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-eval.html"
			}
		],
		"raw": {
			"Flint Name": "evals",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noGlobalEval",
			"Deno Lint Name": "no-eval",
			"ESLint Name": "no-eval",
			"Oxlint Name": "eslint/no-eval"
		}
	},
	"exceptionAssignments": {
		"biome": [
			{
				"name": "noCatchAssign",
				"url": "https://biomejs.dev/linter/rules/noCatchAssign"
			}
		],
		"deno": [
			{
				"name": "no-ex-assign",
				"url": "https://docs.deno.com/lint/rules/no-ex-assign"
			}
		],
		"eslint": [
			{
				"name": "no-ex-assign",
				"url": "https://eslint.org/docs/latest/rules/no-ex-assign"
			}
		],
		"flint": {
			"name": "exceptionAssignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-ex-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-ex-assign.html"
			}
		],
		"raw": {
			"Flint Name": "exceptionAssignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noCatchAssign",
			"Deno Lint Name": "no-ex-assign",
			"ESLint Name": "no-ex-assign",
			"Oxlint Name": "eslint/no-ex-assign"
		}
	},
	"explicitAnys": {
		"biome": [
			{
				"name": "noExplicitAny",
				"url": "https://biomejs.dev/linter/rules/noExplicitAny"
			}
		],
		"deno": [
			{
				"name": "no-explicit-any",
				"url": "https://docs.deno.com/lint/rules/no-explicit-any"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-explicit-any",
				"url": "https://typescript-eslint.io/rules/no-explicit-any"
			}
		],
		"flint": {
			"name": "explicitAnys",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-explicit-any",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-explicit-any.html"
			}
		],
		"raw": {
			"Flint Name": "explicitAnys",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noExplicitAny",
			"Deno Lint Name": "no-explicit-any",
			"ESLint Name": "@typescript-eslint/no-explicit-any",
			"Oxlint Name": "typescript/no-explicit-any"
		}
	},
	"exportMutables": {
		"eslint": [
			{
				"name": "import/no-mutable-exports",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-mutable-exports.md"
			}
		],
		"flint": {
			"name": "exportMutables",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "import/no-mutable-exports",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-mutable-exports.html"
			}
		],
		"raw": {
			"Flint Name": "exportMutables",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "import/no-mutable-exports",
			"Oxlint Name": "import/no-mutable-exports"
		}
	},
	"extraneousClasses": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-extraneous-class",
				"url": "https://typescript-eslint.io/rules/no-extraneous-class"
			}
		],
		"flint": {
			"name": "extraneousClasses",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "typescript/no-extraneous-class",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-extraneous-class.html"
			}
		],
		"raw": {
			"Flint Name": "extraneousClasses",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "@typescript-eslint/no-extraneous-class",
			"Oxlint Name": "typescript/no-extraneous-class"
		}
	},
	"fetchMethodBodies": {
		"eslint": [
			{
				"name": "unicorn/no-invalid-fetch-options",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-invalid-fetch-options.md"
			}
		],
		"flint": {
			"name": "fetchMethodBodies",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-invalid-fetch-options",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-invalid-fetch-options.html"
			}
		],
		"raw": {
			"Flint Name": "fetchMethodBodies",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "unicorn/no-invalid-fetch-options",
			"Oxlint Name": "unicorn/no-invalid-fetch-options"
		}
	},
	"floatingPromises": {
		"biome": [
			{
				"name": "noFloatingPromises",
				"url": "https://biomejs.dev/linter/rules/noFloatingPromises"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-floating-promises",
				"url": "https://typescript-eslint.io/rules/no-floating-promises"
			}
		],
		"flint": {
			"name": "floatingPromises",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-floating-promises",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-floating-promises.html"
			}
		],
		"raw": {
			"Flint Name": "floatingPromises",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noFloatingPromises",
			"ESLint Name": "@typescript-eslint/no-floating-promises",
			"Oxlint Name": "typescript/no-floating-promises"
		}
	},
	"forInArrays": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-for-in-array",
				"url": "https://typescript-eslint.io/rules/no-for-in-array"
			}
		],
		"flint": {
			"implemented": true,
			"name": "forInArrays",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-for-in-array",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-for-in-array.html"
			}
		],
		"raw": {
			"Flint Name": "forInArrays",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-for-in-array",
			"Oxlint Name": "typescript/no-for-in-array"
		}
	},
	"functionNewCalls": {
		"eslint": [
			{
				"name": "no-new-func",
				"url": "https://eslint.org/docs/latest/rules/no-new-func"
			}
		],
		"flint": {
			"name": "functionNewCalls",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-new-func",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-new-func.html"
			}
		],
		"raw": {
			"Flint Name": "functionNewCalls",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "no-new-func",
			"Oxlint Name": "eslint/no-new-func"
		}
	},
	"generatorFunctionYields": {
		"biome": [
			{
				"name": "useYield",
				"url": "https://biomejs.dev/linter/rules/useYield"
			}
		],
		"deno": [
			{
				"name": "require-yield",
				"url": "https://docs.deno.com/lint/rules/require-yield"
			}
		],
		"eslint": [
			{
				"name": "require-yield",
				"url": "https://eslint.org/docs/latest/rules/require-yield"
			}
		],
		"flint": {
			"name": "generatorFunctionYields",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/require-yield",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/require-yield.html"
			}
		],
		"raw": {
			"Flint Name": "generatorFunctionYields",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useYield",
			"Deno Lint Name": "require-yield",
			"ESLint Name": "require-yield",
			"Oxlint Name": "eslint/require-yield"
		}
	},
	"getterSetterPairedTypes": {
		"eslint": [
			{
				"name": "@typescript-eslint/related-getter-setter-pairs",
				"url": "https://typescript-eslint.io/rules/related-getter-setter-pairs"
			}
		],
		"flint": {
			"name": "getterSetterPairedTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/related-getter-setter-pairs",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/related-getter-setter-pairs.html"
			}
		],
		"raw": {
			"Flint Name": "getterSetterPairedTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/related-getter-setter-pairs",
			"Oxlint Name": "typescript/related-getter-setter-pairs"
		}
	},
	"impliedEvals": {
		"eslint": [
			{
				"name": "no-implied-eval",
				"url": "https://eslint.org/docs/latest/rules/no-implied-eval"
			},
			{
				"name": "@typescript-eslint/no-implied-eval",
				"url": "https://typescript-eslint.io/rules/no-implied-eval"
			}
		],
		"flint": {
			"name": "impliedEvals",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-implied-eval",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-implied-eval.html"
			}
		],
		"raw": {
			"Flint Name": "impliedEvals",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "no-implied-eval; @typescript-eslint/no-implied-eval",
			"Oxlint Name": "typescript/no-implied-eval"
		}
	},
	"importDuplicates": {
		"eslint": [
			{
				"name": "import/no-duplicates",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-duplicates.md"
			}
		],
		"flint": {
			"name": "importDuplicates",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/no-duplicates",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-duplicates.html"
			}
		],
		"raw": {
			"Flint Name": "importDuplicates",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/no-duplicates",
			"Oxlint Name": "import/no-duplicates"
		}
	},
	"importEmptyBlocks": {
		"eslint": [
			{
				"name": "import/no-empty-named-blocks",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-empty-named-blocks.md"
			}
		],
		"flint": {
			"name": "importEmptyBlocks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "import/no-empty-named-blocks",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-empty-named-blocks.html"
			}
		],
		"raw": {
			"Flint Name": "importEmptyBlocks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "import/no-empty-named-blocks",
			"Oxlint Name": "import/no-empty-named-blocks"
		}
	},
	"importExtraneousDependencies": {
		"eslint": [
			{
				"name": "import/no-extraneous-dependencies",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-extraneous-dependencies.md"
			}
		],
		"flint": {
			"name": "importExtraneousDependencies",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "importExtraneousDependencies",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "import/no-extraneous-dependencies"
		}
	},
	"instanceOfArrays": {
		"biome": [
			{
				"name": "useIsArray",
				"url": "https://biomejs.dev/linter/rules/useIsArray"
			}
		],
		"eslint": [
			{
				"name": "unicorn/no-instanceof-builtins",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-instanceof-builtins.md"
			}
		],
		"flint": {
			"name": "instanceOfArrays",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"notes": "Only for built-ins with a static .is* (Array)",
		"oxlint": [
			{
				"name": "unicorn/no-instanceof-array",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-instanceof-array.html"
			},
			{
				"name": "unicorn/no-instanceof-builtins",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-instanceof-builtins.html"
			}
		],
		"raw": {
			"Flint Name": "instanceOfArrays",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useIsArray",
			"ESLint Name": "unicorn/no-instanceof-builtins",
			"Oxlint Name": "unicorn/no-instanceof-array; unicorn/no-instanceof-builtins",
			"Notes": "Only for built-ins with a static .is* (Array)"
		}
	},
	"invalidVoidTypes": {
		"biome": [
			{
				"name": "noConfusingVoidType",
				"url": "https://biomejs.dev/linter/rules/noConfusingVoidType"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-invalid-void-type",
				"url": "https://typescript-eslint.io/rules/no-invalid-void-type"
			}
		],
		"flint": {
			"name": "invalidVoidTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "invalidVoidTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"Biome Name": "noConfusingVoidType",
			"ESLint Name": "@typescript-eslint/no-invalid-void-type"
		}
	},
	"isNaNComparisons": {
		"biome": [
			{
				"name": "useIsNan",
				"url": "https://biomejs.dev/linter/rules/useIsNan"
			}
		],
		"deno": [
			{
				"name": "use-isnan",
				"url": "https://docs.deno.com/lint/rules/use-isnan"
			}
		],
		"eslint": [
			{
				"name": "use-isnan",
				"url": "https://eslint.org/docs/latest/rules/use-isnan"
			}
		],
		"flint": {
			"name": "isNaNComparisons",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/use-isnan",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/use-isnan.html"
			}
		],
		"raw": {
			"Flint Name": "isNaNComparisons",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useIsNan",
			"Deno Lint Name": "use-isnan",
			"ESLint Name": "use-isnan",
			"Oxlint Name": "eslint/use-isnan"
		}
	},
	"meaninglessVoidOperators": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-meaningless-void-operator",
				"url": "https://typescript-eslint.io/rules/no-meaningless-void-operator"
			}
		],
		"flint": {
			"name": "meaninglessVoidOperators",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-meaningless-void-operator",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-meaningless-void-operator.html"
			}
		],
		"raw": {
			"Flint Name": "meaninglessVoidOperators",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-meaningless-void-operator",
			"Oxlint Name": "typescript/no-meaningless-void-operator"
		}
	},
	"misleadingVoidExpressions": {
		"biome": [
			{
				"name": "noVoidTypeReturn",
				"url": "https://biomejs.dev/linter/rules/noVoidTypeReturn"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-confusing-void-expression",
				"url": "https://typescript-eslint.io/rules/no-confusing-void-expression"
			}
		],
		"flint": {
			"name": "misleadingVoidExpressions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-confusing-void-expression",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-confusing-void-expression.html"
			}
		],
		"raw": {
			"Flint Name": "misleadingVoidExpressions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noVoidTypeReturn",
			"ESLint Name": "@typescript-eslint/no-confusing-void-expression",
			"Oxlint Name": "typescript/no-confusing-void-expression"
		}
	},
	"misusedPromises": {
		"biome": [
			{
				"name": "noMisusedPromises",
				"url": "https://biomejs.dev/linter/rules/noMisusedPromises"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-misused-promises",
				"url": "https://typescript-eslint.io/rules/no-misused-promises"
			}
		],
		"flint": {
			"name": "misusedPromises",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-misused-promises",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-misused-promises.html"
			}
		],
		"raw": {
			"Flint Name": "misusedPromises",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noMisusedPromises",
			"ESLint Name": "@typescript-eslint/no-misused-promises",
			"Oxlint Name": "typescript/no-misused-promises"
		}
	},
	"moduleSpecifierLists": {
		"eslint": [
			{
				"name": "unicorn/require-module-specifiers",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/require-module-specifiers.md"
			}
		],
		"flint": {
			"name": "moduleSpecifierLists",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "moduleSpecifierLists",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "unicorn/require-module-specifiers"
		}
	},
	"namespaceDeclarations": {
		"biome": [
			{
				"name": "noNamespace",
				"url": "https://biomejs.dev/linter/rules/noNamespace"
			}
		],
		"deno": [
			{
				"name": "no-namespace",
				"url": "https://docs.deno.com/lint/rules/no-namespace"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-namespace",
				"url": "https://typescript-eslint.io/rules/no-namespace"
			}
		],
		"flint": {
			"implemented": true,
			"name": "namespaceDeclarations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-namespace",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-namespace.html"
			}
		],
		"raw": {
			"Flint Name": "namespaceDeclarations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noNamespace",
			"Deno Lint Name": "no-namespace",
			"ESLint Name": "@typescript-eslint/no-namespace",
			"Oxlint Name": "typescript/no-namespace"
		}
	},
	"negativeZeroComparisons": {
		"biome": [
			{
				"name": "noCompareNegZero",
				"url": "https://biomejs.dev/linter/rules/noCompareNegZero"
			}
		],
		"deno": [
			{
				"name": "no-compare-neg-zero",
				"url": "https://docs.deno.com/lint/rules/no-compare-neg-zero"
			}
		],
		"eslint": [
			{
				"name": "no-compare-neg-zero",
				"url": "https://eslint.org/docs/latest/rules/no-compare-neg-zero"
			}
		],
		"flint": {
			"name": "negativeZeroComparisons",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-compare-neg-zero",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-compare-neg-zero.html"
			}
		],
		"raw": {
			"Flint Name": "negativeZeroComparisons",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noCompareNegZero",
			"Deno Lint Name": "no-compare-neg-zero",
			"ESLint Name": "no-compare-neg-zero",
			"Oxlint Name": "eslint/no-compare-neg-zero"
		}
	},
	"newDefinitions": {
		"biome": [
			{
				"name": "noMisleadingInstantiator",
				"url": "https://biomejs.dev/linter/rules/noMisleadingInstantiator"
			}
		],
		"deno": [
			{
				"name": "no-misused-new",
				"url": "https://docs.deno.com/lint/rules/no-misused-new"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-misused-new",
				"url": "https://typescript-eslint.io/rules/no-misused-new"
			}
		],
		"flint": {
			"name": "newDefinitions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-misused-new",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-misused-new.html"
			}
		],
		"raw": {
			"Flint Name": "newDefinitions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noMisleadingInstantiator",
			"Deno Lint Name": "no-misused-new",
			"ESLint Name": "@typescript-eslint/no-misused-new",
			"Oxlint Name": "typescript/no-misused-new"
		}
	},
	"newExpressions": {
		"eslint": [
			{
				"name": "no-new",
				"url": "https://eslint.org/docs/latest/rules/no-new"
			}
		],
		"flint": {
			"name": "newExpressions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"notes": "oxc/missing-throw is a subset",
		"oxlint": [
			{
				"name": "eslint/no-new",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-new.html"
			},
			{
				"name": "oxc/missing-throw",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/missing-throw.html"
			}
		],
		"raw": {
			"Flint Name": "newExpressions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "no-new",
			"Oxlint Name": "eslint/no-new; oxc/missing-throw",
			"Notes": "oxc/missing-throw is a subset"
		}
	},
	"newNativeNonConstructors": {
		"biome": [
			{
				"name": "noInvalidBuiltinInstantiation",
				"url": "https://biomejs.dev/linter/rules/noInvalidBuiltinInstantiation"
			}
		],
		"deno": [
			{
				"name": "no-new-symbol",
				"url": "https://docs.deno.com/lint/rules/no-new-symbol"
			}
		],
		"eslint": [
			{
				"name": "no-new-native-nonconstructor",
				"url": "https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"
			}
		],
		"flint": {
			"name": "newNativeNonConstructors",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-new-native-nonconstructor",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-new-native-nonconstructor.html"
			}
		],
		"raw": {
			"Flint Name": "newNativeNonConstructors",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noInvalidBuiltinInstantiation",
			"Deno Lint Name": "no-new-symbol",
			"ESLint Name": "no-new-native-nonconstructor",
			"Oxlint Name": "eslint/no-new-native-nonconstructor"
		}
	},
	"nonNullAssertedNullishCoalesces": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-non-null-asserted-nullish-coalescing",
				"url": "https://typescript-eslint.io/rules/no-non-null-asserted-nullish-coalescing"
			}
		],
		"flint": {
			"name": "nonNullAssertedNullishCoalesces",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "typescript/no-non-null-asserted-nullish-coalescing",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-non-null-asserted-nullish-coalescing.html"
			}
		],
		"raw": {
			"Flint Name": "nonNullAssertedNullishCoalesces",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "@typescript-eslint/no-non-null-asserted-nullish-coalescing",
			"Oxlint Name": "typescript/no-non-null-asserted-nullish-coalescing"
		}
	},
	"nonNullAssertedOptionalChains": {
		"biome": [
			{
				"name": "noNonNullAssertedOptionalChain",
				"url": "https://biomejs.dev/linter/rules/noNonNullAssertedOptionalChain"
			}
		],
		"deno": [
			{
				"name": "no-non-null-asserted-optional-chain",
				"url": "https://docs.deno.com/lint/rules/no-non-null-asserted-optional-chain"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-non-null-asserted-optional-chain",
				"url": "https://typescript-eslint.io/rules/no-non-null-asserted-optional-chain"
			}
		],
		"flint": {
			"name": "nonNullAssertedOptionalChains",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-non-null-asserted-optional-chain",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-non-null-asserted-optional-chain.html"
			}
		],
		"raw": {
			"Flint Name": "nonNullAssertedOptionalChains",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noNonNullAssertedOptionalChain",
			"Deno Lint Name": "no-non-null-asserted-optional-chain",
			"ESLint Name": "@typescript-eslint/no-non-null-asserted-optional-chain",
			"Oxlint Name": "typescript/no-non-null-asserted-optional-chain"
		}
	},
	"nonNullAssertions": {
		"biome": [
			{
				"name": "noNonNullAssertion",
				"url": "https://biomejs.dev/linter/rules/noNonNullAssertion"
			}
		],
		"deno": [
			{
				"name": "no-non-null-assertion",
				"url": "https://docs.deno.com/lint/rules/no-non-null-assertion"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-non-null-assertion",
				"url": "https://typescript-eslint.io/rules/no-non-null-assertion"
			}
		],
		"flint": {
			"name": "nonNullAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "typescript/no-non-null-assertion",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-non-null-assertion.html"
			}
		],
		"raw": {
			"Flint Name": "nonNullAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"Biome Name": "noNonNullAssertion",
			"Deno Lint Name": "no-non-null-assertion",
			"ESLint Name": "@typescript-eslint/no-non-null-assertion",
			"Oxlint Name": "typescript/no-non-null-assertion"
		}
	},
	"numberMethodRanges": {
		"flint": {
			"name": "numberMethodRanges",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/number-arg-out-of-range",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/number-arg-out-of-range.html"
			}
		],
		"raw": {
			"Flint Name": "numberMethodRanges",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Oxlint Name": "oxc/number-arg-out-of-range"
		}
	},
	"numericErasingOperations": {
		"flint": {
			"name": "numericErasingOperations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/erasing-op",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/erasing-op.html"
			}
		],
		"raw": {
			"Flint Name": "numericErasingOperations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Oxlint Name": "oxc/erasing-op"
		}
	},
	"numericLiteralParsing": {
		"biome": [
			{
				"name": "useNumericLiterals",
				"url": "https://biomejs.dev/linter/rules/useNumericLiterals"
			}
		],
		"eslint": [
			{
				"name": "prefer-numeric-literals",
				"url": "https://eslint.org/docs/latest/rules/prefer-numeric-literals"
			}
		],
		"flint": {
			"name": "numericLiteralParsing",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-numeric-literals",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-numeric-literals.html"
			}
		],
		"raw": {
			"Flint Name": "numericLiteralParsing",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useNumericLiterals",
			"ESLint Name": "prefer-numeric-literals",
			"Oxlint Name": "eslint/prefer-numeric-literals"
		}
	},
	"numericPrecision": {
		"biome": [
			{
				"name": "noPrecisionLoss",
				"url": "https://biomejs.dev/linter/rules/noPrecisionLoss"
			}
		],
		"eslint": [
			{
				"name": "no-loss-of-precision",
				"url": "https://eslint.org/docs/latest/rules/no-loss-of-precision"
			},
			{
				"name": "@typescript-eslint/no-loss-of-precision",
				"url": "https://typescript-eslint.io/rules/no-loss-of-precision"
			}
		],
		"flint": {
			"name": "numericPrecision",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-loss-of-precision",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-loss-of-precision.html"
			}
		],
		"raw": {
			"Flint Name": "numericPrecision",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noPrecisionLoss",
			"ESLint Name": "no-loss-of-precision; @typescript-eslint/no-loss-of-precision",
			"Oxlint Name": "eslint/no-loss-of-precision"
		}
	},
	"objectCalls": {
		"eslint": [
			{
				"name": "no-object-constructor",
				"url": "https://eslint.org/docs/latest/rules/no-object-constructor"
			}
		],
		"flint": {
			"name": "objectCalls",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-object-constructor",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-object-constructor.html"
			}
		],
		"raw": {
			"Flint Name": "objectCalls",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "no-object-constructor",
			"Oxlint Name": "eslint/no-object-constructor"
		}
	},
	"objectKeyDuplicates": {
		"biome": [
			{
				"name": "noDuplicateObjectKeys",
				"url": "https://biomejs.dev/linter/rules/noDuplicateObjectKeys"
			}
		],
		"eslint": [
			{
				"name": "no-dupe-keys",
				"url": "https://eslint.org/docs/latest/rules/no-dupe-keys"
			}
		],
		"flint": {
			"name": "objectKeyDuplicates",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "objectKeyDuplicates",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noDuplicateObjectKeys",
			"ESLint Name": "no-dupe-keys"
		}
	},
	"objectPrototypeBuiltIns": {
		"biome": [
			{
				"name": "noPrototypeBuiltins",
				"url": "https://biomejs.dev/linter/rules/noPrototypeBuiltins"
			}
		],
		"deno": [
			{
				"name": "no-prototype-builtins",
				"url": "https://docs.deno.com/lint/rules/no-prototype-builtins"
			}
		],
		"eslint": [
			{
				"name": "no-prototype-builtins",
				"url": "https://eslint.org/docs/latest/rules/no-prototype-builtins"
			}
		],
		"flint": {
			"name": "objectPrototypeBuiltIns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-prototype-builtins",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-prototype-builtins.html"
			}
		],
		"raw": {
			"Flint Name": "objectPrototypeBuiltIns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noPrototypeBuiltins",
			"Deno Lint Name": "no-prototype-builtins",
			"ESLint Name": "no-prototype-builtins",
			"Oxlint Name": "eslint/no-prototype-builtins"
		}
	},
	"objectSpreadUnnecessaryFallbacks": {
		"eslint": [
			{
				"name": "unicorn/no-useless-fallback-in-spread",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-useless-fallback-in-spread.md"
			}
		],
		"flint": {
			"name": "objectSpreadUnnecessaryFallbacks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-useless-fallback-in-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-fallback-in-spread.html"
			}
		],
		"raw": {
			"Flint Name": "objectSpreadUnnecessaryFallbacks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "unicorn/no-useless-fallback-in-spread",
			"Oxlint Name": "unicorn/no-useless-fallback-in-spread"
		}
	},
	"parameterPropertyAssignment": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-parameter-property-assignment",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-parameter-property-assignment"
			}
		],
		"flint": {
			"name": "parameterPropertyAssignment",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unnecessary-parameter-property-assignment",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-parameter-property-assignment.html"
			}
		],
		"raw": {
			"Flint Name": "parameterPropertyAssignment",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unnecessary-parameter-property-assignment",
			"Oxlint Name": "typescript/no-unnecessary-parameter-property-assignment"
		}
	},
	"parseIntRadixes": {
		"biome": [
			{
				"name": "useParseIntRadix",
				"url": "https://biomejs.dev/linter/rules/useParseIntRadix"
			}
		],
		"eslint": [
			{
				"name": "radix",
				"url": "https://eslint.org/docs/latest/rules/radix"
			}
		],
		"flint": {
			"name": "parseIntRadixes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/radix",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/radix.html"
			}
		],
		"raw": {
			"Flint Name": "parseIntRadixes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useParseIntRadix",
			"ESLint Name": "radix",
			"Oxlint Name": "eslint/radix"
		}
	},
	"plusOperands": {
		"eslint": [
			{
				"name": "@typescript-eslint/restrict-plus-operands",
				"url": "https://typescript-eslint.io/rules/restrict-plus-operands"
			}
		],
		"flint": {
			"name": "plusOperands",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/restrict-plus-operands",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/restrict-plus-operands.html"
			}
		],
		"raw": {
			"Flint Name": "plusOperands",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/restrict-plus-operands",
			"Oxlint Name": "typescript/restrict-plus-operands"
		}
	},
	"promiseExecutorReturns": {
		"eslint": [
			{
				"name": "no-promise-executor-return",
				"url": "https://eslint.org/docs/latest/rules/no-promise-executor-return"
			}
		],
		"flint": {
			"name": "promiseExecutorReturns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "promiseExecutorReturns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "no-promise-executor-return"
		}
	},
	"promiseFinallyReturns": {
		"eslint": [
			{
				"name": "promise/no-return-in-finally",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/no-return-in-finally.md"
			}
		],
		"flint": {
			"name": "promiseFinallyReturns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "promise/no-return-in-finally",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-return-in-finally.html"
			}
		],
		"raw": {
			"Flint Name": "promiseFinallyReturns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "promise/no-return-in-finally",
			"Oxlint Name": "promise/no-return-in-finally"
		}
	},
	"promiseMethodSingleArrayArguments": {
		"eslint": [
			{
				"name": "unicorn/no-single-promise-in-promise-methods",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-single-promise-in-promise-methods.md"
			}
		],
		"flint": {
			"name": "promiseMethodSingleArrayArguments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-single-promise-in-promise-methods",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-single-promise-in-promise-methods.html"
			}
		],
		"raw": {
			"Flint Name": "promiseMethodSingleArrayArguments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "unicorn/no-single-promise-in-promise-methods",
			"Oxlint Name": "unicorn/no-single-promise-in-promise-methods"
		}
	},
	"promiseRejectErrors": {
		"eslint": [
			{
				"name": "prefer-promise-reject-errors",
				"url": "https://eslint.org/docs/latest/rules/prefer-promise-reject-errors"
			},
			{
				"name": "@typescript-eslint/prefer-promise-reject-errors",
				"url": "https://typescript-eslint.io/rules/prefer-promise-reject-errors"
			}
		],
		"flint": {
			"name": "promiseRejectErrors",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-promise-reject-errors",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-promise-reject-errors.html"
			},
			{
				"name": "typescript/prefer-promise-reject-errors",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-promise-reject-errors.html"
			}
		],
		"raw": {
			"Flint Name": "promiseRejectErrors",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "prefer-promise-reject-errors; @typescript-eslint/prefer-promise-reject-errors",
			"Oxlint Name": "eslint/prefer-promise-reject-errors; typescript/prefer-promise-reject-errors"
		}
	},
	"recursionOnlyArguments": {
		"flint": {
			"name": "recursionOnlyArguments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/only-used-in-recursion",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/only-used-in-recursion.html"
			}
		],
		"raw": {
			"Flint Name": "recursionOnlyArguments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Oxlint Name": "oxc/only-used-in-recursion"
		}
	},
	"reduceTypeParameters": {
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-reduce-type-parameter",
				"url": "https://typescript-eslint.io/rules/prefer-reduce-type-parameter"
			}
		],
		"flint": {
			"name": "reduceTypeParameters",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-reduce-type-parameter",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-reduce-type-parameter.html"
			}
		],
		"raw": {
			"Flint Name": "reduceTypeParameters",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "@typescript-eslint/prefer-reduce-type-parameter",
			"Oxlint Name": "typescript/prefer-reduce-type-parameter"
		}
	},
	"redundantTypeConstituents": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-redundant-type-constituents",
				"url": "https://typescript-eslint.io/rules/no-redundant-type-constituents"
			}
		],
		"flint": {
			"name": "redundantTypeConstituents",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-redundant-type-constituents",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-redundant-type-constituents.html"
			}
		],
		"raw": {
			"Flint Name": "redundantTypeConstituents",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-redundant-type-constituents",
			"Oxlint Name": "typescript/no-redundant-type-constituents"
		}
	},
	"regexAllGlobalFlags": {
		"eslint": [
			{
				"name": "regexp/no-missing-g-flag",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-missing-g-flag.html"
			}
		],
		"flint": {
			"name": "regexAllGlobalFlags",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/bad-replace-all-arg",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-replace-all-arg.html"
			}
		],
		"raw": {
			"Flint Name": "regexAllGlobalFlags",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-missing-g-flag",
			"Oxlint Name": "oxc/bad-replace-all-arg"
		}
	},
	"regexAmbiguousInvalidity": {
		"eslint": [
			{
				"name": "regexp/strict",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/strict.html"
			}
		],
		"flint": {
			"name": "regexAmbiguousInvalidity",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexAmbiguousInvalidity",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/strict"
		}
	},
	"regexContradictoryAssertions": {
		"eslint": [
			{
				"name": "regexp/no-contradiction-with-assertion",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-contradiction-with-assertion.html"
			}
		],
		"flint": {
			"name": "regexContradictoryAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexContradictoryAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-contradiction-with-assertion"
		}
	},
	"regexControlCharacterEscapes": {
		"eslint": [
			{
				"name": "regexp/control-character-escape",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/control-character-escape.html"
			}
		],
		"flint": {
			"name": "regexControlCharacterEscapes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexControlCharacterEscapes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/control-character-escape"
		}
	},
	"regexControlCharacters": {
		"biome": [
			{
				"name": "noControlCharactersInRegex",
				"url": "https://biomejs.dev/linter/rules/noControlCharactersInRegex"
			}
		],
		"deno": [
			{
				"name": "no-control-regex",
				"url": "https://docs.deno.com/lint/rules/no-control-regex"
			}
		],
		"eslint": [
			{
				"name": "no-control-regex",
				"url": "https://eslint.org/docs/latest/rules/no-control-regex"
			},
			{
				"name": "regexp/no-control-character",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-control-character.html"
			}
		],
		"flint": {
			"name": "regexControlCharacters",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-control-regex",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-control-regex.html"
			}
		],
		"raw": {
			"Flint Name": "regexControlCharacters",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noControlCharactersInRegex",
			"Deno Lint Name": "no-control-regex",
			"ESLint Name": "no-control-regex; regexp/no-control-character",
			"Oxlint Name": "eslint/no-control-regex"
		}
	},
	"regexDuplicateCharacterClassCharacters": {
		"eslint": [
			{
				"name": "regexp/no-dupe-characters-character-class",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-dupe-characters-character-class.html"
			}
		],
		"flint": {
			"name": "regexDuplicateCharacterClassCharacters",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexDuplicateCharacterClassCharacters",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-dupe-characters-character-class"
		}
	},
	"regexDuplicateDisjunctions": {
		"eslint": [
			{
				"name": "regexp/no-dupe-disjunctions",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-dupe-disjunctions.html"
			}
		],
		"flint": {
			"name": "regexDuplicateDisjunctions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexDuplicateDisjunctions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-dupe-disjunctions"
		}
	},
	"regexEmptyAlternatives": {
		"eslint": [
			{
				"name": "regexp/no-empty-alternative",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-alternative.html"
			}
		],
		"flint": {
			"name": "regexEmptyAlternatives",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexEmptyAlternatives",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-empty-alternative"
		}
	},
	"regexEmptyCapturingGroups": {
		"eslint": [
			{
				"name": "regexp/no-empty-capturing-group",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-capturing-group.html"
			}
		],
		"flint": {
			"name": "regexEmptyCapturingGroups",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexEmptyCapturingGroups",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-empty-capturing-group"
		}
	},
	"regexEmptyCharacterClasses": {
		"eslint": [
			{
				"name": "regexp/no-empty-character-class",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-character-class.html"
			}
		],
		"flint": {
			"name": "regexEmptyCharacterClasses",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexEmptyCharacterClasses",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-empty-character-class"
		}
	},
	"regexEmptyGroups": {
		"eslint": [
			{
				"name": "regexp/no-empty-group",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-group.html"
			}
		],
		"flint": {
			"name": "regexEmptyGroups",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexEmptyGroups",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-empty-group"
		}
	},
	"regexEmptyLazyQuantifiers": {
		"eslint": [
			{
				"name": "regexp/no-lazy-ends",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-lazy-ends.html"
			}
		],
		"flint": {
			"name": "regexEmptyLazyQuantifiers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexEmptyLazyQuantifiers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-lazy-ends"
		}
	},
	"regexEmptyLookaroundsAssertions": {
		"eslint": [
			{
				"name": "regexp/no-empty-lookarounds-assertion",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-lookarounds-assertion.html"
			}
		],
		"flint": {
			"name": "regexEmptyLookaroundsAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexEmptyLookaroundsAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-empty-lookarounds-assertion"
		}
	},
	"regexEmptyStringLiterals": {
		"eslint": [
			{
				"name": "regexp/no-empty-string-literal",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-string-literal.html"
			}
		],
		"flint": {
			"name": "regexEmptyStringLiterals",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexEmptyStringLiterals",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-empty-string-literal"
		}
	},
	"regexEscapeBackspaces": {
		"eslint": [
			{
				"name": "regexp/no-escape-backspace",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-escape-backspace.html"
			}
		],
		"flint": {
			"name": "regexEscapeBackspaces",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexEscapeBackspaces",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-escape-backspace"
		}
	},
	"regexGraphemeStringLiterals": {
		"eslint": [
			{
				"name": "regexp/grapheme-string-literal",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/grapheme-string-literal.html"
			}
		],
		"flint": {
			"name": "regexGraphemeStringLiterals",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexGraphemeStringLiterals",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/grapheme-string-literal"
		}
	},
	"regexIgnoreCaseFlags": {
		"eslint": [
			{
				"name": "regexp/use-ignore-case",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/use-ignore-case.html"
			}
		],
		"flint": {
			"name": "regexIgnoreCaseFlags",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexIgnoreCaseFlags",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/use-ignore-case"
		}
	},
	"regexInvisibleCharacters": {
		"eslint": [
			{
				"name": "regexp/no-invisible-character",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-invisible-character.html"
			}
		],
		"flint": {
			"name": "regexInvisibleCharacters",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexInvisibleCharacters",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-invisible-character"
		}
	},
	"regexLegacyFeatures": {
		"eslint": [
			{
				"name": "regexp/no-legacy-features",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-legacy-features.html"
			}
		],
		"flint": {
			"name": "regexLegacyFeatures",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexLegacyFeatures",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-legacy-features"
		}
	},
	"regexLookaroundQuantifierOptimizations": {
		"eslint": [
			{
				"name": "regexp/optimal-lookaround-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/optimal-lookaround-quantifier.html"
			}
		],
		"flint": {
			"name": "regexLookaroundQuantifierOptimizations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexLookaroundQuantifierOptimizations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/optimal-lookaround-quantifier"
		}
	},
	"regexMisleadingCapturingGroups": {
		"eslint": [
			{
				"name": "regexp/no-misleading-capturing-group",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-misleading-capturing-group.html"
			}
		],
		"flint": {
			"name": "regexMisleadingCapturingGroups",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexMisleadingCapturingGroups",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-misleading-capturing-group"
		}
	},
	"regexMisleadingQuantifiers": {
		"eslint": [
			{
				"name": "regexp/confusing-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/confusing-quantifier.html"
			}
		],
		"flint": {
			"name": "regexMisleadingQuantifiers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexMisleadingQuantifiers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/confusing-quantifier"
		}
	},
	"regexMisleadingUnicodeCharacters": {
		"biome": [
			{
				"name": "noMisleadingCharacterClass",
				"url": "https://biomejs.dev/linter/rules/noMisleadingCharacterClass"
			}
		],
		"eslint": [
			{
				"name": "no-misleading-character-class",
				"url": "https://eslint.org/docs/latest/rules/no-misleading-character-class"
			},
			{
				"name": "regexp/no-misleading-unicode-character",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-misleading-unicode-character.html"
			}
		],
		"flint": {
			"name": "regexMisleadingUnicodeCharacters",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexMisleadingUnicodeCharacters",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noMisleadingCharacterClass",
			"ESLint Name": "no-misleading-character-class; regexp/no-misleading-unicode-character"
		}
	},
	"regexNamedCaptureGroups": {
		"eslint": [
			{
				"name": "prefer-named-capture-group",
				"url": "https://eslint.org/docs/latest/rules/prefer-named-capture-group"
			},
			{
				"name": "regexp/prefer-named-capture-group",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-named-capture-group.html"
			}
		],
		"flint": {
			"name": "regexNamedCaptureGroups",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexNamedCaptureGroups",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "prefer-named-capture-group; regexp/prefer-named-capture-group"
		}
	},
	"regexNonStandardFlags": {
		"eslint": [
			{
				"name": "regexp/no-non-standard-flag",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-non-standard-flag.html"
			}
		],
		"flint": {
			"name": "regexNonStandardFlags",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexNonStandardFlags",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-non-standard-flag"
		}
	},
	"regexObscureRanges": {
		"eslint": [
			{
				"name": "regexp/no-obscure-range",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-obscure-range.html"
			}
		],
		"flint": {
			"name": "regexObscureRanges",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexObscureRanges",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-obscure-range"
		}
	},
	"regexOctalEscapes": {
		"eslint": [
			{
				"name": "regexp/no-octal",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-octal.html"
			}
		],
		"flint": {
			"name": "regexOctalEscapes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexOctalEscapes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-octal"
		}
	},
	"regexQuantifierOptimizations": {
		"eslint": [
			{
				"name": "regexp/optimal-quantifier-concatenation",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/optimal-quantifier-concatenation.html"
			}
		],
		"flint": {
			"name": "regexQuantifierOptimizations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexQuantifierOptimizations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/optimal-quantifier-concatenation"
		}
	},
	"regexSetOperationOptimizations": {
		"eslint": [
			{
				"name": "regexp/simplify-set-operations",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/simplify-set-operations.html"
			}
		],
		"flint": {
			"name": "regexSetOperationOptimizations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexSetOperationOptimizations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/simplify-set-operations"
		}
	},
	"regexStandaloneBackslashes": {
		"eslint": [
			{
				"name": "regexp/no-standalone-backslash",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-standalone-backslash.html"
			}
		],
		"flint": {
			"name": "regexStandaloneBackslashes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexStandaloneBackslashes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-standalone-backslash"
		}
	},
	"regexSuperLinearBacktracking": {
		"eslint": [
			{
				"name": "regexp/no-super-linear-backtracking",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-super-linear-backtracking.html"
			}
		],
		"flint": {
			"name": "regexSuperLinearBacktracking",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexSuperLinearBacktracking",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-super-linear-backtracking"
		}
	},
	"regexSuperLinearMoves": {
		"eslint": [
			{
				"name": "regexp/no-super-linear-move",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-super-linear-move.html"
			}
		],
		"flint": {
			"name": "regexSuperLinearMoves",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexSuperLinearMoves",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-super-linear-move"
		}
	},
	"regexUnnecessaryAssertions": {
		"eslint": [
			{
				"name": "regexp/no-useless-assertions",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-assertions.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnnecessaryAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-useless-assertions"
		}
	},
	"regexUnnecessaryBackreferences": {
		"biome": [
			{
				"name": "noUselessRegexBackrefs",
				"url": "https://biomejs.dev/linter/rules/noUselessRegexBackrefs"
			}
		],
		"eslint": [
			{
				"name": "no-useless-backreference",
				"url": "https://eslint.org/docs/latest/rules/no-useless-backreference"
			},
			{
				"name": "regexp/no-useless-backreference",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-backreference.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryBackreferences",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-backreference",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-backreference.html"
			}
		],
		"raw": {
			"Flint Name": "regexUnnecessaryBackreferences",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUselessRegexBackrefs",
			"ESLint Name": "no-useless-backreference; regexp/no-useless-backreference",
			"Oxlint Name": "eslint/no-useless-backreference"
		}
	},
	"regexUnnecessaryCharacterClasses": {
		"eslint": [
			{
				"name": "regexp/no-useless-character-class",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-character-class.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryCharacterClasses",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnnecessaryCharacterClasses",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-useless-character-class"
		}
	},
	"regexUnnecessaryCharacterRanges": {
		"eslint": [
			{
				"name": "regexp/no-useless-range",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-range.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryCharacterRanges",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnnecessaryCharacterRanges",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-useless-range"
		}
	},
	"regexUnnecessaryDisjunctions": {
		"eslint": [
			{
				"name": "regexp/no-useless-string-literal",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-string-literal.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryDisjunctions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnnecessaryDisjunctions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-useless-string-literal"
		}
	},
	"regexUnnecessaryDollarReplacements": {
		"eslint": [
			{
				"name": "regexp/no-useless-dollar-replacements",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-dollar-replacements.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryDollarReplacements",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnnecessaryDollarReplacements",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-useless-dollar-replacements"
		}
	},
	"regexUnnecessaryLookaroundAssertions": {
		"eslint": [
			{
				"name": "regexp/no-extra-lookaround-assertions",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-extra-lookaround-assertions.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryLookaroundAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnnecessaryLookaroundAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-extra-lookaround-assertions"
		}
	},
	"regexUnnecessaryNestedAssertions": {
		"eslint": [
			{
				"name": "regexp/no-trivially-nested-assertion",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-trivially-nested-assertion.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryNestedAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnnecessaryNestedAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-trivially-nested-assertion"
		}
	},
	"regexUnnecessaryNestedQuantifiers": {
		"eslint": [
			{
				"name": "regexp/no-trivially-nested-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-trivially-nested-quantifier.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryNestedQuantifiers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnnecessaryNestedQuantifiers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-trivially-nested-quantifier"
		}
	},
	"regexUnnecessaryNumericQuantifiers": {
		"eslint": [
			{
				"name": "regexp/no-useless-two-nums-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-two-nums-quantifier.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryNumericQuantifiers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnnecessaryNumericQuantifiers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-useless-two-nums-quantifier"
		}
	},
	"regexUnnecessaryOptionalAssertions": {
		"eslint": [
			{
				"name": "regexp/no-optional-assertion",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-optional-assertion.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryOptionalAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnnecessaryOptionalAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-optional-assertion"
		}
	},
	"regexUnnecessaryReferentialBackreferences": {
		"eslint": [
			{
				"name": "regexp/no-potentially-useless-backreference",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-potentially-useless-backreference.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryReferentialBackreferences",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnnecessaryReferentialBackreferences",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-potentially-useless-backreference"
		}
	},
	"regexUnnecessarySetOperands": {
		"eslint": [
			{
				"name": "regexp/no-useless-set-operand",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-set-operand.html"
			}
		],
		"flint": {
			"name": "regexUnnecessarySetOperands",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnnecessarySetOperands",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-useless-set-operand"
		}
	},
	"regexUnusedCapturingGroups": {
		"eslint": [
			{
				"name": "regexp/no-unused-capturing-group",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-unused-capturing-group.html"
			}
		],
		"flint": {
			"name": "regexUnusedCapturingGroups",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnusedCapturingGroups",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-unused-capturing-group"
		}
	},
	"regexUnusedFlags": {
		"eslint": [
			{
				"name": "regexp/no-useless-flag",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-flag.html"
			}
		],
		"flint": {
			"name": "regexUnusedFlags",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnusedFlags",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-useless-flag"
		}
	},
	"regexUnusedLazyQuantifiers": {
		"eslint": [
			{
				"name": "regexp/no-useless-lazy",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-lazy.html"
			}
		],
		"flint": {
			"name": "regexUnusedLazyQuantifiers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnusedLazyQuantifiers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-useless-lazy"
		}
	},
	"regexUnusedQuantifiers": {
		"eslint": [
			{
				"name": "regexp/no-useless-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-quantifier.html"
			}
		],
		"flint": {
			"name": "regexUnusedQuantifiers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexUnusedQuantifiers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-useless-quantifier"
		}
	},
	"regexValidity": {
		"deno": [
			{
				"name": "no-invalid-regexp",
				"url": "https://docs.deno.com/lint/rules/no-invalid-regexp"
			}
		],
		"eslint": [
			{
				"name": "no-invalid-regexp",
				"url": "https://eslint.org/docs/latest/rules/no-invalid-regexp"
			},
			{
				"name": "regexp/no-invalid-regexp",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-invalid-regexp.html"
			}
		],
		"flint": {
			"name": "regexValidity",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-invalid-regexp",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-invalid-regexp.html"
			}
		],
		"raw": {
			"Flint Name": "regexValidity",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Deno Lint Name": "no-invalid-regexp",
			"ESLint Name": "no-invalid-regexp; regexp/no-invalid-regexp",
			"Oxlint Name": "eslint/no-invalid-regexp"
		}
	},
	"regexZeroQuantifiers": {
		"eslint": [
			{
				"name": "regexp/no-zero-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-zero-quantifier.html"
			}
		],
		"flint": {
			"name": "regexZeroQuantifiers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "regexZeroQuantifiers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "regexp/no-zero-quantifier"
		}
	},
	"requireImports": {
		"biome": [
			{
				"name": "noCommonJs",
				"url": "https://biomejs.dev/linter/rules/noCommonJs"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-require-imports",
				"url": "https://typescript-eslint.io/rules/no-require-imports"
			}
		],
		"flint": {
			"name": "requireImports",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-require-imports",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-require-imports.html"
			}
		],
		"raw": {
			"Flint Name": "requireImports",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noCommonJs",
			"ESLint Name": "@typescript-eslint/no-require-imports",
			"Oxlint Name": "typescript/no-require-imports"
		}
	},
	"returnAwaitPromises": {
		"eslint": [
			{
				"name": "@typescript-eslint/return-await",
				"url": "https://typescript-eslint.io/rules/return-await"
			}
		],
		"flint": {
			"name": "returnAwaitPromises",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/return-await",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/return-await.html"
			}
		],
		"raw": {
			"Flint Name": "returnAwaitPromises",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/return-await",
			"Oxlint Name": "typescript/return-await"
		}
	},
	"returnThisTypes": {
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-return-this-type",
				"url": "https://typescript-eslint.io/rules/prefer-return-this-type"
			}
		],
		"flint": {
			"name": "returnThisTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-return-this-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-return-this-type.html"
			}
		],
		"raw": {
			"Flint Name": "returnThisTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "@typescript-eslint/prefer-return-this-type",
			"Oxlint Name": "typescript/prefer-return-this-type"
		}
	},
	"selfAssignments": {
		"biome": [
			{
				"name": "noSelfAssign",
				"url": "https://biomejs.dev/linter/rules/noSelfAssign"
			}
		],
		"deno": [
			{
				"name": "no-self-assign",
				"url": "https://docs.deno.com/lint/rules/no-self-assign"
			}
		],
		"eslint": [
			{
				"name": "no-self-assign",
				"url": "https://eslint.org/docs/latest/rules/no-self-assign"
			}
		],
		"flint": {
			"name": "selfAssignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-self-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-self-assign.html"
			}
		],
		"raw": {
			"Flint Name": "selfAssignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noSelfAssign",
			"Deno Lint Name": "no-self-assign",
			"ESLint Name": "no-self-assign",
			"Oxlint Name": "eslint/no-self-assign"
		}
	},
	"selfComparisons": {
		"biome": [
			{
				"name": "noSelfCompare",
				"url": "https://biomejs.dev/linter/rules/noSelfCompare"
			}
		],
		"deno": [
			{
				"name": "no-self-compare",
				"url": "https://docs.deno.com/lint/rules/no-self-compare"
			}
		],
		"eslint": [
			{
				"name": "no-self-compare",
				"url": "https://eslint.org/docs/latest/rules/no-self-compare"
			}
		],
		"flint": {
			"name": "selfComparisons",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"notes": "Superseded by unnecessaryConditions",
		"oxlint": [
			{
				"name": "eslint/no-self-compare",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-self-compare.html"
			}
		],
		"raw": {
			"Flint Name": "selfComparisons",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"Biome Name": "noSelfCompare",
			"Deno Lint Name": "no-self-compare",
			"ESLint Name": "no-self-compare",
			"Oxlint Name": "eslint/no-self-compare",
			"Notes": "Superseded by unnecessaryConditions"
		}
	},
	"singleVariableDeclarations": {
		"biome": [
			{
				"name": "useSingleVarDeclarator",
				"url": "https://biomejs.dev/linter/rules/useSingleVarDeclarator"
			}
		],
		"deno": [
			{
				"name": "single-var-declarator",
				"url": "https://docs.deno.com/lint/rules/single-var-declarator"
			}
		],
		"eslint": [
			{
				"name": "one-var",
				"url": "https://eslint.org/docs/latest/rules/one-var"
			}
		],
		"flint": {
			"name": "singleVariableDeclarations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "singleVariableDeclarations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useSingleVarDeclarator",
			"Deno Lint Name": "single-var-declarator",
			"ESLint Name": "one-var"
		}
	},
	"stringCaseMismatches": {
		"biome": [
			{
				"name": "noStringCaseMismatch",
				"url": "https://biomejs.dev/linter/rules/noStringCaseMismatch"
			}
		],
		"flint": {
			"name": "stringCaseMismatches",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "stringCaseMismatches",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noStringCaseMismatch"
		}
	},
	"stringCodePoints": {
		"eslint": [
			{
				"name": "unicorn/prefer-code-point",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-code-point.md"
			}
		],
		"flint": {
			"name": "stringCodePoints",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-code-point",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-code-point.html"
			}
		],
		"raw": {
			"Flint Name": "stringCodePoints",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-code-point",
			"Oxlint Name": "unicorn/prefer-code-point"
		}
	},
	"templateExpressionValues": {
		"eslint": [
			{
				"name": "@typescript-eslint/restrict-template-expressions",
				"url": "https://typescript-eslint.io/rules/restrict-template-expressions"
			}
		],
		"flint": {
			"name": "templateExpressionValues",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/restrict-template-expressions",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/restrict-template-expressions.html"
			}
		],
		"raw": {
			"Flint Name": "templateExpressionValues",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/restrict-template-expressions",
			"Oxlint Name": "typescript/restrict-template-expressions"
		}
	},
	"thisAliases": {
		"eslint": [
			{
				"name": "consistent-this",
				"url": "https://eslint.org/docs/latest/rules/consistent-this"
			}
		],
		"flint": {
			"name": "thisAliases",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "thisAliases",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "consistent-this"
		}
	},
	"throwErrors": {
		"biome": [
			{
				"name": "useThrowOnlyError",
				"url": "https://biomejs.dev/linter/rules/useThrowOnlyError"
			}
		],
		"deno": [
			{
				"name": "no-throw-literal",
				"url": "https://docs.deno.com/lint/rules/no-throw-literal"
			}
		],
		"eslint": [
			{
				"name": "no-throw-literal",
				"url": "https://eslint.org/docs/latest/rules/no-throw-literal"
			},
			{
				"name": "@typescript-eslint/only-throw-errors",
				"url": "https://typescript-eslint.io/rules/only-throw-errors"
			},
			{
				"name": "unicorn/throw-new-error",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/throw-new-error.md"
			}
		],
		"flint": {
			"name": "throwErrors",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-throw-literal",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-throw-literal.html"
			},
			{
				"name": "typescript/only-throw-error",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/only-throw-error.html"
			},
			{
				"name": "unicorn/throw-new-error",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/throw-new-error.html"
			}
		],
		"raw": {
			"Flint Name": "throwErrors",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useThrowOnlyError",
			"Deno Lint Name": "no-throw-literal",
			"ESLint Name": "no-throw-literal; @typescript-eslint/only-throw-errors; unicorn/throw-new-error",
			"Oxlint Name": "eslint/no-throw-literal; typescript/only-throw-error; unicorn/throw-new-error"
		}
	},
	"tripleSlashReferences": {
		"deno": [
			{
				"name": "triple-slash-reference",
				"url": "https://docs.deno.com/lint/rules/triple-slash-reference"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/triple-slash-reference",
				"url": "https://typescript-eslint.io/rules/triple-slash-reference"
			}
		],
		"flint": {
			"name": "tripleSlashReferences",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/triple-slash-reference",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/triple-slash-reference.html"
			}
		],
		"raw": {
			"Flint Name": "tripleSlashReferences",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Deno Lint Name": "triple-slash-reference",
			"ESLint Name": "@typescript-eslint/triple-slash-reference",
			"Oxlint Name": "typescript/triple-slash-reference"
		}
	},
	"tripleSlashReferenceValidity": {
		"deno": [
			{
				"name": "no-invalid-triple-slash-references",
				"url": "https://docs.deno.com/lint/rules/no-invalid-triple-slash-references"
			}
		],
		"flint": {
			"name": "tripleSlashReferenceValidity",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "tripleSlashReferenceValidity",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Deno Lint Name": "no-invalid-triple-slash-references"
		}
	},
	"tsComments": {
		"biome": [
			{
				"name": "noTsIgnore",
				"url": "https://biomejs.dev/linter/rules/noTsIgnore"
			}
		],
		"deno": [
			{
				"name": "ban-ts-comment",
				"url": "https://docs.deno.com/lint/rules/ban-ts-comment"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/ban-ts-comment",
				"url": "https://typescript-eslint.io/rules/ban-ts-comment"
			}
		],
		"flint": {
			"name": "tsComments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/ban-ts-comment",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/ban-ts-comment.html"
			},
			{
				"name": "typescript/prefer-ts-expect-error",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-ts-expect-error.html"
			}
		],
		"raw": {
			"Flint Name": "tsComments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noTsIgnore",
			"Deno Lint Name": "ban-ts-comment",
			"ESLint Name": "@typescript-eslint/ban-ts-comment",
			"Oxlint Name": "typescript/ban-ts-comment; typescript/prefer-ts-expect-error"
		}
	},
	"typeConstituentDuplicates": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-duplicate-type-constituents",
				"url": "https://typescript-eslint.io/rules/no-duplicate-type-constituents"
			}
		],
		"flint": {
			"name": "typeConstituentDuplicates",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-duplicate-type-constituents",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-duplicate-type-constituents.html"
			}
		],
		"raw": {
			"Flint Name": "typeConstituentDuplicates",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-duplicate-type-constituents",
			"Oxlint Name": "typescript/no-duplicate-type-constituents"
		}
	},
	"unboundMethods": {
		"eslint": [
			{
				"name": "@typescript-eslint/unbound-method",
				"url": "https://typescript-eslint.io/rules/unbound-method"
			}
		],
		"flint": {
			"name": "unboundMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/unbound-method",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/unbound-method.html"
			}
		],
		"raw": {
			"Flint Name": "unboundMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/unbound-method",
			"Oxlint Name": "typescript/unbound-method"
		}
	},
	"unifiedSignatures": {
		"biome": [
			{
				"name": "useUnifiedTypeSignatures",
				"url": "https://biomejs.dev/linter/rules/useUnifiedTypeSignatures"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/unified-signatures",
				"url": "https://typescript-eslint.io/rules/unified-signatures"
			}
		],
		"flint": {
			"name": "unifiedSignatures",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "unifiedSignatures",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"Biome Name": "useUnifiedTypeSignatures",
			"ESLint Name": "@typescript-eslint/unified-signatures"
		}
	},
	"unnecessaryBind": {
		"eslint": [
			{
				"name": "no-extra-bind",
				"url": "https://eslint.org/docs/latest/rules/no-extra-bind"
			}
		],
		"flint": {
			"name": "unnecessaryBind",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-extra-bind",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-extra-bind.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryBind",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "no-extra-bind",
			"Oxlint Name": "eslint/no-extra-bind"
		}
	},
	"unnecessaryCatches": {
		"biome": [
			{
				"name": "noUselessCatch",
				"url": "https://biomejs.dev/linter/rules/noUselessCatch"
			}
		],
		"eslint": [
			{
				"name": "no-useless-catch",
				"url": "https://eslint.org/docs/latest/rules/no-useless-catch"
			}
		],
		"flint": {
			"name": "unnecessaryCatches",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-catch",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-catch.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryCatches",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUselessCatch",
			"ESLint Name": "no-useless-catch",
			"Oxlint Name": "eslint/no-useless-catch"
		}
	},
	"unnecessaryComparisons": {
		"flint": {
			"name": "unnecessaryComparisons",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/const-comparisons",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/const-comparisons.html"
			},
			{
				"name": "oxc/double-comparisons",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/double-comparisons.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryComparisons",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Oxlint Name": "oxc/const-comparisons; oxc/double-comparisons"
		}
	},
	"unnecessaryConditions": {
		"biome": [
			{
				"name": "noUnnecessaryConditions",
				"url": "https://biomejs.dev/linter/rules/noUnnecessaryConditions"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-condition",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-condition"
			}
		],
		"flint": {
			"name": "unnecessaryConditions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "unnecessaryConditions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUnnecessaryConditions",
			"ESLint Name": "@typescript-eslint/no-unnecessary-condition"
		}
	},
	"unnecessaryContinues": {
		"biome": [
			{
				"name": "noUselessContinue",
				"url": "https://biomejs.dev/linter/rules/noUselessContinue"
			}
		],
		"flint": {
			"name": "unnecessaryContinues",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "unnecessaryContinues",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUselessContinue"
		}
	},
	"unnecessaryFunctionCurries": {
		"eslint": [
			{
				"name": "no-useless-call",
				"url": "https://eslint.org/docs/latest/rules/no-useless-call"
			}
		],
		"flint": {
			"name": "unnecessaryFunctionCurries",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-call",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-call.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryFunctionCurries",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "no-useless-call",
			"Oxlint Name": "eslint/no-useless-call"
		}
	},
	"unnecessaryLogicalComparisons": {
		"biome": [
			{
				"name": "useSimplifiedLogicExpression",
				"url": "https://biomejs.dev/linter/rules/useSimplifiedLogicExpression"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-boolean-literal-compare",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-boolean-literal-compare"
			}
		],
		"flint": {
			"name": "unnecessaryLogicalComparisons",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unnecessary-boolean-literal-compare",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-boolean-literal-compare.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryLogicalComparisons",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "useSimplifiedLogicExpression",
			"ESLint Name": "@typescript-eslint/no-unnecessary-boolean-literal-compare",
			"Oxlint Name": "typescript/no-unnecessary-boolean-literal-compare"
		}
	},
	"unnecessaryMathClamps": {
		"biome": [
			{
				"name": "noConstantMathMinMaxClamp",
				"url": "https://biomejs.dev/linter/rules/noConstantMathMinMaxClamp"
			}
		],
		"flint": {
			"name": "unnecessaryMathClamps",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/bad-min-max-func",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-min-max-func.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryMathClamps",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noConstantMathMinMaxClamp",
			"Oxlint Name": "oxc/bad-min-max-func"
		}
	},
	"unnecessaryNumericFractions": {
		"eslint": [
			{
				"name": "unicorn/no-zero-fractions",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-zero-fractions.md"
			}
		],
		"flint": {
			"name": "unnecessaryNumericFractions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-zero-fractions",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-zero-fractions.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryNumericFractions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "unicorn/no-zero-fractions",
			"Oxlint Name": "unicorn/no-zero-fractions"
		}
	},
	"unnecessarySpreads": {
		"eslint": [
			{
				"name": "unicorn/no-useless-spread",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-useless-spread.md"
			}
		],
		"flint": {
			"name": "unnecessarySpreads",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "unnecessarySpreads",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "unicorn/no-useless-spread"
		}
	},
	"unnecessaryTemplateExpressions": {
		"biome": [
			{
				"name": "noUnusedTemplateLiteral",
				"url": "https://biomejs.dev/linter/rules/noUnusedTemplateLiteral"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-template-expression",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-template-expression"
			}
		],
		"flint": {
			"name": "unnecessaryTemplateExpressions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unnecessary-template-expression",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-template-expression.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryTemplateExpressions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUnusedTemplateLiteral",
			"ESLint Name": "@typescript-eslint/no-unnecessary-template-expression",
			"Oxlint Name": "typescript/no-unnecessary-template-expression"
		}
	},
	"unnecessaryTypeArguments": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-type-arguments",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-type-arguments"
			}
		],
		"flint": {
			"name": "unnecessaryTypeArguments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unnecessary-type-arguments",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-type-arguments.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryTypeArguments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unnecessary-type-arguments",
			"Oxlint Name": "typescript/no-unnecessary-type-arguments"
		}
	},
	"unnecessaryTypeAssertions": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-type-assertion",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-type-assertion"
			}
		],
		"flint": {
			"name": "unnecessaryTypeAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unnecessary-type-assertion",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-type-assertion.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryTypeAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unnecessary-type-assertion",
			"Oxlint Name": "typescript/no-unnecessary-type-assertion"
		}
	},
	"unnecessaryTypeConstraints": {
		"biome": [
			{
				"name": "noUselessTypeConstraint",
				"url": "https://biomejs.dev/linter/rules/noUselessTypeConstraint"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-type-constraint",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-type-constraint"
			}
		],
		"flint": {
			"name": "unnecessaryTypeConstraints",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unnecessary-type-constraint",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-type-constraint.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryTypeConstraints",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUselessTypeConstraint",
			"ESLint Name": "@typescript-eslint/no-unnecessary-type-constraint",
			"Oxlint Name": "typescript/no-unnecessary-type-constraint"
		}
	},
	"unnecessaryTypeConversions": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-type-conversion",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-type-conversion"
			}
		],
		"flint": {
			"name": "unnecessaryTypeConversions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "unnecessaryTypeConversions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unnecessary-type-conversion"
		}
	},
	"unnecessaryTypeParameters": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-type-parameters",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-type-parameters"
			}
		],
		"flint": {
			"name": "unnecessaryTypeParameters",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "unnecessaryTypeParameters",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unnecessary-type-parameters"
		}
	},
	"unnecessaryUndefinedDefaults": {
		"biome": [
			{
				"name": "noUselessUndefined",
				"url": "https://biomejs.dev/linter/rules/noUselessUndefined"
			}
		],
		"eslint": [
			{
				"name": "unicorn/no-useless-undefined",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-useless-undefined.md"
			}
		],
		"flint": {
			"name": "unnecessaryUndefinedDefaults",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-useless-undefined",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-undefined.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryUndefinedDefaults",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUselessUndefined",
			"ESLint Name": "unicorn/no-useless-undefined",
			"Oxlint Name": "unicorn/no-useless-undefined"
		}
	},
	"unnecessaryUseStricts": {
		"biome": [
			{
				"name": "noRedundantUseStrict",
				"url": "https://biomejs.dev/linter/rules/noRedundantUseStrict"
			}
		],
		"flint": {
			"name": "unnecessaryUseStricts",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "unnecessaryUseStricts",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noRedundantUseStrict"
		}
	},
	"unsafeDeclarationmerging": {
		"biome": [
			{
				"name": "noUnsafeDeclarationMerging",
				"url": "https://biomejs.dev/linter/rules/noUnsafeDeclarationMerging"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-declaration-merging",
				"url": "https://typescript-eslint.io/rules/no-unsafe-declaration-merging"
			}
		],
		"flint": {
			"name": "unsafeDeclarationmerging",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-declaration-merging",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-declaration-merging.html"
			}
		],
		"raw": {
			"Flint Name": "unsafeDeclarationmerging",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUnsafeDeclarationMerging",
			"ESLint Name": "@typescript-eslint/no-unsafe-declaration-merging",
			"Oxlint Name": "typescript/no-unsafe-declaration-merging"
		}
	},
	"unsafeEnumComparisons": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-enum-comparison",
				"url": "https://typescript-eslint.io/rules/no-unsafe-enum-comparison"
			}
		],
		"flint": {
			"name": "unsafeEnumComparisons",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-enum-comparison",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-enum-comparison.html"
			}
		],
		"raw": {
			"Flint Name": "unsafeEnumComparisons",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unsafe-enum-comparison",
			"Oxlint Name": "typescript/no-unsafe-enum-comparison"
		}
	},
	"unsafeFinallyStatements": {
		"biome": [
			{
				"name": "noUnsafeFinally",
				"url": "https://biomejs.dev/linter/rules/noUnsafeFinally"
			}
		],
		"deno": [
			{
				"name": "no-unsafe-finally",
				"url": "https://docs.deno.com/lint/rules/no-unsafe-finally"
			}
		],
		"eslint": [
			{
				"name": "no-unsafe-finally",
				"url": "https://eslint.org/docs/latest/rules/no-unsafe-finally"
			}
		],
		"flint": {
			"name": "unsafeFinallyStatements",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-unsafe-finally",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unsafe-finally.html"
			}
		],
		"raw": {
			"Flint Name": "unsafeFinallyStatements",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUnsafeFinally",
			"Deno Lint Name": "no-unsafe-finally",
			"ESLint Name": "no-unsafe-finally",
			"Oxlint Name": "eslint/no-unsafe-finally"
		}
	},
	"unsafeFunctionTypes": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-function-type",
				"url": "https://typescript-eslint.io/rules/no-unsafe-function-type"
			}
		],
		"flint": {
			"name": "unsafeFunctionTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-function-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-function-type.html"
			}
		],
		"raw": {
			"Flint Name": "unsafeFunctionTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unsafe-function-type",
			"Oxlint Name": "typescript/no-unsafe-function-type"
		}
	},
	"unsafeToString": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-base-to-string",
				"url": "https://typescript-eslint.io/rules/no-base-to-string"
			}
		],
		"flint": {
			"name": "unsafeToString",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-base-to-string",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-base-to-string.html"
			}
		],
		"raw": {
			"Flint Name": "unsafeToString",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-base-to-string",
			"Oxlint Name": "typescript/no-base-to-string"
		}
	},
	"unsafeUnaryNegations": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-unary-minus",
				"url": "https://typescript-eslint.io/rules/no-unsafe-unary-minus"
			}
		],
		"flint": {
			"name": "unsafeUnaryNegations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-unary-minus",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-unary-minus.html"
			}
		],
		"raw": {
			"Flint Name": "unsafeUnaryNegations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-unsafe-unary-minus",
			"Oxlint Name": "typescript/no-unsafe-unary-minus"
		}
	},
	"unusedExpressions": {
		"eslint": [
			{
				"name": "no-unused-expressions",
				"url": "https://eslint.org/docs/latest/rules/no-unused-expressions"
			},
			{
				"name": "@typescript-eslint/no-unused-expressions",
				"url": "https://typescript-eslint.io/rules/no-unused-expressions"
			}
		],
		"flint": {
			"name": "unusedExpressions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-unused-expressions",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unused-expressions.html"
			}
		],
		"raw": {
			"Flint Name": "unusedExpressions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "no-unused-expressions; @typescript-eslint/no-unused-expressions",
			"Oxlint Name": "eslint/no-unused-expressions"
		}
	},
	"unusedPrivateClassMembers": {
		"biome": [
			{
				"name": "noUnusedPrivateClassMembers",
				"url": "https://biomejs.dev/linter/rules/noUnusedPrivateClassMembers"
			}
		],
		"eslint": [
			{
				"name": "no-unused-private-class-members",
				"url": "https://eslint.org/docs/latest/rules/no-unused-private-class-members"
			}
		],
		"flint": {
			"name": "unusedPrivateClassMembers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-unused-private-class-members",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unused-private-class-members.html"
			}
		],
		"raw": {
			"Flint Name": "unusedPrivateClassMembers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUnusedPrivateClassMembers",
			"ESLint Name": "no-unused-private-class-members",
			"Oxlint Name": "eslint/no-unused-private-class-members"
		}
	},
	"unusedSwitchStatements": {
		"biome": [
			{
				"name": "noUselessSwitchCase",
				"url": "https://biomejs.dev/linter/rules/noUselessSwitchCase"
			}
		],
		"eslint": [
			{
				"name": "unicorn/no-useless-switch-case",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-useless-switch-case.md"
			}
		],
		"flint": {
			"name": "unusedSwitchStatements",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-useless-switch-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-switch-case.html"
			}
		],
		"raw": {
			"Flint Name": "unusedSwitchStatements",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUselessSwitchCase",
			"ESLint Name": "unicorn/no-useless-switch-case",
			"Oxlint Name": "unicorn/no-useless-switch-case"
		}
	},
	"unusedValues": {
		"eslint": [
			{
				"name": "no-useless-assignment",
				"url": "https://eslint.org/docs/latest/rules/no-useless-assignment"
			}
		],
		"flint": {
			"name": "unusedValues",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "unusedValues",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "no-useless-assignment"
		}
	},
	"unusedVariables": {
		"biome": [
			{
				"name": "noUnusedFunctionParameters",
				"url": "https://biomejs.dev/linter/rules/noUnusedFunctionParameters"
			},
			{
				"name": "noUnusedVariables",
				"url": "https://biomejs.dev/linter/rules/noUnusedVariables"
			}
		],
		"deno": [
			{
				"name": "no-unused-vars",
				"url": "https://docs.deno.com/lint/rules/no-unused-vars"
			}
		],
		"eslint": [
			{
				"name": "no-unused-vars",
				"url": "https://eslint.org/docs/latest/rules/no-unused-vars"
			},
			{
				"name": "@typescript-eslint/no-unused-vars",
				"url": "https://typescript-eslint.io/rules/no-unused-vars"
			}
		],
		"flint": {
			"name": "unusedVariables",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-unused-vars",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unused-vars.html"
			}
		],
		"raw": {
			"Flint Name": "unusedVariables",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noUnusedFunctionParameters; noUnusedVariables",
			"Deno Lint Name": "no-unused-vars",
			"ESLint Name": "no-unused-vars; @typescript-eslint/no-unused-vars",
			"Oxlint Name": "eslint/no-unused-vars"
		}
	},
	"withStatements": {
		"biome": [
			{
				"name": "noWith",
				"url": "https://biomejs.dev/linter/rules/noWith"
			}
		],
		"deno": [
			{
				"name": "no-with",
				"url": "https://docs.deno.com/lint/rules/no-with"
			}
		],
		"eslint": [
			{
				"name": "no-with",
				"url": "https://eslint.org/docs/latest/rules/no-with"
			}
		],
		"flint": {
			"name": "withStatements",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-with",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-with.html"
			}
		],
		"raw": {
			"Flint Name": "withStatements",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"Biome Name": "noWith",
			"Deno Lint Name": "no-with",
			"ESLint Name": "no-with",
			"Oxlint Name": "eslint/no-with"
		}
	},
	"wrapperObjectTypes": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-wrapper-object-types",
				"url": "https://typescript-eslint.io/rules/no-wrapper-object-types"
			}
		],
		"flint": {
			"name": "wrapperObjectTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "wrapperObjectTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Logical",
			"ESLint Name": "@typescript-eslint/no-wrapper-object-types"
		}
	},
	"consoleCalls": {
		"biome": [
			{
				"name": "noConsole",
				"url": "https://biomejs.dev/linter/rules/noConsole"
			}
		],
		"deno": [
			{
				"name": "no-console",
				"url": "https://docs.deno.com/lint/rules/no-console"
			}
		],
		"eslint": [
			{
				"name": "no-console",
				"url": "https://eslint.org/docs/latest/rules/no-console"
			}
		],
		"flint": {
			"name": "consoleCalls",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "eslint/no-console",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-console.html"
			}
		],
		"raw": {
			"Flint Name": "consoleCalls",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "None",
			"Biome Name": "noConsole",
			"Deno Lint Name": "no-console",
			"ESLint Name": "no-console",
			"Oxlint Name": "eslint/no-console"
		}
	},
	"constructorReturns": {
		"biome": [
			{
				"name": "noConstructorReturn",
				"url": "https://biomejs.dev/linter/rules/noConstructorReturn"
			}
		],
		"eslint": [
			{
				"name": "no-constructor-return",
				"url": "https://eslint.org/docs/latest/rules/no-constructor-return"
			}
		],
		"flint": {
			"name": "constructorReturns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "eslint/no-constructor-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-constructor-return.html"
			}
		],
		"raw": {
			"Flint Name": "constructorReturns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "None",
			"Biome Name": "noConstructorReturn",
			"ESLint Name": "no-constructor-return",
			"Oxlint Name": "eslint/no-constructor-return"
		}
	},
	"importTypeSideEffects": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-import-type-side-effects",
				"url": "https://typescript-eslint.io/rules/no-import-type-side-effects"
			}
		],
		"flint": {
			"name": "importTypeSideEffects",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "typescript/no-import-type-side-effects",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-import-type-side-effects.html"
			}
		],
		"raw": {
			"Flint Name": "importTypeSideEffects",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "None",
			"ESLint Name": "@typescript-eslint/no-import-type-side-effects",
			"Oxlint Name": "typescript/no-import-type-side-effects"
		}
	},
	"loopAwaits": {
		"biome": [
			{
				"name": "noAwaitInLoops",
				"url": "https://biomejs.dev/linter/rules/noAwaitInLoops"
			}
		],
		"deno": [
			{
				"name": "no-await-in-loop",
				"url": "https://docs.deno.com/lint/rules/no-await-in-loop"
			}
		],
		"eslint": [
			{
				"name": "no-await-in-loop",
				"url": "https://eslint.org/docs/latest/rules/no-await-in-loop"
			}
		],
		"flint": {
			"name": "loopAwaits",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "eslint/no-await-in-loop",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-await-in-loop.html"
			}
		],
		"raw": {
			"Flint Name": "loopAwaits",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "None",
			"Biome Name": "noAwaitInLoops",
			"Deno Lint Name": "no-await-in-loop",
			"ESLint Name": "no-await-in-loop",
			"Oxlint Name": "eslint/no-await-in-loop"
		}
	},
	"loopFunctions": {
		"eslint": [
			{
				"name": "no-loop-func",
				"url": "https://eslint.org/docs/latest/rules/no-loop-func"
			},
			{
				"name": "@typescript-eslint/no-loop-func",
				"url": "https://typescript-eslint.io/rules/no-loop-func"
			}
		],
		"flint": {
			"name": "loopFunctions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "loopFunctions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "None",
			"ESLint Name": "no-loop-func; @typescript-eslint/no-loop-func"
		}
	},
	"regexUnicodeFlag": {
		"eslint": [
			{
				"name": "require-unicode-regexp",
				"url": "https://eslint.org/docs/latest/rules/require-unicode-regexp"
			},
			{
				"name": "regexp/require-unicode-regexp",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/require-unicode-regexp.html"
			}
		],
		"flint": {
			"name": "regexUnicodeFlag",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "regexUnicodeFlag",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "None",
			"ESLint Name": "require-unicode-regexp; regexp/require-unicode-regexp"
		}
	},
	"restrictedGlobals": {
		"biome": [
			{
				"name": "noRestrictedGlobals",
				"url": "https://biomejs.dev/linter/rules/noRestrictedGlobals"
			}
		],
		"eslint": [
			{
				"name": "no-restricted-globals",
				"url": "https://eslint.org/docs/latest/rules/no-restricted-globals"
			}
		],
		"flint": {
			"name": "restrictedGlobals",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "eslint/no-restricted-globals",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-restricted-globals.html"
			}
		],
		"raw": {
			"Flint Name": "restrictedGlobals",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "None",
			"Biome Name": "noRestrictedGlobals",
			"ESLint Name": "no-restricted-globals",
			"Oxlint Name": "eslint/no-restricted-globals"
		}
	},
	"restrictedIdentifiers": {
		"eslint": [
			{
				"name": "id-denylist",
				"url": "https://eslint.org/docs/latest/rules/id-denylist"
			}
		],
		"flint": {
			"name": "restrictedIdentifiers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "restrictedIdentifiers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "None",
			"ESLint Name": "id-denylist"
		}
	},
	"restrictedProperties": {
		"eslint": [
			{
				"name": "no-restricted-properties",
				"url": "https://eslint.org/docs/latest/rules/no-restricted-properties"
			}
		],
		"flint": {
			"name": "restrictedProperties",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "restrictedProperties",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "None",
			"ESLint Name": "no-restricted-properties"
		}
	},
	"restrictedSyntax": {
		"eslint": [
			{
				"name": "no-restricted-syntax",
				"url": "https://eslint.org/docs/latest/rules/no-restricted-syntax"
			}
		],
		"flint": {
			"name": "restrictedSyntax",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "restrictedSyntax",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "None",
			"ESLint Name": "no-restricted-syntax"
		}
	},
	"restrictedTypes": {
		"biome": [
			{
				"name": "noBannedTypes",
				"url": "https://biomejs.dev/linter/rules/noBannedTypes"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-restricted-types",
				"url": "https://typescript-eslint.io/rules/no-restricted-types"
			}
		],
		"flint": {
			"name": "restrictedTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "None"
		},
		"raw": {
			"Flint Name": "restrictedTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "None",
			"Biome Name": "noBannedTypes",
			"ESLint Name": "@typescript-eslint/no-restricted-types"
		}
	},
	"abbreviations": {
		"eslint": [
			{
				"name": "unicorn/prevent-abbreviations",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prevent-abbreviations.md"
			}
		],
		"flint": {
			"name": "abbreviations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "abbreviations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prevent-abbreviations"
		}
	},
	"accessorPairs": {
		"eslint": [
			{
				"name": "accessor-pairs",
				"url": "https://eslint.org/docs/latest/rules/accessor-pairs"
			}
		],
		"flint": {
			"name": "accessorPairs",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "accessorPairs",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "accessor-pairs"
		}
	},
	"argumentsArrayMethods": {
		"flint": {
			"name": "argumentsArrayMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/bad-array-method-on-arguments",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-array-method-on-arguments.html"
			}
		],
		"raw": {
			"Flint Name": "argumentsArrayMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "oxc/bad-array-method-on-arguments"
		}
	},
	"argumentsProperties": {
		"eslint": [
			{
				"name": "no-caller",
				"url": "https://eslint.org/docs/latest/rules/no-caller"
			}
		],
		"flint": {
			"name": "argumentsProperties",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-caller",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-caller.html"
			}
		],
		"raw": {
			"Flint Name": "argumentsProperties",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-caller",
			"Oxlint Name": "eslint/no-caller"
		}
	},
	"arrayDestructuringSparsity": {
		"eslint": [
			{
				"name": "unicorn/no-unreadable-array-destructuring",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-unreadable-array-destructuring.md"
			}
		],
		"flint": {
			"name": "arrayDestructuringSparsity",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-unreadable-array-destructuring",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unreadable-array-destructuring.html"
			}
		],
		"raw": {
			"Flint Name": "arrayDestructuringSparsity",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-unreadable-array-destructuring",
			"Oxlint Name": "unicorn/no-unreadable-array-destructuring"
		}
	},
	"arrayFlatDepthMagicNumbers": {
		"eslint": [
			{
				"name": "unicorn/no-magic-array-flat-depth",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-magic-array-flat-depth.md"
			}
		],
		"flint": {
			"name": "arrayFlatDepthMagicNumbers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-magic-array-flat-depth",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-magic-array-flat-depth.html"
			}
		],
		"raw": {
			"Flint Name": "arrayFlatDepthMagicNumbers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-magic-array-flat-depth",
			"Oxlint Name": "unicorn/no-magic-array-flat-depth"
		}
	},
	"arrayJoinSeparators": {
		"eslint": [
			{
				"name": "unicorn/require-array-join-separator",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/require-array-join-separator.md"
			}
		],
		"flint": {
			"name": "arrayJoinSeparators",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/require-array-join-separator",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/require-array-join-separator.html"
			}
		],
		"raw": {
			"Flint Name": "arrayJoinSeparators",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/require-array-join-separator",
			"Oxlint Name": "unicorn/require-array-join-separator"
		}
	},
	"arrayMethodThisArguments": {
		"eslint": [
			{
				"name": "unicorn/no-array-method-this-argument",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-method-this-argument.md"
			}
		],
		"flint": {
			"name": "arrayMethodThisArguments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-array-method-this-argument",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-array-method-this-argument.html"
			}
		],
		"raw": {
			"Flint Name": "arrayMethodThisArguments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-array-method-this-argument",
			"Oxlint Name": "unicorn/no-array-method-this-argument"
		}
	},
	"arrayReducers": {
		"eslint": [
			{
				"name": "unicorn/no-array-reduce",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-reduce.md"
			}
		],
		"flint": {
			"name": "arrayReducers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-array-reduce",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-array-reduce.html"
			}
		],
		"raw": {
			"Flint Name": "arrayReducers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-array-reduce",
			"Oxlint Name": "unicorn/no-array-reduce"
		}
	},
	"arraySortCompareArgument": {
		"eslint": [
			{
				"name": "@typescript-eslint/require-array-sort-compare",
				"url": "https://typescript-eslint.io/rules/require-array-sort-compare"
			}
		],
		"flint": {
			"name": "arraySortCompareArgument",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "typescript/require-array-sort-compare",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/require-array-sort-compare.html"
			}
		],
		"raw": {
			"Flint Name": "arraySortCompareArgument",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "@typescript-eslint/require-array-sort-compare",
			"Oxlint Name": "typescript/require-array-sort-compare"
		}
	},
	"arrowBodyBraces": {
		"eslint": [
			{
				"name": "arrow-body-style",
				"url": "https://eslint.org/docs/latest/rules/arrow-body-style"
			}
		],
		"flint": {
			"name": "arrowBodyBraces",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/arrow-body-style",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/arrow-body-style.html"
			}
		],
		"raw": {
			"Flint Name": "arrowBodyBraces",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "arrow-body-style",
			"Oxlint Name": "eslint/arrow-body-style"
		}
	},
	"arrowCallbacks": {
		"biome": [
			{
				"name": "useArrowFunction",
				"url": "https://biomejs.dev/linter/rules/useArrowFunction"
			}
		],
		"eslint": [
			{
				"name": "prefer-arrow-callback",
				"url": "https://eslint.org/docs/latest/rules/prefer-arrow-callback"
			}
		],
		"flint": {
			"name": "arrowCallbacks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "arrowCallbacks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useArrowFunction",
			"ESLint Name": "prefer-arrow-callback"
		}
	},
	"assignmentOperationRefactors": {
		"flint": {
			"name": "assignmentOperationRefactors",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/misrefactored-assign-op",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/misrefactored-assign-op.html"
			}
		],
		"raw": {
			"Flint Name": "assignmentOperationRefactors",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "oxc/misrefactored-assign-op"
		}
	},
	"asyncAwaitStatements": {
		"flint": {
			"name": "asyncAwaitStatements",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/no-async-await",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-async-await.html"
			}
		],
		"raw": {
			"Flint Name": "asyncAwaitStatements",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "oxc/no-async-await"
		}
	},
	"atomicUpdates": {
		"eslint": [
			{
				"name": "require-atomic-updates",
				"url": "https://eslint.org/docs/latest/rules/require-atomic-updates"
			}
		],
		"flint": {
			"name": "atomicUpdates",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "atomicUpdates",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "require-atomic-updates"
		}
	},
	"awaitMemberAccesses": {
		"eslint": [
			{
				"name": "unicorn/no-await-expression-member",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-await-expression-member.md"
			}
		],
		"flint": {
			"name": "awaitMemberAccesses",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-await-expression-member",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-await-expression-member.html"
			}
		],
		"raw": {
			"Flint Name": "awaitMemberAccesses",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-await-expression-member",
			"Oxlint Name": "unicorn/no-await-expression-member"
		}
	},
	"barrelFiles": {
		"flint": {
			"name": "barrelFiles",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/no-barrel-file",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-barrel-file.html"
			}
		],
		"raw": {
			"Flint Name": "barrelFiles",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "oxc/no-barrel-file"
		}
	},
	"bitwiseOperatorLogic": {
		"flint": {
			"name": "bitwiseOperatorLogic",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/bad-bitwise-operator",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-bitwise-operator.html"
			}
		],
		"raw": {
			"Flint Name": "bitwiseOperatorLogic",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "oxc/bad-bitwise-operator"
		}
	},
	"bitwiseOperators": {
		"biome": [
			{
				"name": "noBitwiseOperators",
				"url": "https://biomejs.dev/linter/rules/noBitwiseOperators"
			}
		],
		"eslint": [
			{
				"name": "no-bitwise",
				"url": "https://eslint.org/docs/latest/rules/no-bitwise"
			}
		],
		"flint": {
			"name": "bitwiseOperators",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-bitwise",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-bitwise.html"
			}
		],
		"raw": {
			"Flint Name": "bitwiseOperators",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noBitwiseOperators",
			"ESLint Name": "no-bitwise",
			"Oxlint Name": "eslint/no-bitwise"
		}
	},
	"blockStatements": {
		"biome": [
			{
				"name": "useBlockStatements",
				"url": "https://biomejs.dev/linter/rules/useBlockStatements"
			}
		],
		"eslint": [
			{
				"name": "curly",
				"url": "https://eslint.org/docs/latest/rules/curly"
			}
		],
		"flint": {
			"name": "blockStatements",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing",
			"strictness": "Strict"
		},
		"notes": "Superseded by prettier-plugin-curly",
		"oxlint": [
			{
				"name": "eslint/curly",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/curly.html"
			}
		],
		"raw": {
			"Flint Name": "blockStatements",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Flint Strictness": "Strict",
			"Biome Name": "useBlockStatements",
			"ESLint Name": "curly",
			"Oxlint Name": "eslint/curly",
			"Notes": "Superseded by prettier-plugin-curly"
		}
	},
	"booleanLiteralParameterComments": {
		"deno": [
			{
				"name": "no-boolean-literal-for-arguments",
				"url": "https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments"
			}
		],
		"flint": {
			"name": "booleanLiteralParameterComments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "booleanLiteralParameterComments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "no-boolean-literal-for-arguments"
		}
	},
	"builtinPrototypeMethodAccesses": {
		"eslint": [
			{
				"name": "unicorn/prefer-prototype-methods",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-prototype-methods.md"
			}
		],
		"flint": {
			"name": "builtinPrototypeMethodAccesses",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-prototype-methods",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-prototype-methods.html"
			}
		],
		"raw": {
			"Flint Name": "builtinPrototypeMethodAccesses",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-prototype-methods",
			"Oxlint Name": "unicorn/prefer-prototype-methods"
		}
	},
	"capitalizedConstructors": {
		"eslint": [
			{
				"name": "new-cap",
				"url": "https://eslint.org/docs/latest/rules/new-cap"
			}
		],
		"flint": {
			"name": "capitalizedConstructors",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/new-cap",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/new-cap.html"
			}
		],
		"raw": {
			"Flint Name": "capitalizedConstructors",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "new-cap",
			"Oxlint Name": "eslint/new-cap"
		}
	},
	"commentCapitalization": {
		"eslint": [
			{
				"name": "capitalized-comments",
				"url": "https://eslint.org/docs/latest/rules/capitalized-comments"
			}
		],
		"flint": {
			"name": "commentCapitalization",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "commentCapitalization",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "capitalized-comments"
		}
	},
	"commentWarnings": {
		"eslint": [
			{
				"name": "no-warning-comments",
				"url": "https://eslint.org/docs/latest/rules/no-warning-comments"
			}
		],
		"flint": {
			"name": "commentWarnings",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "commentWarnings",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-warning-comments"
		}
	},
	"comparisonSequences": {
		"flint": {
			"name": "comparisonSequences",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Handled by TypeScript / otherwise is stylistic",
		"raw": {
			"Flint Name": "comparisonSequences",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Notes": "Handled by TypeScript / otherwise is stylistic"
		}
	},
	"conditionalAssignments": {
		"biome": [
			{
				"name": "noAssignInExpressions",
				"url": "https://biomejs.dev/linter/rules/noAssignInExpressions"
			}
		],
		"deno": [
			{
				"name": "no-cond-assign",
				"url": "https://docs.deno.com/lint/rules/no-cond-assign"
			}
		],
		"eslint": [
			{
				"name": "no-cond-assign",
				"url": "https://eslint.org/docs/latest/rules/no-cond-assign"
			}
		],
		"flint": {
			"name": "conditionalAssignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by unnecessaryConditions",
		"oxlint": [
			{
				"name": "eslint/no-cond-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-cond-assign.html"
			}
		],
		"raw": {
			"Flint Name": "conditionalAssignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noAssignInExpressions",
			"Deno Lint Name": "no-cond-assign",
			"ESLint Name": "no-cond-assign",
			"Oxlint Name": "eslint/no-cond-assign",
			"Notes": "Superseded by unnecessaryConditions"
		}
	},
	"conditionNegations": {
		"biome": [
			{
				"name": "noNegationElse",
				"url": "https://biomejs.dev/linter/rules/noNegationElse"
			}
		],
		"eslint": [
			{
				"name": "no-negated-condition",
				"url": "https://eslint.org/docs/latest/rules/no-negated-condition"
			},
			{
				"name": "unicorn/no-negated-condition",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-negated-condition.md"
			}
		],
		"flint": {
			"name": "conditionNegations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-negated-condition",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-negated-condition.html"
			}
		],
		"raw": {
			"Flint Name": "conditionNegations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noNegationElse",
			"ESLint Name": "no-negated-condition; unicorn/no-negated-condition",
			"Oxlint Name": "eslint/no-negated-condition"
		}
	},
	"conditionOrdering": {
		"biome": [
			{
				"name": "noYodaExpression",
				"url": "https://biomejs.dev/linter/rules/noYodaExpression"
			}
		],
		"eslint": [
			{
				"name": "yoda",
				"url": "https://eslint.org/docs/latest/rules/yoda"
			}
		],
		"flint": {
			"name": "conditionOrdering",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/yoda",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/yoda.html"
			}
		],
		"raw": {
			"Flint Name": "conditionOrdering",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noYodaExpression",
			"ESLint Name": "yoda",
			"Oxlint Name": "eslint/yoda"
		}
	},
	"consistentReturns": {
		"eslint": [
			{
				"name": "consistent-return",
				"url": "https://eslint.org/docs/latest/rules/consistent-return"
			},
			{
				"name": "@typescript-eslint/consistent-return",
				"url": "https://typescript-eslint.io/rules/consistent-return"
			}
		],
		"flint": {
			"name": "consistentReturns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "consistentReturns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "consistent-return; @typescript-eslint/consistent-return"
		}
	},
	"constantBinaryExpressions": {
		"biome": [
			{
				"name": "noConstantBinaryExpressions",
				"url": "https://biomejs.dev/linter/rules/noConstantBinaryExpressions"
			}
		],
		"eslint": [
			{
				"name": "no-constant-binary-expression",
				"url": "https://eslint.org/docs/latest/rules/no-constant-binary-expression"
			}
		],
		"flint": {
			"name": "constantBinaryExpressions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by unnecessaryConditions",
		"oxlint": [
			{
				"name": "eslint/no-constant-binary-expression",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-constant-binary-expression.html"
			}
		],
		"raw": {
			"Flint Name": "constantBinaryExpressions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noConstantBinaryExpressions",
			"ESLint Name": "no-constant-binary-expression",
			"Oxlint Name": "eslint/no-constant-binary-expression",
			"Notes": "Superseded by unnecessaryConditions"
		}
	},
	"constantConditions": {
		"biome": [
			{
				"name": "noConstantCondition",
				"url": "https://biomejs.dev/linter/rules/noConstantCondition"
			}
		],
		"deno": [
			{
				"name": "no-constant-condition",
				"url": "https://docs.deno.com/lint/rules/no-constant-condition"
			}
		],
		"eslint": [
			{
				"name": "no-constant-condition",
				"url": "https://eslint.org/docs/latest/rules/no-constant-condition"
			}
		],
		"flint": {
			"name": "constantConditions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by unnecessaryConditions",
		"oxlint": [
			{
				"name": "eslint/no-constant-condition",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-constant-condition.html"
			}
		],
		"raw": {
			"Flint Name": "constantConditions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noConstantCondition",
			"Deno Lint Name": "no-constant-condition",
			"ESLint Name": "no-constant-condition",
			"Oxlint Name": "eslint/no-constant-condition",
			"Notes": "Superseded by unnecessaryConditions"
		}
	},
	"constEnums": {
		"biome": [
			{
				"name": "noConstEnum",
				"url": "https://biomejs.dev/linter/rules/noConstEnum"
			}
		],
		"flint": {
			"name": "constEnums",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "constEnums",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noConstEnum"
		}
	},
	"continues": {
		"eslint": [
			{
				"name": "no-continue",
				"url": "https://eslint.org/docs/latest/rules/no-continue"
			}
		],
		"flint": {
			"name": "continues",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-continue",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-continue.html"
			}
		],
		"raw": {
			"Flint Name": "continues",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-continue",
			"Oxlint Name": "eslint/no-continue"
		}
	},
	"defaultCases": {
		"biome": [
			{
				"name": "useDefaultSwitchClause",
				"url": "https://biomejs.dev/linter/rules/useDefaultSwitchClause"
			}
		],
		"eslint": [
			{
				"name": "default-case",
				"url": "https://eslint.org/docs/latest/rules/default-case"
			}
		],
		"flint": {
			"name": "defaultCases",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/default-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/default-case.html"
			}
		],
		"raw": {
			"Flint Name": "defaultCases",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useDefaultSwitchClause",
			"ESLint Name": "default-case",
			"Oxlint Name": "eslint/default-case"
		}
	},
	"defaultImportRenames": {
		"eslint": [
			{
				"name": "unicorn/no-named-default",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-named-default.md"
			}
		],
		"flint": {
			"name": "defaultImportRenames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/no-named-default",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-named-default.html"
			},
			{
				"name": "import/no-named-as-default",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-named-as-default.html"
			},
			{
				"name": "import/no-named-as-default-member",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-named-as-default-member.html"
			}
		],
		"raw": {
			"Flint Name": "defaultImportRenames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-named-default",
			"Oxlint Name": "import/no-named-default; import/no-named-as-default; import/no-named-as-default-member"
		}
	},
	"defaultParameterReassignments": {
		"eslint": [
			{
				"name": "unicorn/prefer-default-parameters",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-default-parameters.md"
			}
		],
		"flint": {
			"name": "defaultParameterReassignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "defaultParameterReassignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prefer-default-parameters"
		}
	},
	"destructuring": {
		"eslint": [
			{
				"name": "prefer-destructuring",
				"url": "https://eslint.org/docs/latest/rules/prefer-destructuring"
			},
			{
				"name": "@typescript-eslint/prefer-destructuring",
				"url": "https://typescript-eslint.io/rules/prefer-destructuring"
			}
		],
		"flint": {
			"name": "destructuring",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-destructuring",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-destructuring.html"
			}
		],
		"raw": {
			"Flint Name": "destructuring",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "prefer-destructuring; @typescript-eslint/prefer-destructuring",
			"Oxlint Name": "eslint/prefer-destructuring"
		}
	},
	"directiveDisableSelectors": {
		"eslint": [
			{
				"name": "unicorn/no-abusive-eslint-disable",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-abusive-eslint-disable.md"
			}
		],
		"flint": {
			"name": "directiveDisableSelectors",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Core requires explicit disables",
		"oxlint": [
			{
				"name": "unicorn/no-abusive-eslint-disable",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-abusive-eslint-disable.html"
			}
		],
		"raw": {
			"Flint Name": "directiveDisableSelectors",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-abusive-eslint-disable",
			"Oxlint Name": "unicorn/no-abusive-eslint-disable",
			"Notes": "Core requires explicit disables"
		}
	},
	"directiveDuplicateDisables": {
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-duplicate-disable",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveDuplicateDisables",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Core detects duplicate disables",
		"raw": {
			"Flint Name": "directiveDuplicateDisables",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "@eslint-community/eslint-comments/no-duplicate-disable",
			"Notes": "Core detects duplicate disables"
		}
	},
	"directiveMisleadingEnables": {
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-aggregating-enable",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveMisleadingEnables",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Core requires explicit enables",
		"raw": {
			"Flint Name": "directiveMisleadingEnables",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "@eslint-community/eslint-comments/no-aggregating-enable",
			"Notes": "Core requires explicit enables"
		}
	},
	"directiveRestrictedDisables": {
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-restricted-disable",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveRestrictedDisables",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "directiveRestrictedDisables",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "@eslint-community/eslint-comments/no-restricted-disable"
		}
	},
	"directiveSelectors": {
		"deno": [
			{
				"name": "ban-untagged-ignore",
				"url": "https://docs.deno.com/lint/rules/ban-untagged-ignore"
			}
		],
		"flint": {
			"name": "directiveSelectors",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Handled by Flint core",
		"raw": {
			"Flint Name": "directiveSelectors",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "ban-untagged-ignore",
			"Notes": "Handled by Flint core"
		}
	},
	"directiveUnknownRules": {
		"deno": [
			{
				"name": "ban-unknown-rule-code",
				"url": "https://docs.deno.com/lint/rules/ban-unknown-rule-code"
			}
		],
		"flint": {
			"name": "directiveUnknownRules",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Handled by Flint core",
		"raw": {
			"Flint Name": "directiveUnknownRules",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "ban-unknown-rule-code",
			"Notes": "Handled by Flint core"
		}
	},
	"directiveUnlimitedDisables": {
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-unlimited-disable",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveUnlimitedDisables",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Core requires explicit disables",
		"raw": {
			"Flint Name": "directiveUnlimitedDisables",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "@eslint-community/eslint-comments/no-unlimited-disable",
			"Notes": "Core requires explicit disables"
		}
	},
	"directiveUnused": {
		"deno": [
			{
				"name": "ban-unused-ignore",
				"url": "https://docs.deno.com/lint/rules/ban-unused-ignore"
			}
		],
		"flint": {
			"name": "directiveUnused",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Handled by Flint core",
		"raw": {
			"Flint Name": "directiveUnused",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "ban-unused-ignore",
			"Notes": "Handled by Flint core"
		}
	},
	"directiveUnusedDisables": {
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-unused-disable",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveUnusedDisables",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Core detects unused disables",
		"raw": {
			"Flint Name": "directiveUnusedDisables",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "@eslint-community/eslint-comments/no-unused-disable",
			"Notes": "Core detects unused disables"
		}
	},
	"directiveUnusedEnables": {
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-unused-enable",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveUnusedEnables",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Core detects unused enables",
		"raw": {
			"Flint Name": "directiveUnusedEnables",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "@eslint-community/eslint-comments/no-unused-enable",
			"Notes": "Core detects unused enables"
		}
	},
	"endingTernaryIfElses": {
		"eslint": [
			{
				"name": "unicorn/prefer-ternary",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-ternary.md"
			}
		],
		"flint": {
			"name": "endingTernaryIfElses",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "endingTernaryIfElses",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prefer-ternary"
		}
	},
	"enumInitializers": {
		"biome": [
			{
				"name": "useEnumInitializers",
				"url": "https://biomejs.dev/linter/rules/useEnumInitializers"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-enum-initializers",
				"url": "https://typescript-eslint.io/rules/prefer-enum-initializers"
			}
		],
		"flint": {
			"name": "enumInitializers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-enum-initializers",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-enum-initializers.html"
			}
		],
		"raw": {
			"Flint Name": "enumInitializers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useEnumInitializers",
			"ESLint Name": "@typescript-eslint/prefer-enum-initializers",
			"Oxlint Name": "typescript/prefer-enum-initializers"
		}
	},
	"equalityOperatorNegations": {
		"eslint": [
			{
				"name": "unicorn/no-negation-in-equality-check",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-negation-in-equality-check.md"
			}
		],
		"flint": {
			"name": "equalityOperatorNegations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-negation-in-equality-check",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-negation-in-equality-check.html"
			}
		],
		"raw": {
			"Flint Name": "equalityOperatorNegations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-negation-in-equality-check",
			"Oxlint Name": "unicorn/no-negation-in-equality-check"
		}
	},
	"evolvingVariableTypes": {
		"biome": [
			{
				"name": "noImplicitAnyLet",
				"url": "https://biomejs.dev/linter/rules/noImplicitAnyLet"
			}
		],
		"flint": {
			"name": "evolvingVariableTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "evolvingVariableTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noImplicitAnyLet"
		}
	},
	"exportDefault": {
		"eslint": [
			{
				"name": "import/prefer-default-export",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/prefer-default-export.md"
			}
		],
		"flint": {
			"name": "exportDefault",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/prefer-default-export",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/prefer-default-export.html"
			}
		],
		"raw": {
			"Flint Name": "exportDefault",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/prefer-default-export",
			"Oxlint Name": "import/prefer-default-export"
		}
	},
	"exportGroups": {
		"eslint": [
			{
				"name": "import/group-exports",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/group-exports.md"
			}
		],
		"flint": {
			"name": "exportGroups",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/group-exports",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/group-exports.html"
			}
		],
		"raw": {
			"Flint Name": "exportGroups",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/group-exports",
			"Oxlint Name": "import/group-exports"
		}
	},
	"exportLast": {
		"eslint": [
			{
				"name": "import/exports-last",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/exports-last.md"
			}
		],
		"flint": {
			"name": "exportLast",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/exports-last",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/exports-last.html"
			}
		],
		"raw": {
			"Flint Name": "exportLast",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/exports-last",
			"Oxlint Name": "import/exports-last"
		}
	},
	"exportUniqueNames": {
		"eslint": [
			{
				"name": "import/exports",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/exports.md"
			}
		],
		"flint": {
			"name": "exportUniqueNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/exports",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/exports.html"
			}
		],
		"raw": {
			"Flint Name": "exportUniqueNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/exports",
			"Oxlint Name": "import/exports"
		}
	},
	"externalHttpImports": {
		"deno": [
			{
				"name": "no-external-import",
				"url": "https://docs.deno.com/lint/rules/no-external-import"
			}
		],
		"flint": {
			"name": "externalHttpImports",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "externalHttpImports",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "no-external-import"
		}
	},
	"filenameCasing": {
		"biome": [
			{
				"name": "useFilenamingConvention",
				"url": "https://biomejs.dev/linter/rules/useFilenamingConvention"
			}
		],
		"eslint": [
			{
				"name": "unicorn/filename-case",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/filename-case.md"
			}
		],
		"flint": {
			"name": "filenameCasing",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/filename-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/filename-case.html"
			}
		],
		"raw": {
			"Flint Name": "filenameCasing",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useFilenamingConvention",
			"ESLint Name": "unicorn/filename-case",
			"Oxlint Name": "unicorn/filename-case"
		}
	},
	"functionDeclarationStyles": {
		"eslint": [
			{
				"name": "func-style",
				"url": "https://eslint.org/docs/latest/rules/func-style"
			}
		],
		"flint": {
			"name": "functionDeclarationStyles",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/func-style",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/func-style.html"
			}
		],
		"raw": {
			"Flint Name": "functionDeclarationStyles",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "func-style",
			"Oxlint Name": "eslint/func-style"
		}
	},
	"functionNameMatches": {
		"eslint": [
			{
				"name": "func-name-matching",
				"url": "https://eslint.org/docs/latest/rules/func-name-matching"
			}
		],
		"flint": {
			"name": "functionNameMatches",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "functionNameMatches",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "func-name-matching"
		}
	},
	"functionNames": {
		"eslint": [
			{
				"name": "func-names",
				"url": "https://eslint.org/docs/latest/rules/func-names"
			}
		],
		"flint": {
			"name": "functionNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/func-names",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/func-names.html"
			}
		],
		"raw": {
			"Flint Name": "functionNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "func-names",
			"Oxlint Name": "eslint/func-names"
		}
	},
	"functionReturnTypes": {
		"biome": [
			{
				"name": "useExplicitType",
				"url": "https://biomejs.dev/linter/rules/useExplicitType"
			}
		],
		"deno": [
			{
				"name": "explicit-function-return-type",
				"url": "https://docs.deno.com/lint/rules/explicit-function-return-type"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/explicit-function-return-type",
				"url": "https://typescript-eslint.io/rules/explicit-function-return-type"
			}
		],
		"flint": {
			"name": "functionReturnTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "typescript/explicit-function-return-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/explicit-function-return-type.html"
			}
		],
		"raw": {
			"Flint Name": "functionReturnTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useExplicitType",
			"Deno Lint Name": "explicit-function-return-type",
			"ESLint Name": "@typescript-eslint/explicit-function-return-type",
			"Oxlint Name": "typescript/explicit-function-return-type"
		}
	},
	"hexEscapes": {
		"eslint": [
			{
				"name": "unicorn/no-hex-escape",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-hex-escape.md"
			}
		],
		"flint": {
			"name": "hexEscapes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-hex-escape",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-hex-escape.html"
			}
		],
		"raw": {
			"Flint Name": "hexEscapes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-hex-escape",
			"Oxlint Name": "unicorn/no-hex-escape"
		}
	},
	"identifierMatches": {
		"eslint": [
			{
				"name": "id-match",
				"url": "https://eslint.org/docs/latest/rules/id-match"
			}
		],
		"flint": {
			"name": "identifierMatches",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "identifierMatches",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "id-match"
		}
	},
	"iifeReadability": {
		"eslint": [
			{
				"name": "unicorn/no-unreadable-iife",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-unreadable-iife.md"
			}
		],
		"flint": {
			"name": "iifeReadability",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-unreadable-iife",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unreadable-iife.html"
			}
		],
		"raw": {
			"Flint Name": "iifeReadability",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-unreadable-iife",
			"Oxlint Name": "unicorn/no-unreadable-iife"
		}
	},
	"implicitCoercions": {
		"biome": [
			{
				"name": "noImplicitCoercions",
				"url": "https://biomejs.dev/linter/rules/noImplicitCoercions"
			}
		],
		"eslint": [
			{
				"name": "no-implicit-coercion",
				"url": "https://eslint.org/docs/latest/rules/no-implicit-coercion"
			}
		],
		"flint": {
			"name": "implicitCoercions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "implicitCoercions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noImplicitCoercions",
			"ESLint Name": "no-implicit-coercion"
		}
	},
	"importAbsolutePaths": {
		"eslint": [
			{
				"name": "import/no-absolute-path",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-absolute-path.md"
			}
		],
		"flint": {
			"name": "importAbsolutePaths",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/no-absolute-path",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-absolute-path.html"
			}
		],
		"raw": {
			"Flint Name": "importAbsolutePaths",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/no-absolute-path",
			"Oxlint Name": "import/no-absolute-path"
		}
	},
	"importAssertions": {
		"deno": [
			{
				"name": "no-import-assertions",
				"url": "https://docs.deno.com/lint/rules/no-import-assertions"
			}
		],
		"flint": {
			"name": "importAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "importAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "no-import-assertions",
			"Notes": "Generally handled by parsers."
		}
	},
	"importDefaults": {
		"eslint": [
			{
				"name": "import/default",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/default.md"
			}
		],
		"flint": {
			"name": "importDefaults",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Handled by TypeScript",
		"oxlint": [
			{
				"name": "eslint/default",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/default.html"
			}
		],
		"raw": {
			"Flint Name": "importDefaults",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/default",
			"Oxlint Name": "eslint/default",
			"Notes": "Handled by TypeScript"
		}
	},
	"importFirst": {
		"eslint": [
			{
				"name": "import/first",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/first.md"
			}
		],
		"flint": {
			"name": "importFirst",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/first",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/first.html"
			}
		],
		"raw": {
			"Flint Name": "importFirst",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/first",
			"Oxlint Name": "import/first"
		}
	},
	"importMaximumDependencies": {
		"eslint": [
			{
				"name": "import/max-dependencies",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/max-dependencies.md"
			}
		],
		"flint": {
			"name": "importMaximumDependencies",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/max-dependencies",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/max-dependencies.html"
			}
		],
		"raw": {
			"Flint Name": "importMaximumDependencies",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/max-dependencies",
			"Oxlint Name": "import/max-dependencies"
		}
	},
	"importNameMatches": {
		"eslint": [
			{
				"name": "import/named",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/named.md"
			}
		],
		"flint": {
			"name": "importNameMatches",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/named",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/named.html"
			}
		],
		"raw": {
			"Flint Name": "importNameMatches",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/named",
			"Oxlint Name": "import/named"
		}
	},
	"importNamespaceProperties": {
		"eslint": [
			{
				"name": "import/namespace",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/namespace.md"
			}
		],
		"flint": {
			"name": "importNamespaceProperties",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Handled by TypeScript",
		"oxlint": [
			{
				"name": "eslint/namespace",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/namespace.html"
			}
		],
		"raw": {
			"Flint Name": "importNamespaceProperties",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/namespace",
			"Oxlint Name": "eslint/namespace",
			"Notes": "Handled by TypeScript"
		}
	},
	"importNamespaces": {
		"eslint": [
			{
				"name": "import/no-namespace",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-namespace.md"
			}
		],
		"flint": {
			"name": "importNamespaces",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/no-namespace",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-namespace.html"
			}
		],
		"raw": {
			"Flint Name": "importNamespaces",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/no-namespace",
			"Oxlint Name": "import/no-namespace"
		}
	},
	"inlineComments": {
		"eslint": [
			{
				"name": "no-inline-comments",
				"url": "https://eslint.org/docs/latest/rules/no-inline-comments"
			}
		],
		"flint": {
			"name": "inlineComments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "inlineComments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-inline-comments"
		}
	},
	"innerDeclarations": {
		"biome": [
			{
				"name": "noInnerDeclarations",
				"url": "https://biomejs.dev/linter/rules/noInnerDeclarations"
			}
		],
		"deno": [
			{
				"name": "no-inner-declarations",
				"url": "https://docs.deno.com/lint/rules/no-inner-declarations"
			}
		],
		"eslint": [
			{
				"name": "no-inner-declarations",
				"url": "https://eslint.org/docs/latest/rules/no-inner-declarations"
			}
		],
		"flint": {
			"name": "innerDeclarations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-inner-declarations",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-inner-declarations.html"
			}
		],
		"raw": {
			"Flint Name": "innerDeclarations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noInnerDeclarations",
			"Deno Lint Name": "no-inner-declarations",
			"ESLint Name": "no-inner-declarations",
			"Oxlint Name": "eslint/no-inner-declarations"
		}
	},
	"iteratorMethodFunctionReferences": {
		"eslint": [
			{
				"name": "unicorn/no-array-callback-reference",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-callback-reference.md"
			}
		],
		"flint": {
			"name": "iteratorMethodFunctionReferences",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "iteratorMethodFunctionReferences",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-array-callback-reference"
		}
	},
	"jsdocAlignment": {
		"eslint": [
			{
				"name": "jsdoc/check-alignment",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-alignment.md"
			}
		],
		"flint": {
			"name": "jsdocAlignment",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "I intend to write a Prettier plugin.",
		"raw": {
			"Flint Name": "jsdocAlignment",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/check-alignment",
			"Notes": "I intend to write a Prettier plugin."
		}
	},
	"jsdocBlankBlockDescriptions": {
		"eslint": [
			{
				"name": "jsdoc/no-blank-block-descriptions",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-blank-block-descriptions.md"
			}
		],
		"flint": {
			"name": "jsdocBlankBlockDescriptions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocBlankBlockDescriptions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/no-blank-block-descriptions"
		}
	},
	"jsdocConvertToJSDocComments": {
		"eslint": [
			{
				"name": "jsdoc/convert-to-jsdoc-comments",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/convert-to-jsdoc-comments.md"
			}
		],
		"flint": {
			"name": "jsdocConvertToJSDocComments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocConvertToJSDocComments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/convert-to-jsdoc-comments"
		}
	},
	"jsdocDefaults": {
		"eslint": [
			{
				"name": "jsdoc/no-defaults",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-defaults.md"
			}
		],
		"flint": {
			"name": "jsdocDefaults",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/no-defaults",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/no-defaults.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocDefaults",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/no-defaults",
			"Oxlint Name": "jsdoc/no-defaults"
		}
	},
	"jsdocDefinedTypes": {
		"eslint": [
			{
				"name": "jsdoc/no-undefined-types",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-undefined-types.md"
			}
		],
		"flint": {
			"name": "jsdocDefinedTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocDefinedTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/no-undefined-types"
		}
	},
	"jsdocDescriptionCompleteSentences": {
		"eslint": [
			{
				"name": "jsdoc/require-description-complete-sentence",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-description-complete-sentence.md"
			}
		],
		"flint": {
			"name": "jsdocDescriptionCompleteSentences",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocDescriptionCompleteSentences",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-description-complete-sentence"
		}
	},
	"jsdocDescriptions": {
		"eslint": [
			{
				"name": "jsdoc/require-description",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-description.md"
			}
		],
		"flint": {
			"name": "jsdocDescriptions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocDescriptions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-description"
		}
	},
	"jsdocExamples": {
		"eslint": [
			{
				"name": "jsdoc/require-example",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-example.md"
			}
		],
		"flint": {
			"name": "jsdocExamples",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocExamples",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-example"
		}
	},
	"jsdocFileOverviews": {
		"eslint": [
			{
				"name": "jsdoc/require-file-overview",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-file-overview.md"
			}
		],
		"flint": {
			"name": "jsdocFileOverviews",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocFileOverviews",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-file-overview"
		}
	},
	"jsdocImportsAsDependencies": {
		"eslint": [
			{
				"name": "jsdoc/imports-as-dependencies",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/imports-as-dependencies.md"
			}
		],
		"flint": {
			"name": "jsdocImportsAsDependencies",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocImportsAsDependencies",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/imports-as-dependencies"
		}
	},
	"jsdocIndentation": {
		"eslint": [
			{
				"name": "jsdoc/check-indentation",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-indentation.md"
			}
		],
		"flint": {
			"name": "jsdocIndentation",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "I intend to write a Prettier plugin.",
		"raw": {
			"Flint Name": "jsdocIndentation",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/check-indentation",
			"Notes": "I intend to write a Prettier plugin."
		}
	},
	"jsdocLineAlignment": {
		"eslint": [
			{
				"name": "jsdoc/check-line-alignment",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-line-alignment.md"
			}
		],
		"flint": {
			"name": "jsdocLineAlignment",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "I intend to write a Prettier plugin.",
		"raw": {
			"Flint Name": "jsdocLineAlignment",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/check-line-alignment",
			"Notes": "I intend to write a Prettier plugin."
		}
	},
	"jsdocMatchDescriptions": {
		"eslint": [
			{
				"name": "jsdoc/match-description",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/match-description.md"
			}
		],
		"flint": {
			"name": "jsdocMatchDescriptions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocMatchDescriptions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/match-description"
		}
	},
	"jsdocMatchNames": {
		"eslint": [
			{
				"name": "jsdoc/match-names",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/match-names.md"
			}
		],
		"flint": {
			"name": "jsdocMatchNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocMatchNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/match-names"
		}
	},
	"jsdocMissingSyntax": {
		"eslint": [
			{
				"name": "jsdoc/no-missing-syntax",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-missing-syntax.md"
			}
		],
		"flint": {
			"name": "jsdocMissingSyntax",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocMissingSyntax",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/no-missing-syntax"
		}
	},
	"jsdocParameterDescriptions": {
		"eslint": [
			{
				"name": "jsdoc/require-param-description",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-param-description.md"
			}
		],
		"flint": {
			"name": "jsdocParameterDescriptions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-param-description",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-param-description.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocParameterDescriptions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-param-description",
			"Oxlint Name": "jsdoc/require-param-description"
		}
	},
	"jsdocParameterNames": {
		"eslint": [
			{
				"name": "jsdoc/check-param-names",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-param-names.md"
			}
		],
		"flint": {
			"name": "jsdocParameterNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "jsdocParameterNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/check-param-names"
		}
	},
	"jsdocParameters": {
		"eslint": [
			{
				"name": "jsdoc/require-param",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-param.md"
			}
		],
		"flint": {
			"name": "jsdocParameters",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-param",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-param.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocParameters",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-param",
			"Oxlint Name": "jsdoc/require-param"
		}
	},
	"jsdocParameterTypes": {
		"eslint": [
			{
				"name": "jsdoc/require-param-type",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-param-type.md"
			}
		],
		"flint": {
			"name": "jsdocParameterTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-param-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-param-type.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocParameterTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-param-type",
			"Oxlint Name": "jsdoc/require-param-type"
		}
	},
	"jsdocProperties": {
		"eslint": [
			{
				"name": "jsdoc/require-property",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-property.md"
			}
		],
		"flint": {
			"name": "jsdocProperties",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-property",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-property.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocProperties",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-property",
			"Oxlint Name": "jsdoc/require-property"
		}
	},
	"jsdocPropertyDescriptions": {
		"eslint": [
			{
				"name": "jsdoc/require-property-description",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-property-description.md"
			}
		],
		"flint": {
			"name": "jsdocPropertyDescriptions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-property-description",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-property-description.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocPropertyDescriptions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-property-description",
			"Oxlint Name": "jsdoc/require-property-description"
		}
	},
	"jsdocPropertyNames": {
		"eslint": [
			{
				"name": "jsdoc/check-property-names",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-property-names.md"
			}
		],
		"flint": {
			"name": "jsdocPropertyNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "jsdoc/check-property-names",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/check-property-names.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocPropertyNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/check-property-names",
			"Oxlint Name": "jsdoc/check-property-names"
		}
	},
	"jsdocPropertyTypes": {
		"eslint": [
			{
				"name": "jsdoc/require-property-type",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-property-type.md"
			}
		],
		"flint": {
			"name": "jsdocPropertyTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-property-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-property-type.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocPropertyTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-property-type",
			"Oxlint Name": "jsdoc/require-property-type"
		}
	},
	"jsdocRequired": {
		"eslint": [
			{
				"name": "jsdoc/require-jsdoc",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-jsdoc.md"
			}
		],
		"flint": {
			"name": "jsdocRequired",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocRequired",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-jsdoc"
		}
	},
	"jsdocReturnDescriptions": {
		"eslint": [
			{
				"name": "jsdoc/require-returns-description",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-returns-description.md"
			}
		],
		"flint": {
			"name": "jsdocReturnDescriptions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-returns-description",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-returns-description.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocReturnDescriptions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-returns-description",
			"Oxlint Name": "jsdoc/require-returns-description"
		}
	},
	"jsdocReturns": {
		"eslint": [
			{
				"name": "jsdoc/require-returns",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-returns.md"
			}
		],
		"flint": {
			"name": "jsdocReturns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-returns",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-returns.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocReturns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-returns",
			"Oxlint Name": "jsdoc/require-returns"
		}
	},
	"jsdocReturnTypes": {
		"eslint": [
			{
				"name": "jsdoc/require-returns-type",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-returns-type.md"
			}
		],
		"flint": {
			"name": "jsdocReturnTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-returns-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-returns-type.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocReturnTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-returns-type",
			"Oxlint Name": "jsdoc/require-returns-type"
		}
	},
	"jsdocTagLines": {
		"eslint": [
			{
				"name": "jsdoc/tag-lines",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/tag-lines.md"
			}
		],
		"flint": {
			"name": "jsdocTagLines",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocTagLines",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/tag-lines"
		}
	},
	"jsdocTemplates": {
		"eslint": [
			{
				"name": "jsdoc/require-template",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-template.md"
			}
		],
		"flint": {
			"name": "jsdocTemplates",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocTemplates",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-template"
		}
	},
	"jsdocTextEscaping": {
		"eslint": [
			{
				"name": "jsdoc/text-escaping",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/text-escaping.md"
			}
		],
		"flint": {
			"name": "jsdocTextEscaping",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocTextEscaping",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/text-escaping"
		}
	},
	"jsdocThrows": {
		"eslint": [
			{
				"name": "jsdoc/require-throws",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-throws.md"
			}
		],
		"flint": {
			"name": "jsdocThrows",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsdocThrows",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/require-throws"
		}
	},
	"jsonImportAttributes": {
		"biome": [
			{
				"name": "useJsonImportAttributes",
				"url": "https://biomejs.dev/linter/rules/useJsonImportAttributes"
			}
		],
		"flint": {
			"name": "jsonImportAttributes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "jsonImportAttributes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useJsonImportAttributes"
		}
	},
	"labels": {
		"biome": [
			{
				"name": "noConfusingLabels",
				"url": "https://biomejs.dev/linter/rules/noConfusingLabels"
			}
		],
		"eslint": [
			{
				"name": "no-labels",
				"url": "https://eslint.org/docs/latest/rules/no-labels"
			}
		],
		"flint": {
			"name": "labels",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-labels",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-labels.html"
			}
		],
		"raw": {
			"Flint Name": "labels",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noConfusingLabels",
			"ESLint Name": "no-labels",
			"Oxlint Name": "eslint/no-labels"
		}
	},
	"labelVariableNames": {
		"biome": [
			{
				"name": "noLabelVar",
				"url": "https://biomejs.dev/linter/rules/noLabelVar"
			}
		],
		"eslint": [
			{
				"name": "no-label-var",
				"url": "https://eslint.org/docs/latest/rules/no-label-var"
			}
		],
		"flint": {
			"name": "labelVariableNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-label-var",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-label-var.html"
			}
		],
		"raw": {
			"Flint Name": "labelVariableNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noLabelVar",
			"ESLint Name": "no-label-var",
			"Oxlint Name": "eslint/no-label-var"
		}
	},
	"loopConditionConstants": {
		"eslint": [
			{
				"name": "no-unmodified-loop-condition",
				"url": "https://eslint.org/docs/latest/rules/no-unmodified-loop-condition"
			}
		],
		"flint": {
			"name": "loopConditionConstants",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "loopConditionConstants",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-unmodified-loop-condition"
		}
	},
	"magicNumbers": {
		"biome": [
			{
				"name": "noMagicNumbers",
				"url": "https://biomejs.dev/linter/rules/noMagicNumbers"
			}
		],
		"eslint": [
			{
				"name": "no-magic-numbers",
				"url": "https://eslint.org/docs/latest/rules/no-magic-numbers"
			},
			{
				"name": "@typescript-eslint/no-magic-numbers",
				"url": "https://typescript-eslint.io/rules/no-magic-numbers"
			}
		],
		"flint": {
			"name": "magicNumbers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-magic-numbers",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-magic-numbers.html"
			}
		],
		"raw": {
			"Flint Name": "magicNumbers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noMagicNumbers",
			"ESLint Name": "no-magic-numbers; @typescript-eslint/no-magic-numbers",
			"Oxlint Name": "eslint/no-magic-numbers"
		}
	},
	"mathRangeTernaries": {
		"eslint": [
			{
				"name": "unicorn/prefer-math-min-max",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-math-min-max.md"
			}
		],
		"flint": {
			"name": "mathRangeTernaries",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-math-min-max",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-math-min-max.html"
			}
		],
		"raw": {
			"Flint Name": "mathRangeTernaries",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prefer-math-min-max",
			"Oxlint Name": "unicorn/prefer-math-min-max"
		}
	},
	"mathTruncationOperators": {
		"eslint": [
			{
				"name": "unicorn/prefer-math-trunc",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-math-trunc.md"
			}
		],
		"flint": {
			"name": "mathTruncationOperators",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-math-trunc",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-math-trunc.html"
			}
		],
		"raw": {
			"Flint Name": "mathTruncationOperators",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prefer-math-trunc",
			"Oxlint Name": "unicorn/prefer-math-trunc"
		}
	},
	"maximumClassesPerFile": {
		"eslint": [
			{
				"name": "max-classes-per-file",
				"url": "https://eslint.org/docs/latest/rules/max-classes-per-file"
			}
		],
		"flint": {
			"name": "maximumClassesPerFile",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/max-classes-per-file",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-classes-per-file.html"
			}
		],
		"raw": {
			"Flint Name": "maximumClassesPerFile",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "max-classes-per-file",
			"Oxlint Name": "eslint/max-classes-per-file"
		}
	},
	"maximumComplexity": {
		"eslint": [
			{
				"name": "complexity",
				"url": "https://eslint.org/docs/latest/rules/complexity"
			}
		],
		"flint": {
			"name": "maximumComplexity",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "maximumComplexity",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "complexity"
		}
	},
	"maximumDepth": {
		"eslint": [
			{
				"name": "max-depth",
				"url": "https://eslint.org/docs/latest/rules/max-depth"
			}
		],
		"flint": {
			"name": "maximumDepth",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/max-depth",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-depth.html"
			}
		],
		"raw": {
			"Flint Name": "maximumDepth",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "max-depth",
			"Oxlint Name": "eslint/max-depth"
		}
	},
	"maximumIdentifierLengths": {
		"eslint": [
			{
				"name": "id-length",
				"url": "https://eslint.org/docs/latest/rules/id-length"
			}
		],
		"flint": {
			"name": "maximumIdentifierLengths",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/id-length",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/id-length.html"
			}
		],
		"raw": {
			"Flint Name": "maximumIdentifierLengths",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "id-length",
			"Oxlint Name": "eslint/id-length"
		}
	},
	"maximumLinesPerFile": {
		"eslint": [
			{
				"name": "max-lines",
				"url": "https://eslint.org/docs/latest/rules/max-lines"
			}
		],
		"flint": {
			"name": "maximumLinesPerFile",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/max-lines",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-lines.html"
			}
		],
		"raw": {
			"Flint Name": "maximumLinesPerFile",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "max-lines",
			"Oxlint Name": "eslint/max-lines"
		}
	},
	"maximumLinesPerFunction": {
		"biome": [
			{
				"name": "noExcessiveLinesPerFunction",
				"url": "https://biomejs.dev/linter/rules/noExcessiveLinesPerFunction"
			}
		],
		"eslint": [
			{
				"name": "max-lines-per-function",
				"url": "https://eslint.org/docs/latest/rules/max-lines-per-function"
			}
		],
		"flint": {
			"name": "maximumLinesPerFunction",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/max-lines-per-function",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-lines-per-function.html"
			}
		],
		"raw": {
			"Flint Name": "maximumLinesPerFunction",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noExcessiveLinesPerFunction",
			"ESLint Name": "max-lines-per-function",
			"Oxlint Name": "eslint/max-lines-per-function"
		}
	},
	"maximumNestedCallbacks": {
		"eslint": [
			{
				"name": "max-nested-callbacks",
				"url": "https://eslint.org/docs/latest/rules/max-nested-callbacks"
			}
		],
		"flint": {
			"name": "maximumNestedCallbacks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/max-nested-callbacks",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-nested-callbacks.html"
			}
		],
		"raw": {
			"Flint Name": "maximumNestedCallbacks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "max-nested-callbacks",
			"Oxlint Name": "eslint/max-nested-callbacks"
		}
	},
	"maximumParameters": {
		"biome": [
			{
				"name": "useMaxParams",
				"url": "https://biomejs.dev/linter/rules/useMaxParams"
			}
		],
		"eslint": [
			{
				"name": "max-params",
				"url": "https://eslint.org/docs/latest/rules/max-params"
			},
			{
				"name": "@typescript-eslint/max-params",
				"url": "https://typescript-eslint.io/rules/max-params"
			}
		],
		"flint": {
			"name": "maximumParameters",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/max-params",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-params.html"
			}
		],
		"raw": {
			"Flint Name": "maximumParameters",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useMaxParams",
			"ESLint Name": "max-params; @typescript-eslint/max-params",
			"Oxlint Name": "eslint/max-params"
		}
	},
	"maximumStatements": {
		"eslint": [
			{
				"name": "max-statements",
				"url": "https://eslint.org/docs/latest/rules/max-statements"
			}
		],
		"flint": {
			"name": "maximumStatements",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "maximumStatements",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "max-statements"
		}
	},
	"memberAccessibility": {
		"biome": [
			{
				"name": "useConsistentMemberAccessibility",
				"url": "https://biomejs.dev/linter/rules/useConsistentMemberAccessibility"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/explicit-member-accessibility",
				"url": "https://typescript-eslint.io/rules/explicit-member-accessibility"
			}
		],
		"flint": {
			"name": "memberAccessibility",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "memberAccessibility",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useConsistentMemberAccessibility",
			"ESLint Name": "@typescript-eslint/explicit-member-accessibility"
		}
	},
	"misleadingShorthandAssignments": {
		"flint": {
			"name": "misleadingShorthandAssignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "misleadingShorthandAssignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing"
		}
	},
	"misleadingThenProperties": {
		"biome": [
			{
				"name": "noThenProperty",
				"url": "https://biomejs.dev/linter/rules/noThenProperty"
			}
		],
		"eslint": [
			{
				"name": "unicorn/no-thenable",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-thenable.md"
			}
		],
		"flint": {
			"name": "misleadingThenProperties",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-thenable",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-thenable.html"
			}
		],
		"raw": {
			"Flint Name": "misleadingThenProperties",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noThenProperty",
			"ESLint Name": "unicorn/no-thenable",
			"Oxlint Name": "unicorn/no-thenable"
		}
	},
	"moduleBoundaryTypes": {
		"biome": [
			{
				"name": "useExplicitType",
				"url": "https://biomejs.dev/linter/rules/useExplicitType"
			}
		],
		"deno": [
			{
				"name": "explicit-module-boundary-types",
				"url": "https://docs.deno.com/lint/rules/explicit-module-boundary-types"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/explicit-module-boundary-types",
				"url": "https://typescript-eslint.io/rules/explicit-module-boundary-types"
			}
		],
		"flint": {
			"name": "moduleBoundaryTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "typescript/explicit-module-boundary-types",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/explicit-module-boundary-types.html"
			}
		],
		"raw": {
			"Flint Name": "moduleBoundaryTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useExplicitType",
			"Deno Lint Name": "explicit-module-boundary-types",
			"ESLint Name": "@typescript-eslint/explicit-module-boundary-types",
			"Oxlint Name": "typescript/explicit-module-boundary-types"
		}
	},
	"moduleFormats": {
		"biome": [
			{
				"name": "noGlobalDirnameFilename",
				"url": "https://biomejs.dev/linter/rules/noGlobalDirnameFilename"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-module",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-module.md"
			}
		],
		"flint": {
			"name": "moduleFormats",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "moduleFormats",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noGlobalDirnameFilename",
			"ESLint Name": "unicorn/prefer-module"
		}
	},
	"moduleImportStyles": {
		"eslint": [
			{
				"name": "unicorn/import-style",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/import-style.md"
			}
		],
		"flint": {
			"name": "moduleImportStyles",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "moduleImportStyles",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/import-style"
		}
	},
	"multipleElseIfSwitches": {
		"eslint": [
			{
				"name": "unicorn/prefer-switch",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-switch.md"
			}
		],
		"flint": {
			"name": "multipleElseIfSwitches",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "multipleElseIfSwitches",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prefer-switch"
		}
	},
	"namingConventions": {
		"biome": [
			{
				"name": "useNamingConvention",
				"url": "https://biomejs.dev/linter/rules/useNamingConvention"
			}
		],
		"deno": [
			{
				"name": "camelcase",
				"url": "https://docs.deno.com/lint/rules/camelcase"
			}
		],
		"eslint": [
			{
				"name": "camelcase",
				"url": "https://eslint.org/docs/latest/rules/camelcase"
			},
			{
				"name": "@typescript-eslint/naming-conventions",
				"url": "https://typescript-eslint.io/rules/naming-conventions"
			}
		],
		"flint": {
			"name": "namingConventions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "namingConventions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useNamingConvention",
			"Deno Lint Name": "camelcase",
			"ESLint Name": "camelcase; @typescript-eslint/naming-conventions"
		}
	},
	"nullComparisons": {
		"eslint": [
			{
				"name": "no-eq-null",
				"url": "https://eslint.org/docs/latest/rules/no-eq-null"
			}
		],
		"flint": {
			"name": "nullComparisons",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-eql-null",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-eql-null.html"
			}
		],
		"raw": {
			"Flint Name": "nullComparisons",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-eq-null",
			"Oxlint Name": "eslint/no-eql-null"
		}
	},
	"nulls": {
		"eslint": [
			{
				"name": "unicorn/no-null",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-null.md"
			}
		],
		"flint": {
			"name": "nulls",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-null",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-null.html"
			}
		],
		"raw": {
			"Flint Name": "nulls",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-null",
			"Oxlint Name": "unicorn/no-null"
		}
	},
	"numberKeyLiterals": {
		"biome": [
			{
				"name": "useSimpleNumberKeys",
				"url": "https://biomejs.dev/linter/rules/useSimpleNumberKeys"
			}
		],
		"flint": {
			"name": "numberKeyLiterals",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "numberKeyLiterals",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useSimpleNumberKeys"
		}
	},
	"numberToFixedDigits": {
		"biome": [
			{
				"name": "useNumberToFixedDigitsArgument",
				"url": "https://biomejs.dev/linter/rules/useNumberToFixedDigitsArgument"
			}
		],
		"eslint": [
			{
				"name": "unicorn/require-number-to-fixed-digits-argument",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/require-number-to-fixed-digits-argument.md"
			}
		],
		"flint": {
			"name": "numberToFixedDigits",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/require-number-to-fixed-digits-argument",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/require-number-to-fixed-digits-argument.html"
			}
		],
		"raw": {
			"Flint Name": "numberToFixedDigits",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useNumberToFixedDigitsArgument",
			"ESLint Name": "unicorn/require-number-to-fixed-digits-argument",
			"Oxlint Name": "unicorn/require-number-to-fixed-digits-argument"
		}
	},
	"numericConstantApproximations": {
		"biome": [
			{
				"name": "noApproximativeNumericConstant",
				"url": "https://biomejs.dev/linter/rules/noApproximativeNumericConstant"
			}
		],
		"flint": {
			"name": "numericConstantApproximations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/approx-constant",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/approx-constant.html"
			}
		],
		"raw": {
			"Flint Name": "numericConstantApproximations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noApproximativeNumericConstant",
			"Oxlint Name": "oxc/approx-constant"
		}
	},
	"objectDefaultParameters": {
		"eslint": [
			{
				"name": "unicorn/no-object-as-default-parameter",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-object-as-default-parameter.md"
			}
		],
		"flint": {
			"name": "objectDefaultParameters",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-object-as-default-parameter",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-object-as-default-parameter.html"
			}
		],
		"raw": {
			"Flint Name": "objectDefaultParameters",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-object-as-default-parameter",
			"Oxlint Name": "unicorn/no-object-as-default-parameter"
		}
	},
	"objectLiteralComparisons": {
		"flint": {
			"name": "objectLiteralComparisons",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/bad-object-literal-comparison",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-object-literal-comparison.html"
			}
		],
		"raw": {
			"Flint Name": "objectLiteralComparisons",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "oxc/bad-object-literal-comparison"
		}
	},
	"optionalChainExpressions": {
		"flint": {
			"name": "optionalChainExpressions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/no-optional-chaining",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-optional-chaining.html"
			}
		],
		"raw": {
			"Flint Name": "optionalChainExpressions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "oxc/no-optional-chaining"
		}
	},
	"parameterProperties": {
		"biome": [
			{
				"name": "noParameterProperties",
				"url": "https://biomejs.dev/linter/rules/noParameterProperties"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/parameter-properties",
				"url": "https://typescript-eslint.io/rules/parameter-properties"
			},
			{
				"name": "erasable-syntax-only/parameter-properties",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-erasable-syntax-only/blob/HEAD/docs/rules/parameter-properties.md"
			}
		],
		"flint": {
			"name": "parameterProperties",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "parameterProperties",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noParameterProperties",
			"ESLint Name": "@typescript-eslint/parameter-properties; erasable-syntax-only/parameter-properties"
		}
	},
	"plusPlusOperators": {
		"eslint": [
			{
				"name": "no-plusplus",
				"url": "https://eslint.org/docs/latest/rules/no-plusplus"
			}
		],
		"flint": {
			"name": "plusPlusOperators",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-plusplus",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-plusplus.html"
			}
		],
		"raw": {
			"Flint Name": "plusPlusOperators",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-plusplus",
			"Oxlint Name": "eslint/no-plusplus"
		}
	},
	"prefixedClassLikes": {
		"eslint": [
			{
				"name": "unicorn/no-keyword-prefix",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-keyword-prefix.md"
			}
		],
		"flint": {
			"name": "prefixedClassLikes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "prefixedClassLikes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-keyword-prefix"
		}
	},
	"promiseAlwaysReturn": {
		"flint": {
			"name": "promiseAlwaysReturn",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by no-floating-promises",
		"oxlint": [
			{
				"name": "promise/always-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/always-return.html"
			}
		],
		"raw": {
			"Flint Name": "promiseAlwaysReturn",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "promise/always-return",
			"Notes": "Superseded by no-floating-promises"
		}
	},
	"promiseArgumentCounts": {
		"flint": {
			"name": "promiseArgumentCounts",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/valid-params",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/valid-params.html"
			}
		],
		"raw": {
			"Flint Name": "promiseArgumentCounts",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "promise/valid-params"
		}
	},
	"promiseAwaitableCallbacks": {
		"eslint": [
			{
				"name": "promise/prefer-await-to-callbacks",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/prefer-await-to-callbacks.md"
			}
		],
		"flint": {
			"name": "promiseAwaitableCallbacks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/prefer-await-to-callbacks",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/prefer-await-to-callbacks.html"
			}
		],
		"raw": {
			"Flint Name": "promiseAwaitableCallbacks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "promise/prefer-await-to-callbacks",
			"Oxlint Name": "promise/prefer-await-to-callbacks"
		}
	},
	"promiseAwaitableThens": {
		"eslint": [
			{
				"name": "promise/prefer-await-to-then",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/prefer-await-to-then.md"
			}
		],
		"flint": {
			"name": "promiseAwaitableThens",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/prefer-await-to-then",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/prefer-await-to-then.html"
			}
		],
		"raw": {
			"Flint Name": "promiseAwaitableThens",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "promise/prefer-await-to-then",
			"Oxlint Name": "promise/prefer-await-to-then"
		}
	},
	"promiseCatchableThens": {
		"eslint": [
			{
				"name": "promise/prefer-catch",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/prefer-catch.md"
			}
		],
		"flint": {
			"name": "promiseCatchableThens",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/prefer-catch",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/prefer-catch.html"
			}
		],
		"raw": {
			"Flint Name": "promiseCatchableThens",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "promise/prefer-catch",
			"Oxlint Name": "promise/prefer-catch"
		}
	},
	"promiseCatchOrReturn": {
		"flint": {
			"name": "promiseCatchOrReturn",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by no-floating-promises",
		"oxlint": [
			{
				"name": "promise/catch-or-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/catch-or-return.html"
			}
		],
		"raw": {
			"Flint Name": "promiseCatchOrReturn",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "promise/catch-or-return",
			"Notes": "Superseded by no-floating-promises"
		}
	},
	"promiseErrorFirstCallbacks": {
		"flint": {
			"name": "promiseErrorFirstCallbacks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by no-floating-promises",
		"oxlint": [
			{
				"name": "promise/no-promise-in-callback",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-promise-in-callback.html"
			}
		],
		"raw": {
			"Flint Name": "promiseErrorFirstCallbacks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "promise/no-promise-in-callback",
			"Notes": "Superseded by no-floating-promises"
		}
	},
	"promiseNesting": {
		"eslint": [
			{
				"name": "promise/no-nesting",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/no-nesting.md"
			}
		],
		"flint": {
			"name": "promiseNesting",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/no-nesting",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-nesting.html"
			}
		],
		"raw": {
			"Flint Name": "promiseNesting",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "promise/no-nesting",
			"Oxlint Name": "promise/no-nesting"
		}
	},
	"promiseNews": {
		"eslint": [
			{
				"name": "promise/avoid-new",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/avoid-new.md"
			}
		],
		"flint": {
			"name": "promiseNews",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/avoid-new",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/avoid-new.html"
			}
		],
		"raw": {
			"Flint Name": "promiseNews",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "promise/avoid-new",
			"Oxlint Name": "promise/avoid-new"
		}
	},
	"promiseNewStatics": {
		"flint": {
			"name": "promiseNewStatics",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/no-new-statics",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-new-statics.html"
			}
		],
		"raw": {
			"Flint Name": "promiseNewStatics",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "promise/no-new-statics"
		}
	},
	"promiseNonSpecMethods": {
		"flint": {
			"name": "promiseNonSpecMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by no-floating-promises",
		"oxlint": [
			{
				"name": "promise/spec-only",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/spec-only.html"
			}
		],
		"raw": {
			"Flint Name": "promiseNonSpecMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "promise/spec-only",
			"Notes": "Superseded by no-floating-promises"
		}
	},
	"promiseParameterNames": {
		"eslint": [
			{
				"name": "promise/param-names",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/param-names.md"
			}
		],
		"flint": {
			"name": "promiseParameterNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/param-names",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/param-names.html"
			}
		],
		"raw": {
			"Flint Name": "promiseParameterNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "promise/param-names",
			"Oxlint Name": "promise/param-names"
		}
	},
	"prototypeIterators": {
		"eslint": [
			{
				"name": "no-iterator",
				"url": "https://eslint.org/docs/latest/rules/no-iterator"
			}
		],
		"flint": {
			"name": "prototypeIterators",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-iterator",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-iterator.html"
			}
		],
		"raw": {
			"Flint Name": "prototypeIterators",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-iterator",
			"Oxlint Name": "eslint/no-iterator"
		}
	},
	"readonlyClassProperties": {
		"biome": [
			{
				"name": "useReadonlyClassProperties",
				"url": "https://biomejs.dev/linter/rules/useReadonlyClassProperties"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-readonly",
				"url": "https://typescript-eslint.io/rules/prefer-readonly"
			}
		],
		"flint": {
			"name": "readonlyClassProperties",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "readonlyClassProperties",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Flint Strictness": "Strict",
			"Biome Name": "useReadonlyClassProperties",
			"ESLint Name": "@typescript-eslint/prefer-readonly"
		}
	},
	"reflectApplies": {
		"eslint": [
			{
				"name": "unicorn/prefer-reflect-apply",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-reflect-apply.md"
			}
		],
		"flint": {
			"name": "reflectApplies",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-reflect-apply",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-reflect-apply.html"
			}
		],
		"raw": {
			"Flint Name": "reflectApplies",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prefer-reflect-apply",
			"Oxlint Name": "unicorn/prefer-reflect-apply"
		}
	},
	"regexConciseness": {
		"eslint": [
			{
				"name": "unicorn/better-regex",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/better-regex.md"
			}
		],
		"flint": {
			"name": "regexConciseness",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by other regex cleanliness rules",
		"raw": {
			"Flint Name": "regexConciseness",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/better-regex",
			"Notes": "Superseded by other regex cleanliness rules"
		}
	},
	"regexConsecutiveSpaces": {
		"biome": [
			{
				"name": "noAdjacentSpacesInRegex",
				"url": "https://biomejs.dev/linter/rules/noAdjacentSpacesInRegex"
			}
		],
		"deno": [
			{
				"name": "no-regex-spaces",
				"url": "https://docs.deno.com/lint/rules/no-regex-spaces"
			}
		],
		"eslint": [
			{
				"name": "no-regex-spaces",
				"url": "https://eslint.org/docs/latest/rules/no-regex-spaces"
			}
		],
		"flint": {
			"name": "regexConsecutiveSpaces",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-regex-spaces",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-regex-spaces.html"
			}
		],
		"raw": {
			"Flint Name": "regexConsecutiveSpaces",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noAdjacentSpacesInRegex",
			"Deno Lint Name": "no-regex-spaces",
			"ESLint Name": "no-regex-spaces",
			"Oxlint Name": "eslint/no-regex-spaces"
		}
	},
	"regexDivisionStarts": {
		"eslint": [
			{
				"name": "no-div-regex",
				"url": "https://eslint.org/docs/latest/rules/no-div-regex"
			}
		],
		"flint": {
			"name": "regexDivisionStarts",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-div-regex",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-div-regex.html"
			}
		],
		"raw": {
			"Flint Name": "regexDivisionStarts",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-div-regex",
			"Oxlint Name": "eslint/no-div-regex"
		}
	},
	"regexTopLevelDeclarations": {
		"biome": [
			{
				"name": "useTopLevelRegex",
				"url": "https://biomejs.dev/linter/rules/useTopLevelRegex"
			}
		],
		"flint": {
			"name": "regexTopLevelDeclarations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "regexTopLevelDeclarations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useTopLevelRegex"
		}
	},
	"regexUnicodeSetsFlag": {
		"eslint": [
			{
				"name": "regexp/require-unicode-sets-regexp",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/require-unicode-sets-regexp.html"
			}
		],
		"flint": {
			"name": "regexUnicodeSetsFlag",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "regexUnicodeSetsFlag",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "regexp/require-unicode-sets-regexp"
		}
	},
	"restrictedDirectives": {
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-use",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "restrictedDirectives",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "restrictedDirectives",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "@eslint-community/eslint-comments/no-use"
		}
	},
	"restrictedExports": {
		"eslint": [
			{
				"name": "no-restricted-exports",
				"url": "https://eslint.org/docs/latest/rules/no-restricted-exports"
			}
		],
		"flint": {
			"name": "restrictedExports",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "restrictedExports",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-restricted-exports"
		}
	},
	"restrictedJSDocs": {
		"eslint": [
			{
				"name": "jsdoc/no-restricted-syntax",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-restricted-syntax.md"
			}
		],
		"flint": {
			"name": "restrictedJSDocs",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "restrictedJSDocs",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "jsdoc/no-restricted-syntax"
		}
	},
	"restSpreadProperties": {
		"flint": {
			"name": "restSpreadProperties",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/no-rest-spread-properties",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-rest-spread-properties.html"
			}
		],
		"raw": {
			"Flint Name": "restSpreadProperties",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Oxlint Name": "oxc/no-rest-spread-properties"
		}
	},
	"shoutyConstants": {
		"biome": [
			{
				"name": "noShoutyConstants",
				"url": "https://biomejs.dev/linter/rules/noShoutyConstants"
			}
		],
		"flint": {
			"name": "shoutyConstants",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "shoutyConstants",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noShoutyConstants"
		}
	},
	"slowTypes": {
		"deno": [
			{
				"name": "no-slow-types",
				"url": "https://docs.deno.com/lint/rules/no-slow-types"
			}
		],
		"flint": {
			"name": "slowTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "slowTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "no-slow-types"
		}
	},
	"strictMode": {
		"biome": [
			{
				"name": "useStrictMode",
				"url": "https://biomejs.dev/linter/rules/useStrictMode"
			}
		],
		"flint": {
			"name": "strictMode",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "strictMode",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useStrictMode"
		}
	},
	"stringConcatenationTemplates": {
		"biome": [
			{
				"name": "useTemplate",
				"url": "https://biomejs.dev/linter/rules/useTemplate"
			}
		],
		"eslint": [
			{
				"name": "prefer-template",
				"url": "https://eslint.org/docs/latest/rules/prefer-template"
			}
		],
		"flint": {
			"name": "stringConcatenationTemplates",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-template",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-template.html"
			}
		],
		"raw": {
			"Flint Name": "stringConcatenationTemplates",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useTemplate",
			"ESLint Name": "prefer-template",
			"Oxlint Name": "eslint/prefer-template"
		}
	},
	"stringContents": {
		"eslint": [
			{
				"name": "unicorn/string-content",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/string-content.md"
			}
		],
		"flint": {
			"name": "stringContents",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "stringContents",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/string-content"
		}
	},
	"stringRawEscapes": {
		"eslint": [
			{
				"name": "unicorn/prefer-string-raw",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-string-raw.md"
			}
		],
		"flint": {
			"name": "stringRawEscapes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-string-raw",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-raw.html"
			}
		],
		"raw": {
			"Flint Name": "stringRawEscapes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prefer-string-raw",
			"Oxlint Name": "unicorn/prefer-string-raw"
		}
	},
	"stringReplaceAllRegexSearches": {
		"eslint": [
			{
				"name": "unicorn/prefer-string-replace-all",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-string-replace-all.md"
			}
		],
		"flint": {
			"name": "stringReplaceAllRegexSearches",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-string-replace-all",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-replace-all.html"
			}
		],
		"raw": {
			"Flint Name": "stringReplaceAllRegexSearches",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prefer-string-replace-all",
			"Oxlint Name": "unicorn/prefer-string-replace-all"
		}
	},
	"stringStartsEndsWithMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-string-starts-ends-with",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-string-starts-ends-with.md"
			}
		],
		"flint": {
			"name": "stringStartsEndsWithMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "stringStartsEndsWithMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prefer-string-starts-ends-with"
		}
	},
	"stringTemplateCurlies": {
		"biome": [
			{
				"name": "noTemplateCurlyInString",
				"url": "https://biomejs.dev/linter/rules/noTemplateCurlyInString"
			}
		],
		"eslint": [
			{
				"name": "no-template-curly-in-string",
				"url": "https://eslint.org/docs/latest/rules/no-template-curly-in-string"
			}
		],
		"flint": {
			"name": "stringTemplateCurlies",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-template-curly-in-string",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-template-curly-in-string.html"
			}
		],
		"raw": {
			"Flint Name": "stringTemplateCurlies",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noTemplateCurlyInString",
			"ESLint Name": "no-template-curly-in-string",
			"Oxlint Name": "eslint/no-template-curly-in-string"
		}
	},
	"switchCaseBraces": {
		"eslint": [
			{
				"name": "unicorn/switch-case-braces",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/switch-case-braces.md"
			}
		],
		"flint": {
			"name": "switchCaseBraces",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/switch-case-braces",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/switch-case-braces.html"
			}
		],
		"raw": {
			"Flint Name": "switchCaseBraces",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/switch-case-braces",
			"Oxlint Name": "unicorn/switch-case-braces"
		}
	},
	"switchExhaustiveness": {
		"biome": [
			{
				"name": "useExhaustiveSwitchCases",
				"url": "https://biomejs.dev/linter/rules/useExhaustiveSwitchCases"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/switch-exhaustiveness-check",
				"url": "https://typescript-eslint.io/rules/switch-exhaustiveness-check"
			}
		],
		"flint": {
			"name": "switchExhaustiveness",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "typescript/switch-exhaustiveness-check",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/switch-exhaustiveness-check.html"
			}
		],
		"raw": {
			"Flint Name": "switchExhaustiveness",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "useExhaustiveSwitchCases",
			"ESLint Name": "@typescript-eslint/switch-exhaustiveness-check",
			"Oxlint Name": "typescript/switch-exhaustiveness-check"
		}
	},
	"syncFunctionAwaits": {
		"deno": [
			{
				"name": "no-await-in-sync-fun",
				"url": "https://docs.deno.com/lint/rules/no-await-in-sync-fun"
			}
		],
		"flint": {
			"name": "syncFunctionAwaits",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers.",
		"raw": {
			"Flint Name": "syncFunctionAwaits",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "no-await-in-sync-fun",
			"Notes": "Generally handled by parsers."
		}
	},
	"templateIndents": {
		"eslint": [
			{
				"name": "unicorn/template-indent",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/template-indent.md"
			}
		],
		"flint": {
			"name": "templateIndents",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "templateIndents",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/template-indent"
		}
	},
	"ternaryNesting": {
		"biome": [
			{
				"name": "noNestedTernary",
				"url": "https://biomejs.dev/linter/rules/noNestedTernary"
			}
		],
		"eslint": [
			{
				"name": "no-nested-ternary",
				"url": "https://eslint.org/docs/latest/rules/no-nested-ternary"
			},
			{
				"name": "unicorn/no-nested-ternary",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-nested-ternary.md"
			}
		],
		"flint": {
			"name": "ternaryNesting",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-nested-ternary",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-nested-ternary.html"
			},
			{
				"name": "unicorn/no-nested-ternary",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-nested-ternary.html"
			}
		],
		"raw": {
			"Flint Name": "ternaryNesting",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noNestedTernary",
			"ESLint Name": "no-nested-ternary; unicorn/no-nested-ternary",
			"Oxlint Name": "eslint/no-nested-ternary; unicorn/no-nested-ternary"
		}
	},
	"ternaryOperators": {
		"eslint": [
			{
				"name": "no-ternary",
				"url": "https://eslint.org/docs/latest/rules/no-ternary"
			}
		],
		"flint": {
			"name": "ternaryOperators",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-ternary",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-ternary.html"
			}
		],
		"raw": {
			"Flint Name": "ternaryOperators",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-ternary",
			"Oxlint Name": "eslint/no-ternary"
		}
	},
	"textEncodingCases": {
		"eslint": [
			{
				"name": "unicorn/text-encoding-identifier-case",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/text-encoding-identifier-case.md"
			}
		],
		"flint": {
			"name": "textEncodingCases",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/text-encoding-identifier-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/text-encoding-identifier-case.html"
			}
		],
		"raw": {
			"Flint Name": "textEncodingCases",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/text-encoding-identifier-case",
			"Oxlint Name": "unicorn/text-encoding-identifier-case"
		}
	},
	"thisInStatic": {
		"biome": [
			{
				"name": "noThisInStatic",
				"url": "https://biomejs.dev/linter/rules/noThisInStatic"
			}
		],
		"flint": {
			"name": "thisInStatic",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "thisInStatic",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noThisInStatic"
		}
	},
	"todoExpirations": {
		"deno": [
			{
				"name": "ban-untagged-todo",
				"url": "https://docs.deno.com/lint/rules/ban-untagged-todo"
			}
		],
		"eslint": [
			{
				"name": "unicorn/expiring-todo-comments",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/expiring-todo-comments.md"
			}
		],
		"flint": {
			"name": "todoExpirations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "todoExpirations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "ban-untagged-todo",
			"ESLint Name": "unicorn/expiring-todo-comments"
		}
	},
	"typeChecksTypeErrors": {
		"eslint": [
			{
				"name": "unicorn/prefer-type-error",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-type-error.md"
			}
		],
		"flint": {
			"name": "typeChecksTypeErrors",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-type-error",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-type-error.html"
			}
		],
		"raw": {
			"Flint Name": "typeChecksTypeErrors",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prefer-type-error",
			"Oxlint Name": "unicorn/prefer-type-error"
		}
	},
	"unassignedImports": {
		"eslint": [
			{
				"name": "import/no-unassigned-import",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-unassigned-import.md"
			}
		],
		"flint": {
			"name": "unassignedImports",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/no-unassigned-import",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-unassigned-import.html"
			}
		],
		"raw": {
			"Flint Name": "unassignedImports",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "import/no-unassigned-import",
			"Oxlint Name": "import/no-unassigned-import"
		}
	},
	"undefinedNames": {
		"eslint": [
			{
				"name": "no-undefined",
				"url": "https://eslint.org/docs/latest/rules/no-undefined"
			}
		],
		"flint": {
			"name": "undefinedNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-undefined",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-undefined.html"
			}
		],
		"raw": {
			"Flint Name": "undefinedNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-undefined",
			"Oxlint Name": "eslint/no-undefined"
		}
	},
	"underscoreNames": {
		"eslint": [
			{
				"name": "no-underscore-dangle",
				"url": "https://eslint.org/docs/latest/rules/no-underscore-dangle"
			}
		],
		"flint": {
			"name": "underscoreNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "underscoreNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-underscore-dangle"
		}
	},
	"unnecessaryLabels": {
		"biome": [
			{
				"name": "noUselessLabel",
				"url": "https://biomejs.dev/linter/rules/noUselessLabel"
			}
		],
		"eslint": [
			{
				"name": "no-extra-label",
				"url": "https://eslint.org/docs/latest/rules/no-extra-label"
			}
		],
		"flint": {
			"name": "unnecessaryLabels",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-extra-label",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-extra-label.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryLabels",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noUselessLabel",
			"ESLint Name": "no-extra-label",
			"Oxlint Name": "eslint/no-extra-label"
		}
	},
	"unnecessaryPolyfills": {
		"eslint": [
			{
				"name": "unicorn/no-unnecessary-polyfills",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-unnecessary-polyfills.md"
			}
		],
		"flint": {
			"name": "unnecessaryPolyfills",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by the e18e initiative",
		"raw": {
			"Flint Name": "unnecessaryPolyfills",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-unnecessary-polyfills",
			"Notes": "Superseded by the e18e initiative"
		}
	},
	"unnecessaryStringRaws": {
		"biome": [
			{
				"name": "noUselessStringRaw",
				"url": "https://biomejs.dev/linter/rules/noUselessStringRaw"
			}
		],
		"flint": {
			"name": "unnecessaryStringRaws",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "unnecessaryStringRaws",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Biome Name": "noUselessStringRaw"
		}
	},
	"unreachableLoops": {
		"eslint": [
			{
				"name": "no-unreachable-loop",
				"url": "https://eslint.org/docs/latest/rules/no-unreachable-loop"
			}
		],
		"flint": {
			"name": "unreachableLoops",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "unreachableLoops",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "no-unreachable-loop"
		}
	},
	"unusedCatchBindings": {
		"eslint": [
			{
				"name": "unicorn/prefer-optional-catch-binding",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-optional-catch-binding.md"
			}
		],
		"flint": {
			"name": "unusedCatchBindings",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"notes": "Superseded by unusedVariables",
		"oxlint": [
			{
				"name": "unicorn/prefer-optional-catch-binding",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-optional-catch-binding.html"
			}
		],
		"raw": {
			"Flint Name": "unusedCatchBindings",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/prefer-optional-catch-binding",
			"Oxlint Name": "unicorn/prefer-optional-catch-binding",
			"Notes": "Superseded by unusedVariables"
		}
	},
	"unusedObjectProperties": {
		"eslint": [
			{
				"name": "unicorn/no-unused-properties",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-unused-properties.md"
			}
		],
		"flint": {
			"name": "unusedObjectProperties",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "unusedObjectProperties",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/no-unused-properties"
		}
	},
	"urlRelativity": {
		"eslint": [
			{
				"name": "unicorn/relative-url-style",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/relative-url-style.md"
			}
		],
		"flint": {
			"name": "urlRelativity",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "urlRelativity",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "unicorn/relative-url-style"
		}
	},
	"variableDeclarationInitializations": {
		"eslint": [
			{
				"name": "init-declarations",
				"url": "https://eslint.org/docs/latest/rules/init-declarations"
			},
			{
				"name": "@typescript-eslint/init-declarations",
				"url": "https://typescript-eslint.io/rules/init-declarations"
			}
		],
		"flint": {
			"name": "variableDeclarationInitializations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/init-declarations",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/init-declarations.html"
			}
		],
		"raw": {
			"Flint Name": "variableDeclarationInitializations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "init-declarations; @typescript-eslint/init-declarations",
			"Oxlint Name": "eslint/init-declarations"
		}
	},
	"variableDeclarationSorting": {
		"eslint": [
			{
				"name": "sort-vars",
				"url": "https://eslint.org/docs/latest/rules/sort-vars"
			}
		],
		"flint": {
			"name": "variableDeclarationSorting",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/sort-vars",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/sort-vars.html"
			}
		],
		"raw": {
			"Flint Name": "variableDeclarationSorting",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "sort-vars",
			"Oxlint Name": "eslint/sort-vars"
		}
	},
	"variablesOnTop": {
		"eslint": [
			{
				"name": "vars-on-top",
				"url": "https://eslint.org/docs/latest/rules/vars-on-top"
			}
		],
		"flint": {
			"name": "variablesOnTop",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/vars-on-top",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/vars-on-top.html"
			}
		],
		"raw": {
			"Flint Name": "variablesOnTop",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"ESLint Name": "vars-on-top",
			"Oxlint Name": "eslint/vars-on-top"
		}
	},
	"verbatimModuleSyntax": {
		"deno": [
			{
				"name": "verbatim-module-syntax",
				"url": "https://docs.deno.com/lint/rules/verbatim-module-syntax"
			}
		],
		"flint": {
			"name": "verbatimModuleSyntax",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "verbatimModuleSyntax",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Not implementing",
			"Deno Lint Name": "verbatim-module-syntax"
		}
	},
	"arrayDeleteUnnecessaryCounts": {
		"eslint": [
			{
				"name": "unicorn/no-unnecessary-array-splice-count",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-unnecessary-array-splice-count.md"
			}
		],
		"flint": {
			"name": "arrayDeleteUnnecessaryCounts",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "arrayDeleteUnnecessaryCounts",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "unicorn/no-unnecessary-array-splice-count"
		}
	},
	"arrayExistenceChecksConsistency": {
		"eslint": [
			{
				"name": "unicorn/consistent-existence-index-check",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/consistent-existence-index-check.md"
			}
		],
		"flint": {
			"name": "arrayExistenceChecksConsistency",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/consistent-existence-index-check",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-existence-index-check.html"
			}
		],
		"raw": {
			"Flint Name": "arrayExistenceChecksConsistency",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "unicorn/consistent-existence-index-check",
			"Oxlint Name": "unicorn/consistent-existence-index-check"
		}
	},
	"arrayFilteredFinds": {
		"eslint": [
			{
				"name": "unicorn/prefer-array-find",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-array-find.md"
			}
		],
		"flint": {
			"name": "arrayFilteredFinds",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-array-find",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-find.html"
			}
		],
		"raw": {
			"Flint Name": "arrayFilteredFinds",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-array-find",
			"Oxlint Name": "unicorn/prefer-array-find"
		}
	},
	"arrayFinds": {
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-find",
				"url": "https://typescript-eslint.io/rules/prefer-find"
			}
		],
		"flint": {
			"name": "arrayFinds",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "arrayFinds",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "@typescript-eslint/prefer-find"
		}
	},
	"arrayFlatMapMethods": {
		"biome": [
			{
				"name": "useFlatMap",
				"url": "https://biomejs.dev/linter/rules/useFlatMap"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-array-flat-map",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-array-flat-map.md"
			}
		],
		"flint": {
			"name": "arrayFlatMapMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-array-flat-map",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-flat-map.html"
			}
		],
		"raw": {
			"Flint Name": "arrayFlatMapMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Biome Name": "useFlatMap",
			"ESLint Name": "unicorn/prefer-array-flat-map",
			"Oxlint Name": "unicorn/prefer-array-flat-map"
		}
	},
	"arrayFlatMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-array-flat",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-array-flat.md"
			}
		],
		"flint": {
			"name": "arrayFlatMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-array-flat",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-flat.html"
			}
		],
		"raw": {
			"Flint Name": "arrayFlatMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-array-flat",
			"Oxlint Name": "unicorn/prefer-array-flat"
		}
	},
	"arrayFlatUnnecessaryDepths": {
		"eslint": [
			{
				"name": "unicorn/no-unnecessary-array-flat-depth",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-unnecessary-array-flat-depth.md"
			}
		],
		"flint": {
			"name": "arrayFlatUnnecessaryDepths",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/no-unnecessary-array-flat-depth",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unnecessary-array-flat-depth.html"
			}
		],
		"raw": {
			"Flint Name": "arrayFlatUnnecessaryDepths",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "unicorn/no-unnecessary-array-flat-depth",
			"Oxlint Name": "unicorn/no-unnecessary-array-flat-depth"
		}
	},
	"arrayIncludesMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-includes",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-includes.md"
			}
		],
		"flint": {
			"name": "arrayIncludesMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "arrayIncludesMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-includes"
		}
	},
	"arrayIndexOfMethods": {
		"biome": [
			{
				"name": "useIndexOf",
				"url": "https://biomejs.dev/linter/rules/useIndexOf"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-array-index-of",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-array-index-of.md"
			}
		],
		"flint": {
			"name": "arrayIndexOfMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-array-index-of",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-index-of.html"
			}
		],
		"raw": {
			"Flint Name": "arrayIndexOfMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Biome Name": "useIndexOf",
			"ESLint Name": "unicorn/prefer-array-index-of",
			"Oxlint Name": "unicorn/prefer-array-index-of"
		}
	},
	"arrayLoops": {
		"biome": [
			{
				"name": "noForEach",
				"url": "https://biomejs.dev/linter/rules/noForEach"
			},
			{
				"name": "useForOf",
				"url": "https://biomejs.dev/linter/rules/useForOf"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-for-of",
				"url": "https://typescript-eslint.io/rules/prefer-for-of"
			},
			{
				"name": "unicorn/no-array-for-each",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-for-each.md"
			},
			{
				"name": "unicorn/no-for-loop",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-for-loop.md"
			}
		],
		"flint": {
			"name": "arrayLoops",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-for-of",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-for-of.html"
			},
			{
				"name": "unicorn/no-array-for-each",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-array-for-each.html"
			}
		],
		"raw": {
			"Flint Name": "arrayLoops",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noForEach; useForOf",
			"ESLint Name": "@typescript-eslint/prefer-for-of; unicorn/no-array-for-each; unicorn/no-for-loop",
			"Oxlint Name": "typescript/prefer-for-of; unicorn/no-array-for-each"
		}
	},
	"arrayMutableReverses": {
		"eslint": [
			{
				"name": "unicorn/no-array-reverse",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-reverse.md"
			}
		],
		"flint": {
			"name": "arrayMutableReverses",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "arrayMutableReverses",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "unicorn/no-array-reverse"
		}
	},
	"arrayMutableSorts": {
		"eslint": [
			{
				"name": "unicorn/no-array-sort",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-sort.md"
			}
		],
		"flint": {
			"name": "arrayMutableSorts",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "arrayMutableSorts",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "unicorn/no-array-sort"
		}
	},
	"arraySliceUnnecessaryEnd": {
		"eslint": [
			{
				"name": "unicorn/no-unnecessary-slice-end",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-unnecessary-slice-end.md"
			}
		],
		"flint": {
			"name": "arraySliceUnnecessaryEnd",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/no-length-as-slice-end",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-length-as-slice-end.html"
			},
			{
				"name": "unicorn/no-unnecessary-slice-end",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unnecessary-slice-end.html"
			}
		],
		"raw": {
			"Flint Name": "arraySliceUnnecessaryEnd",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "unicorn/no-unnecessary-slice-end",
			"Oxlint Name": "unicorn/no-length-as-slice-end; unicorn/no-unnecessary-slice-end"
		}
	},
	"arraySomeMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-array-some",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-array-some.md"
			}
		],
		"flint": {
			"name": "arraySomeMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-array-some",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-some.html"
			}
		],
		"raw": {
			"Flint Name": "arraySomeMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-array-some",
			"Oxlint Name": "unicorn/prefer-array-some"
		}
	},
	"arrayTernarySpreadingConsistency": {
		"eslint": [
			{
				"name": "unicorn/consistent-empty-array-spread",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/consistent-empty-array-spread.md"
			}
		],
		"flint": {
			"name": "arrayTernarySpreadingConsistency",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/consistent-empty-array-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-empty-array-spread.html"
			}
		],
		"raw": {
			"Flint Name": "arrayTernarySpreadingConsistency",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "unicorn/consistent-empty-array-spread",
			"Oxlint Name": "unicorn/consistent-empty-array-spread"
		}
	},
	"arrayTypes": {
		"biome": [
			{
				"name": "useConsistentArrayType",
				"url": "https://biomejs.dev/linter/rules/useConsistentArrayType"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/array-type",
				"url": "https://typescript-eslint.io/rules/array-type"
			}
		],
		"flint": {
			"name": "arrayTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/array-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/array-type.html"
			}
		],
		"raw": {
			"Flint Name": "arrayTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useConsistentArrayType",
			"ESLint Name": "@typescript-eslint/array-type",
			"Oxlint Name": "typescript/array-type"
		}
	},
	"asConstAssertions": {
		"biome": [
			{
				"name": "useAsConstAssertion",
				"url": "https://biomejs.dev/linter/rules/useAsConstAssertion"
			}
		],
		"deno": [
			{
				"name": "prefer-as-const",
				"url": "https://docs.deno.com/lint/rules/prefer-as-const"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-as-const",
				"url": "https://typescript-eslint.io/rules/prefer-as-const"
			}
		],
		"flint": {
			"name": "asConstAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-as-const",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-as-const.html"
			}
		],
		"raw": {
			"Flint Name": "asConstAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useAsConstAssertion",
			"Deno Lint Name": "prefer-as-const",
			"ESLint Name": "@typescript-eslint/prefer-as-const",
			"Oxlint Name": "typescript/prefer-as-const"
		}
	},
	"assignmentOperatorShorthands": {
		"eslint": [
			{
				"name": "logical-assignment-operators",
				"url": "https://eslint.org/docs/latest/rules/logical-assignment-operators"
			}
		],
		"flint": {
			"name": "assignmentOperatorShorthands",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "assignmentOperatorShorthands",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "logical-assignment-operators"
		}
	},
	"atAccesses": {
		"biome": [
			{
				"name": "useAtIndex",
				"url": "https://biomejs.dev/linter/rules/useAtIndex"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-at",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-at.md"
			}
		],
		"flint": {
			"name": "atAccesses",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "atAccesses",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Biome Name": "useAtIndex",
			"ESLint Name": "unicorn/prefer-at"
		}
	},
	"builtinCoercions": {
		"eslint": [
			{
				"name": "unicorn/prefer-native-coercion-functions",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-native-coercion-functions.md"
			}
		],
		"flint": {
			"name": "builtinCoercions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-native-coercion-functions",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-native-coercion-functions.html"
			}
		],
		"raw": {
			"Flint Name": "builtinCoercions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-native-coercion-functions",
			"Oxlint Name": "unicorn/prefer-native-coercion-functions"
		}
	},
	"builtinConstructorNews": {
		"biome": [
			{
				"name": "noInvalidBuiltinInstantiation",
				"url": "https://biomejs.dev/linter/rules/noInvalidBuiltinInstantiation"
			}
		],
		"eslint": [
			{
				"name": "unicorn/new-for-builtins",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/new-for-builtins.md"
			}
		],
		"flint": {
			"name": "builtinConstructorNews",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/new-for-builtins",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/new-for-builtins.html"
			}
		],
		"raw": {
			"Flint Name": "builtinConstructorNews",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noInvalidBuiltinInstantiation",
			"ESLint Name": "unicorn/new-for-builtins",
			"Oxlint Name": "unicorn/new-for-builtins"
		}
	},
	"caughtVariableNames": {
		"eslint": [
			{
				"name": "unicorn/catch-error-name",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/catch-error-name.md"
			}
		],
		"flint": {
			"name": "caughtVariableNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/catch-error-name",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/catch-error-name.html"
			}
		],
		"raw": {
			"Flint Name": "caughtVariableNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/catch-error-name",
			"Oxlint Name": "unicorn/catch-error-name"
		}
	},
	"chainedAssignments": {
		"eslint": [
			{
				"name": "no-multi-assign",
				"url": "https://eslint.org/docs/latest/rules/no-multi-assign"
			}
		],
		"flint": {
			"name": "chainedAssignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-multi-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-multi-assign.html"
			}
		],
		"raw": {
			"Flint Name": "chainedAssignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "no-multi-assign",
			"Oxlint Name": "eslint/no-multi-assign"
		}
	},
	"classLiteralProperties": {
		"eslint": [
			{
				"name": "@typescript-eslint/class-literal-property-style",
				"url": "https://typescript-eslint.io/rules/class-literal-property-style"
			}
		],
		"flint": {
			"name": "classLiteralProperties",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "classLiteralProperties",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "@typescript-eslint/class-literal-property-style"
		}
	},
	"classMethodsThis": {
		"eslint": [
			{
				"name": "class-methods-use-this",
				"url": "https://eslint.org/docs/latest/rules/class-methods-use-this"
			},
			{
				"name": "@typescript-eslint/class-methods-use-this",
				"url": "https://typescript-eslint.io/rules/class-methods-use-this"
			}
		],
		"flint": {
			"name": "classMethodsThis",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "classMethodsThis",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "class-methods-use-this; @typescript-eslint/class-methods-use-this"
		}
	},
	"combinedPushes": {
		"eslint": [
			{
				"name": "unicorn/prefer-single-call",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-single-call.md"
			}
		],
		"flint": {
			"name": "combinedPushes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"notes": "Just for Array#push(); the others would be their own rules",
		"raw": {
			"Flint Name": "combinedPushes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-single-call",
			"Notes": "Just for Array#push(); the others would be their own rules"
		}
	},
	"consecutiveNonNullAssertions": {
		"biome": [
			{
				"name": "noExtraNonNullAssertion",
				"url": "https://biomejs.dev/linter/rules/noExtraNonNullAssertion"
			}
		],
		"deno": [
			{
				"name": "no-extra-non-null-assertion",
				"url": "https://docs.deno.com/lint/rules/no-extra-non-null-assertion"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-extra-non-null-assertion",
				"url": "https://typescript-eslint.io/rules/no-extra-non-null-assertion"
			}
		],
		"flint": {
			"implemented": true,
			"name": "consecutiveNonNullAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/no-extra-non-null-assertion",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-extra-non-null-assertion.html"
			}
		],
		"raw": {
			"Flint Name": "consecutiveNonNullAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noExtraNonNullAssertion",
			"Deno Lint Name": "no-extra-non-null-assertion",
			"ESLint Name": "@typescript-eslint/no-extra-non-null-assertion",
			"Oxlint Name": "typescript/no-extra-non-null-assertion"
		}
	},
	"destructuringConsistency": {
		"eslint": [
			{
				"name": "unicorn/consistent-destructuring",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/consistent-destructuring.md"
			}
		],
		"flint": {
			"name": "destructuringConsistency",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "destructuringConsistency",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/consistent-destructuring"
		}
	},
	"directiveRequireDescriptions": {
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/require-description",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveRequireDescriptions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "directiveRequireDescriptions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "@eslint-community/eslint-comments/require-description"
		}
	},
	"elseReturns": {
		"biome": [
			{
				"name": "noUselessElse",
				"url": "https://biomejs.dev/linter/rules/noUselessElse"
			}
		],
		"eslint": [
			{
				"name": "no-else-return",
				"url": "https://eslint.org/docs/latest/rules/no-else-return"
			}
		],
		"flint": {
			"name": "elseReturns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "eslint/no-else-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-else-return.html"
			}
		],
		"raw": {
			"Flint Name": "elseReturns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Biome Name": "noUselessElse",
			"ESLint Name": "no-else-return",
			"Oxlint Name": "eslint/no-else-return"
		}
	},
	"emptyBlocks": {
		"biome": [
			{
				"name": "noEmptyBlockStatements",
				"url": "https://biomejs.dev/linter/rules/noEmptyBlockStatements"
			}
		],
		"deno": [
			{
				"name": "no-empty",
				"url": "https://docs.deno.com/lint/rules/no-empty"
			}
		],
		"eslint": [
			{
				"name": "no-empty",
				"url": "https://eslint.org/docs/latest/rules/no-empty"
			}
		],
		"flint": {
			"name": "emptyBlocks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-empty",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty.html"
			}
		],
		"raw": {
			"Flint Name": "emptyBlocks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noEmptyBlockStatements",
			"Deno Lint Name": "no-empty",
			"ESLint Name": "no-empty",
			"Oxlint Name": "eslint/no-empty"
		}
	},
	"emptyFiles": {
		"eslint": [
			{
				"name": "unicorn/no-empty-file",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-empty-file.md"
			}
		],
		"flint": {
			"name": "emptyFiles",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-empty-file",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-empty-file.html"
			}
		],
		"raw": {
			"Flint Name": "emptyFiles",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/no-empty-file",
			"Oxlint Name": "unicorn/no-empty-file"
		}
	},
	"emptyFunctions": {
		"biome": [
			{
				"name": "noEmptyBlockStatements",
				"url": "https://biomejs.dev/linter/rules/noEmptyBlockStatements"
			}
		],
		"eslint": [
			{
				"name": "no-empty-function",
				"url": "https://eslint.org/docs/latest/rules/no-empty-function"
			},
			{
				"name": "@typescript-eslint/no-empty-function",
				"url": "https://typescript-eslint.io/rules/no-empty-function"
			}
		],
		"flint": {
			"name": "emptyFunctions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "eslint/no-empty-function",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty-function.html"
			}
		],
		"raw": {
			"Flint Name": "emptyFunctions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Biome Name": "noEmptyBlockStatements",
			"ESLint Name": "no-empty-function; @typescript-eslint/no-empty-function",
			"Oxlint Name": "eslint/no-empty-function"
		}
	},
	"emptyModuleAttributes": {
		"eslint": [
			{
				"name": "unicorn/require-module-attributes",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/require-module-attributes.md"
			}
		],
		"flint": {
			"name": "emptyModuleAttributes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "emptyModuleAttributes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "unicorn/require-module-attributes"
		}
	},
	"emptyStaticBlocks": {
		"biome": [
			{
				"name": "noEmptyBlockStatements",
				"url": "https://biomejs.dev/linter/rules/noEmptyBlockStatements"
			}
		],
		"eslint": [
			{
				"name": "no-empty-static-block",
				"url": "https://eslint.org/docs/latest/rules/no-empty-static-block"
			}
		],
		"flint": {
			"name": "emptyStaticBlocks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-empty-static-block",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty-static-block.html"
			}
		],
		"raw": {
			"Flint Name": "emptyStaticBlocks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noEmptyBlockStatements",
			"ESLint Name": "no-empty-static-block",
			"Oxlint Name": "eslint/no-empty-static-block"
		}
	},
	"emptyTypeParameterLists": {
		"biome": [
			{
				"name": "noEmptyTypeParameters",
				"url": "https://biomejs.dev/linter/rules/noEmptyTypeParameters"
			}
		],
		"flint": {
			"name": "emptyTypeParameterLists",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "emptyTypeParameterLists",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noEmptyTypeParameters"
		}
	},
	"escapeSequenceCasing": {
		"eslint": [
			{
				"name": "unicorn/escape-case",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/escape-case.md"
			}
		],
		"flint": {
			"name": "escapeSequenceCasing",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/escape-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/escape-case.html"
			}
		],
		"raw": {
			"Flint Name": "escapeSequenceCasing",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/escape-case",
			"Oxlint Name": "unicorn/escape-case"
		}
	},
	"exponentiationOperators": {
		"biome": [
			{
				"name": "useExponentiationOperator",
				"url": "https://biomejs.dev/linter/rules/useExponentiationOperator"
			}
		],
		"eslint": [
			{
				"name": "prefer-exponentiation-operator",
				"url": "https://eslint.org/docs/latest/rules/prefer-exponentiation-operator"
			}
		],
		"flint": {
			"name": "exponentiationOperators",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-exponentiation-operator",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-exponentiation-operator.html"
			}
		],
		"raw": {
			"Flint Name": "exponentiationOperators",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useExponentiationOperator",
			"ESLint Name": "prefer-exponentiation-operator",
			"Oxlint Name": "eslint/prefer-exponentiation-operator"
		}
	},
	"exportFromImports": {
		"biome": [
			{
				"name": "noExportedImports",
				"url": "https://biomejs.dev/linter/rules/noExportedImports"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-export-from",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-export-from.md"
			}
		],
		"flint": {
			"name": "exportFromImports",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "exportFromImports",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noExportedImports",
			"ESLint Name": "unicorn/prefer-export-from"
		}
	},
	"forDirections": {
		"biome": [
			{
				"name": "useValidForDirection",
				"url": "https://biomejs.dev/linter/rules/useValidForDirection"
			}
		],
		"deno": [
			{
				"name": "for-direction",
				"url": "https://docs.deno.com/lint/rules/for-direction"
			}
		],
		"eslint": [
			{
				"name": "for-direction",
				"url": "https://eslint.org/docs/latest/rules/for-direction"
			}
		],
		"flint": {
			"name": "forDirections",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/for-direction",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/for-direction.html"
			}
		],
		"raw": {
			"Flint Name": "forDirections",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useValidForDirection",
			"Deno Lint Name": "for-direction",
			"ESLint Name": "for-direction",
			"Oxlint Name": "eslint/for-direction"
		}
	},
	"functionCallSpreads": {
		"eslint": [
			{
				"name": "prefer-spread",
				"url": "https://eslint.org/docs/latest/rules/prefer-spread"
			},
			{
				"name": "unicorn/prefer-spread",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-spread.md"
			}
		],
		"flint": {
			"name": "functionCallSpreads",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-spread.html"
			},
			{
				"name": "unicorn/prefer-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-spread.html"
			}
		],
		"raw": {
			"Flint Name": "functionCallSpreads",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "prefer-spread; unicorn/prefer-spread",
			"Oxlint Name": "eslint/prefer-spread; unicorn/prefer-spread"
		}
	},
	"functionDefinitionScopeConsistency": {
		"eslint": [
			{
				"name": "unicorn/consistent-function-scoping",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/consistent-function-scoping.md"
			}
		],
		"flint": {
			"name": "functionDefinitionScopeConsistency",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/consistent-function-scoping",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-function-scoping.html"
			}
		],
		"raw": {
			"Flint Name": "functionDefinitionScopeConsistency",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/consistent-function-scoping",
			"Oxlint Name": "unicorn/consistent-function-scoping"
		}
	},
	"functionTypeDeclarations": {
		"biome": [
			{
				"name": "useShorthandFunctionType",
				"url": "https://biomejs.dev/linter/rules/useShorthandFunctionType"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-function-type",
				"url": "https://typescript-eslint.io/rules/prefer-function-type"
			}
		],
		"flint": {
			"name": "functionTypeDeclarations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-function-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-function-type.html"
			}
		],
		"raw": {
			"Flint Name": "functionTypeDeclarations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useShorthandFunctionType",
			"ESLint Name": "@typescript-eslint/prefer-function-type",
			"Oxlint Name": "typescript/prefer-function-type"
		}
	},
	"genericConstructorCalls": {
		"eslint": [
			{
				"name": "@typescript-eslint/consistent-generic-constructors",
				"url": "https://typescript-eslint.io/rules/consistent-generic-constructors"
			}
		],
		"flint": {
			"name": "genericConstructorCalls",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/consistent-generic-constructors",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/consistent-generic-constructors.html"
			}
		],
		"raw": {
			"Flint Name": "genericConstructorCalls",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "@typescript-eslint/consistent-generic-constructors",
			"Oxlint Name": "typescript/consistent-generic-constructors"
		}
	},
	"globalThisAliases": {
		"deno": [
			{
				"name": "no-window",
				"url": "https://docs.deno.com/lint/rules/no-window"
			},
			{
				"name": "no-window-prefix",
				"url": "https://docs.deno.com/lint/rules/no-window-prefix"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-global-this",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-global-this.md"
			}
		],
		"flint": {
			"name": "globalThisAliases",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-global-this",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-global-this.html"
			}
		],
		"raw": {
			"Flint Name": "globalThisAliases",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Deno Lint Name": "no-window; no-window-prefix",
			"ESLint Name": "unicorn/prefer-global-this",
			"Oxlint Name": "unicorn/prefer-global-this"
		}
	},
	"groupedAccessorPairs": {
		"biome": [
			{
				"name": "useGroupedAccessorPairs",
				"url": "https://biomejs.dev/linter/rules/useGroupedAccessorPairs"
			}
		],
		"eslint": [
			{
				"name": "grouped-accessor-pairs",
				"url": "https://eslint.org/docs/latest/rules/grouped-accessor-pairs"
			}
		],
		"flint": {
			"name": "groupedAccessorPairs",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/grouped-accessor-pairs",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/grouped-accessor-pairs.html"
			}
		],
		"raw": {
			"Flint Name": "groupedAccessorPairs",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useGroupedAccessorPairs",
			"ESLint Name": "grouped-accessor-pairs",
			"Oxlint Name": "eslint/grouped-accessor-pairs"
		}
	},
	"importCycles": {
		"biome": [
			{
				"name": "noImportCycles",
				"url": "https://biomejs.dev/linter/rules/noImportCycles"
			}
		],
		"eslint": [
			{
				"name": "import/no-cycle",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-cycle.md"
			}
		],
		"flint": {
			"name": "importCycles",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "import/no-cycle",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-cycle.html"
			}
		],
		"raw": {
			"Flint Name": "importCycles",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noImportCycles",
			"ESLint Name": "import/no-cycle",
			"Oxlint Name": "import/no-cycle"
		}
	},
	"importSelf": {
		"eslint": [
			{
				"name": "import/no-self-import",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-self-import.md"
			}
		],
		"flint": {
			"name": "importSelf",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "import/no-self-import",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-self-import.html"
			}
		],
		"raw": {
			"Flint Name": "importSelf",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "import/no-self-import",
			"Oxlint Name": "import/no-self-import"
		}
	},
	"importUnnecessaryPathSegments": {
		"eslint": [
			{
				"name": "import/no-useless-path-segments",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-useless-path-segments.md"
			}
		],
		"flint": {
			"name": "importUnnecessaryPathSegments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "import/no-useless-path-segments",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-useless-path-segments.html"
			}
		],
		"raw": {
			"Flint Name": "importUnnecessaryPathSegments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "import/no-useless-path-segments",
			"Oxlint Name": "import/no-useless-path-segments"
		}
	},
	"indexedObjectTypes": {
		"eslint": [
			{
				"name": "@typescript-eslint/consistent-indexed-object-style",
				"url": "https://typescript-eslint.io/rules/consistent-indexed-object-style"
			}
		],
		"flint": {
			"name": "indexedObjectTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/consistent-indexed-object-style",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/consistent-indexed-object-style.html"
			}
		],
		"raw": {
			"Flint Name": "indexedObjectTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "@typescript-eslint/consistent-indexed-object-style",
			"Oxlint Name": "typescript/consistent-indexed-object-style"
		}
	},
	"jsdocAccessTags": {
		"eslint": [
			{
				"name": "jsdoc/check-access",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-access.md"
			}
		],
		"flint": {
			"name": "jsdocAccessTags",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "jsdoc/check-ass",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/check-ass.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocAccessTags",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/check-access",
			"Oxlint Name": "jsdoc/check-ass"
		}
	},
	"jsdocAsterisks": {
		"eslint": [
			{
				"name": "jsdoc/no-multi-asterisks",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-multi-asterisks.md"
			},
			{
				"name": "jsdoc/require-asterisk-prefix",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-asterisk-prefix.md"
			}
		],
		"flint": {
			"name": "jsdocAsterisks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "jsdocAsterisks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "jsdoc/no-multi-asterisks; jsdoc/require-asterisk-prefix"
		}
	},
	"jsdocEmptyBlocks": {
		"eslint": [
			{
				"name": "jsdoc/no-blank-blocks",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-blank-blocks.md"
			}
		],
		"flint": {
			"name": "jsdocEmptyBlocks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "jsdocEmptyBlocks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/no-blank-blocks"
		}
	},
	"jsdocEmptyTags": {
		"eslint": [
			{
				"name": "jsdoc/empty-tags",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/empty-tags.md"
			}
		],
		"flint": {
			"name": "jsdocEmptyTags",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "jsdoc/empty-tags",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/empty-tags.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocEmptyTags",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/empty-tags",
			"Oxlint Name": "jsdoc/empty-tags"
		}
	},
	"jsdocImplementsTags": {
		"eslint": [
			{
				"name": "jsdoc/implements-on-classes",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/implements-on-classes.md"
			}
		],
		"flint": {
			"name": "jsdocImplementsTags",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "jsdoc/implements-on-classes",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/implements-on-classes.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocImplementsTags",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/implements-on-classes",
			"Oxlint Name": "jsdoc/implements-on-classes"
		}
	},
	"jsdocInformativeDocs": {
		"eslint": [
			{
				"name": "jsdoc/informative-docs",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/informative-docs.md"
			}
		],
		"flint": {
			"name": "jsdocInformativeDocs",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "jsdocInformativeDocs",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "jsdoc/informative-docs"
		}
	},
	"jsdocMisleadingBlocks": {
		"eslint": [
			{
				"name": "jsdoc/no-bad-blocks",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-bad-blocks.md"
			}
		],
		"flint": {
			"name": "jsdocMisleadingBlocks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "jsdocMisleadingBlocks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "jsdoc/no-bad-blocks"
		}
	},
	"jsdocMultilineBlocks": {
		"eslint": [
			{
				"name": "jsdoc/multiline-blocks",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/multiline-blocks.md"
			}
		],
		"flint": {
			"name": "jsdocMultilineBlocks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "jsdocMultilineBlocks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "jsdoc/multiline-blocks"
		}
	},
	"jsdocParameterDescriptionHyphens": {
		"eslint": [
			{
				"name": "jsdoc/require-hyphen-before-param-description",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-hyphen-before-param-description.md"
			}
		],
		"flint": {
			"name": "jsdocParameterDescriptionHyphens",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "jsdocParameterDescriptionHyphens",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "jsdoc/require-hyphen-before-param-description"
		}
	},
	"jsdocRedundantTypes": {
		"eslint": [
			{
				"name": "jsdoc/no-types",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-types.md"
			}
		],
		"flint": {
			"name": "jsdocRedundantTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "jsdocRedundantTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/no-types"
		}
	},
	"jsdocTagNames": {
		"eslint": [
			{
				"name": "jsdoc/check-tag-names",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-tag-names.md"
			}
		],
		"flint": {
			"name": "jsdocTagNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "jsdoc/check-tag-names",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/check-tag-names.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocTagNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "jsdoc/check-tag-names",
			"Oxlint Name": "jsdoc/check-tag-names"
		}
	},
	"jsdocTemplateNames": {
		"eslint": [
			{
				"name": "jsdoc/check-template-names",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-template-names.md"
			}
		],
		"flint": {
			"name": "jsdocTemplateNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "jsdocTemplateNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/check-template-names"
		}
	},
	"jsdocTypesSyntax": {
		"eslint": [
			{
				"name": "jsdoc/check-syntax, jsdoc/check-types",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-syntax, jsdoc.md"
			}
		],
		"flint": {
			"name": "jsdocTypesSyntax",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "jsdocTypesSyntax",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/check-syntax, jsdoc/check-types"
		}
	},
	"jsdocUnnecessaryReturns": {
		"eslint": [
			{
				"name": "jsdoc/require-returns-check",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-returns-check.md"
			}
		],
		"flint": {
			"name": "jsdocUnnecessaryReturns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "jsdocUnnecessaryReturns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/require-returns-check"
		}
	},
	"jsdocUnnecessaryYields": {
		"eslint": [
			{
				"name": "jsdoc/require-yields-check",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-yields-check.md"
			}
		],
		"flint": {
			"name": "jsdocUnnecessaryYields",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "jsdocUnnecessaryYields",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/require-yields-check"
		}
	},
	"jsdocValidTypes": {
		"eslint": [
			{
				"name": "jsdoc/valid-types",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/valid-types.md"
			}
		],
		"flint": {
			"name": "jsdocValidTypes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "jsdocValidTypes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/valid-types"
		}
	},
	"jsdocValues": {
		"eslint": [
			{
				"name": "jsdoc/check-values",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-values.md"
			}
		],
		"flint": {
			"name": "jsdocValues",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "jsdocValues",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/check-values"
		}
	},
	"jsdocYields": {
		"eslint": [
			{
				"name": "jsdoc/require-yields",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-yields.md"
			}
		],
		"flint": {
			"name": "jsdocYields",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-yields",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-yields.html"
			}
		],
		"raw": {
			"Flint Name": "jsdocYields",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "jsdoc/require-yields",
			"Oxlint Name": "jsdoc/require-yields"
		}
	},
	"literalConstructorWrappers": {
		"eslint": [
			{
				"name": "unicorn/prefer-bigint-literals",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-bigint-literals.md"
			}
		],
		"flint": {
			"name": "literalConstructorWrappers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"notes": "Will apply to all literals, not just bigint",
		"raw": {
			"Flint Name": "literalConstructorWrappers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "unicorn/prefer-bigint-literals",
			"Notes": "Will apply to all literals, not just bigint"
		}
	},
	"mathMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-modern-math-apis",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-modern-math-apis.md"
			}
		],
		"flint": {
			"name": "mathMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-modern-math-apis",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-modern-math-apis.html"
			}
		],
		"raw": {
			"Flint Name": "mathMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-modern-math-apis",
			"Oxlint Name": "unicorn/prefer-modern-math-apis"
		}
	},
	"multilineAmbiguities": {
		"eslint": [
			{
				"name": "no-unexpected-multiline",
				"url": "https://eslint.org/docs/latest/rules/no-unexpected-multiline"
			}
		],
		"flint": {
			"name": "multilineAmbiguities",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-unexpected-multiline",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unexpected-multiline.html"
			}
		],
		"raw": {
			"Flint Name": "multilineAmbiguities",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "no-unexpected-multiline",
			"Oxlint Name": "eslint/no-unexpected-multiline"
		}
	},
	"namedDefaultExports": {
		"eslint": [
			{
				"name": "unicorn/no-anonymous-default-export",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-anonymous-default-export.md"
			}
		],
		"flint": {
			"name": "namedDefaultExports",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "import/no-anonymous-default-export",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-anonymous-default-export.html"
			},
			{
				"name": "unicorn/no-anonymous-default-export",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-anonymous-default-export.html"
			}
		],
		"raw": {
			"Flint Name": "namedDefaultExports",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/no-anonymous-default-export",
			"Oxlint Name": "import/no-anonymous-default-export; unicorn/no-anonymous-default-export"
		}
	},
	"namespaceImplicitAmbientImports": {
		"deno": [
			{
				"name": "no-implicit-declare-namespace-export",
				"url": "https://docs.deno.com/lint/rules/no-implicit-declare-namespace-export"
			}
		],
		"flint": {
			"name": "namespaceImplicitAmbientImports",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "namespaceImplicitAmbientImports",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Deno Lint Name": "no-implicit-declare-namespace-export"
		}
	},
	"namespaceKeywords": {
		"biome": [
			{
				"name": "useNamespaceKeyword",
				"url": "https://biomejs.dev/linter/rules/useNamespaceKeyword"
			}
		],
		"deno": [
			{
				"name": "prefer-namespace-keyword",
				"url": "https://docs.deno.com/lint/rules/prefer-namespace-keyword"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-namespace-keyword",
				"url": "https://typescript-eslint.io/rules/prefer-namespace-keyword"
			}
		],
		"flint": {
			"name": "namespaceKeywords",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-namespace-keyword",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-namespace-keyword.html"
			}
		],
		"raw": {
			"Flint Name": "namespaceKeywords",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useNamespaceKeyword",
			"Deno Lint Name": "prefer-namespace-keyword",
			"ESLint Name": "@typescript-eslint/prefer-namespace-keyword",
			"Oxlint Name": "typescript/prefer-namespace-keyword"
		}
	},
	"negativeIndexLengthMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-negative-index",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-negative-index.md"
			}
		],
		"flint": {
			"name": "negativeIndexLengthMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "negativeIndexLengthMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-negative-index"
		}
	},
	"nestedStandaloneIfs": {
		"biome": [
			{
				"name": "useCollapsedElseIf",
				"url": "https://biomejs.dev/linter/rules/useCollapsedElseIf"
			},
			{
				"name": "useCollapsedIf",
				"url": "https://biomejs.dev/linter/rules/useCollapsedIf"
			}
		],
		"eslint": [
			{
				"name": "no-lonely-if",
				"url": "https://eslint.org/docs/latest/rules/no-lonely-if"
			},
			{
				"name": "unicorn/no-lonely-if",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-lonely-if.md"
			}
		],
		"flint": {
			"name": "nestedStandaloneIfs",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-lonely-if",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-lonely-if.html"
			},
			{
				"name": "unicorn/no-lonely-if",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-lonely-if.html"
			}
		],
		"raw": {
			"Flint Name": "nestedStandaloneIfs",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useCollapsedElseIf; useCollapsedIf",
			"ESLint Name": "no-lonely-if; unicorn/no-lonely-if",
			"Oxlint Name": "eslint/no-lonely-if; unicorn/no-lonely-if"
		}
	},
	"nonNullableTypeAssertions": {
		"eslint": [
			{
				"name": "@typescript-eslint/non-nullable-type-assertion-style",
				"url": "https://typescript-eslint.io/rules/non-nullable-type-assertion-style"
			}
		],
		"flint": {
			"name": "nonNullableTypeAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/non-nullable-type-assertion-style",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/non-nullable-type-assertion-style.html"
			}
		],
		"raw": {
			"Flint Name": "nonNullableTypeAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "@typescript-eslint/non-nullable-type-assertion-style",
			"Oxlint Name": "typescript/non-nullable-type-assertion-style"
		}
	},
	"nonNullAssertionPlacement": {
		"eslint": [
			{
				"name": "@typescript-eslint/no-confusing-non-null-assertion",
				"url": "https://typescript-eslint.io/rules/no-confusing-non-null-assertion"
			}
		],
		"flint": {
			"name": "nonNullAssertionPlacement",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "typescript/no-confusing-non-null-assertion",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-confusing-non-null-assertion.html"
			}
		],
		"raw": {
			"Flint Name": "nonNullAssertionPlacement",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "@typescript-eslint/no-confusing-non-null-assertion",
			"Oxlint Name": "typescript/no-confusing-non-null-assertion"
		}
	},
	"nullishCoalescingOperators": {
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-nullish-coalescing",
				"url": "https://typescript-eslint.io/rules/prefer-nullish-coalescing"
			}
		],
		"flint": {
			"name": "nullishCoalescingOperators",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "nullishCoalescingOperators",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "@typescript-eslint/prefer-nullish-coalescing"
		}
	},
	"numberStaticMethods": {
		"biome": [
			{
				"name": "noGlobalIsFinite",
				"url": "https://biomejs.dev/linter/rules/noGlobalIsFinite"
			},
			{
				"name": "noGlobalIsNan",
				"url": "https://biomejs.dev/linter/rules/noGlobalIsNan"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-number-properties",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-number-properties.md"
			}
		],
		"flint": {
			"name": "numberStaticMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-number-properties",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-number-properties.html"
			}
		],
		"raw": {
			"Flint Name": "numberStaticMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Biome Name": "noGlobalIsFinite; noGlobalIsNan",
			"ESLint Name": "unicorn/prefer-number-properties",
			"Oxlint Name": "unicorn/prefer-number-properties"
		}
	},
	"numericLiteralCasing": {
		"eslint": [
			{
				"name": "unicorn/number-literal-case",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/number-literal-case.md"
			}
		],
		"flint": {
			"name": "numericLiteralCasing",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/number-literal-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/number-literal-case.html"
			}
		],
		"raw": {
			"Flint Name": "numericLiteralCasing",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/number-literal-case",
			"Oxlint Name": "unicorn/number-literal-case"
		}
	},
	"numericSeparatorGroups": {
		"biome": [
			{
				"name": "useNumericSeparators",
				"url": "https://biomejs.dev/linter/rules/useNumericSeparators"
			}
		],
		"eslint": [
			{
				"name": "unicorn/numeric-separators-style",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/numeric-separators-style.md"
			}
		],
		"flint": {
			"name": "numericSeparatorGroups",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/numeric-separators-style",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/numeric-separators-style.html"
			}
		],
		"raw": {
			"Flint Name": "numericSeparatorGroups",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Biome Name": "useNumericSeparators",
			"ESLint Name": "unicorn/numeric-separators-style",
			"Oxlint Name": "unicorn/numeric-separators-style"
		}
	},
	"objectAssignSpreads": {
		"biome": [
			{
				"name": "useObjectSpread",
				"url": "https://biomejs.dev/linter/rules/useObjectSpread"
			}
		],
		"eslint": [
			{
				"name": "prefer-object-spread",
				"url": "https://eslint.org/docs/latest/rules/prefer-object-spread"
			}
		],
		"flint": {
			"name": "objectAssignSpreads",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-object-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-object-spread.html"
			}
		],
		"raw": {
			"Flint Name": "objectAssignSpreads",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useObjectSpread",
			"ESLint Name": "prefer-object-spread",
			"Oxlint Name": "eslint/prefer-object-spread"
		}
	},
	"objectEntriesMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-object-from-entries",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-object-from-entries.md"
			}
		],
		"flint": {
			"name": "objectEntriesMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-object-from-entries",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-object-from-entries.html"
			}
		],
		"raw": {
			"Flint Name": "objectEntriesMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-object-from-entries",
			"Oxlint Name": "unicorn/prefer-object-from-entries"
		}
	},
	"objectHasOwns": {
		"biome": [
			{
				"name": "noPrototypeBuiltins",
				"url": "https://biomejs.dev/linter/rules/noPrototypeBuiltins"
			}
		],
		"eslint": [
			{
				"name": "prefer-object-has-own",
				"url": "https://eslint.org/docs/latest/rules/prefer-object-has-own"
			}
		],
		"flint": {
			"name": "objectHasOwns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-object-has-own",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-object-has-own.html"
			}
		],
		"raw": {
			"Flint Name": "objectHasOwns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noPrototypeBuiltins",
			"ESLint Name": "prefer-object-has-own",
			"Oxlint Name": "eslint/prefer-object-has-own"
		}
	},
	"objectShorthand": {
		"biome": [
			{
				"name": "useConsistentObjectDefinitions",
				"url": "https://biomejs.dev/linter/rules/useConsistentObjectDefinitions"
			}
		],
		"eslint": [
			{
				"name": "object-shorthand",
				"url": "https://eslint.org/docs/latest/rules/object-shorthand"
			}
		],
		"flint": {
			"name": "objectShorthand",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "objectShorthand",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useConsistentObjectDefinitions",
			"ESLint Name": "object-shorthand"
		}
	},
	"objectTypeDefinitions": {
		"biome": [
			{
				"name": "useConsistentTypeDefinitions",
				"url": "https://biomejs.dev/linter/rules/useConsistentTypeDefinitions"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/consistent-type-definitions",
				"url": "https://typescript-eslint.io/rules/consistent-type-definitions"
			}
		],
		"flint": {
			"name": "objectTypeDefinitions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/consistent-type-definitions",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/consistent-type-definitions.html"
			}
		],
		"raw": {
			"Flint Name": "objectTypeDefinitions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useConsistentTypeDefinitions",
			"ESLint Name": "@typescript-eslint/consistent-type-definitions",
			"Oxlint Name": "typescript/consistent-type-definitions"
		}
	},
	"operatorAssignmentShorthand": {
		"biome": [
			{
				"name": "useShorthandAssign",
				"url": "https://biomejs.dev/linter/rules/useShorthandAssign"
			}
		],
		"eslint": [
			{
				"name": "operator-assignment",
				"url": "https://eslint.org/docs/latest/rules/operator-assignment"
			}
		],
		"flint": {
			"name": "operatorAssignmentShorthand",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/operator-assignment",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/operator-assignment.html"
			}
		],
		"raw": {
			"Flint Name": "operatorAssignmentShorthand",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useShorthandAssign",
			"ESLint Name": "operator-assignment",
			"Oxlint Name": "eslint/operator-assignment"
		}
	},
	"optionalChainOperators": {
		"biome": [
			{
				"name": "useOptionalChain",
				"url": "https://biomejs.dev/linter/rules/useOptionalChain"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-optional-chain",
				"url": "https://typescript-eslint.io/rules/prefer-optional-chain"
			}
		],
		"flint": {
			"name": "optionalChainOperators",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "optionalChainOperators",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useOptionalChain",
			"ESLint Name": "@typescript-eslint/prefer-optional-chain"
		}
	},
	"overloadSignaturesAdjacent": {
		"biome": [
			{
				"name": "useAdjacentOverloadSignatures",
				"url": "https://biomejs.dev/linter/rules/useAdjacentOverloadSignatures"
			}
		],
		"deno": [
			{
				"name": "adjacent-overload-signatures",
				"url": "https://docs.deno.com/lint/rules/adjacent-overload-signatures"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/adjacent-overload-signatures",
				"url": "https://typescript-eslint.io/rules/adjacent-overload-signatures"
			}
		],
		"flint": {
			"name": "overloadSignaturesAdjacent",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/adjacent-overload-signatures",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/adjacent-overload-signatures.html"
			}
		],
		"raw": {
			"Flint Name": "overloadSignaturesAdjacent",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useAdjacentOverloadSignatures",
			"Deno Lint Name": "adjacent-overload-signatures",
			"ESLint Name": "@typescript-eslint/adjacent-overload-signatures",
			"Oxlint Name": "typescript/adjacent-overload-signatures"
		}
	},
	"parameterReassignments": {
		"biome": [
			{
				"name": "noParameterAssign",
				"url": "https://biomejs.dev/linter/rules/noParameterAssign"
			}
		],
		"eslint": [
			{
				"name": "no-param-reassign",
				"url": "https://eslint.org/docs/latest/rules/no-param-reassign"
			}
		],
		"flint": {
			"name": "parameterReassignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "parameterReassignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Biome Name": "noParameterAssign",
			"ESLint Name": "no-param-reassign"
		}
	},
	"promiseFunctionAsync": {
		"eslint": [
			{
				"name": "@typescript-eslint/promise-function-async",
				"url": "https://typescript-eslint.io/rules/promise-function-async"
			}
		],
		"flint": {
			"name": "promiseFunctionAsync",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/promise-function-async",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/promise-function-async.html"
			}
		],
		"raw": {
			"Flint Name": "promiseFunctionAsync",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "@typescript-eslint/promise-function-async",
			"Oxlint Name": "typescript/promise-function-async"
		}
	},
	"propertyAccessNotation": {
		"biome": [
			{
				"name": "useLiteralKeys",
				"url": "https://biomejs.dev/linter/rules/useLiteralKeys"
			}
		],
		"eslint": [
			{
				"name": "dot-notation",
				"url": "https://eslint.org/docs/latest/rules/dot-notation"
			},
			{
				"name": "@typescript-eslint/dot-notation",
				"url": "https://typescript-eslint.io/rules/dot-notation"
			}
		],
		"flint": {
			"name": "propertyAccessNotation",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "propertyAccessNotation",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useLiteralKeys",
			"ESLint Name": "dot-notation; @typescript-eslint/dot-notation"
		}
	},
	"regexCharacterClassRanges": {
		"eslint": [
			{
				"name": "regexp/prefer-range",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-range.html"
			}
		],
		"flint": {
			"name": "regexCharacterClassRanges",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "regexCharacterClassRanges",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "regexp/prefer-range"
		}
	},
	"regexCharacterClassSetOperations": {
		"eslint": [
			{
				"name": "regexp/prefer-set-operation",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-set-operation.html"
			}
		],
		"flint": {
			"name": "regexCharacterClassSetOperations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "regexCharacterClassSetOperations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "regexp/prefer-set-operation"
		}
	},
	"regexConciseCharacterClassNegations": {
		"eslint": [
			{
				"name": "regexp/negation",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/negation.html"
			}
		],
		"flint": {
			"name": "regexConciseCharacterClassNegations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "regexConciseCharacterClassNegations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "regexp/negation"
		}
	},
	"regexDigitMatchers": {
		"eslint": [
			{
				"name": "regexp/prefer-d",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-d.html"
			}
		],
		"flint": {
			"name": "regexDigitMatchers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexDigitMatchers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/prefer-d"
		}
	},
	"regexDollarEscapes": {
		"eslint": [
			{
				"name": "regexp/prefer-escape-replacement-dollar-char",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-escape-replacement-dollar-char.html"
			}
		],
		"flint": {
			"name": "regexDollarEscapes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "regexDollarEscapes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "regexp/prefer-escape-replacement-dollar-char"
		}
	},
	"regexExecutors": {
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-regexp-exec",
				"url": "https://typescript-eslint.io/rules/prefer-regexp-exec"
			},
			{
				"name": "regexp/prefer-regexp-exec",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-regexp-exec.html"
			}
		],
		"flint": {
			"name": "regexExecutors",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "strict"
		},
		"raw": {
			"Flint Name": "regexExecutors",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "strict",
			"ESLint Name": "@typescript-eslint/prefer-regexp-exec; regexp/prefer-regexp-exec"
		}
	},
	"regexHexadecimalEscapes": {
		"eslint": [
			{
				"name": "regexp/hexadecimal-escape",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/hexadecimal-escape.html"
			}
		],
		"flint": {
			"name": "regexHexadecimalEscapes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexHexadecimalEscapes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/hexadecimal-escape"
		}
	},
	"regexLetterCasing": {
		"eslint": [
			{
				"name": "regexp/letter-case",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/letter-case.html"
			}
		],
		"flint": {
			"name": "regexLetterCasing",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexLetterCasing",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/letter-case"
		}
	},
	"regexLookaroundAssertions": {
		"eslint": [
			{
				"name": "regexp/prefer-lookaround",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-lookaround.html"
			}
		],
		"flint": {
			"name": "regexLookaroundAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexLookaroundAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/prefer-lookaround"
		}
	},
	"regexMatchNotation": {
		"eslint": [
			{
				"name": "regexp/match-any",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/match-any.html"
			}
		],
		"flint": {
			"name": "regexMatchNotation",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexMatchNotation",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/match-any"
		}
	},
	"regexNamedBackreferences": {
		"eslint": [
			{
				"name": "regexp/prefer-named-backreference",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-named-backreference.html"
			}
		],
		"flint": {
			"name": "regexNamedBackreferences",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexNamedBackreferences",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/prefer-named-backreference"
		}
	},
	"regexNamedReplacements": {
		"eslint": [
			{
				"name": "regexp/prefer-named-replacement",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-named-replacement.html"
			}
		],
		"flint": {
			"name": "regexNamedReplacements",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexNamedReplacements",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/prefer-named-replacement"
		}
	},
	"regexPlusQuantifiers": {
		"eslint": [
			{
				"name": "regexp/prefer-plus-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-plus-quantifier.html"
			}
		],
		"flint": {
			"name": "regexPlusQuantifiers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexPlusQuantifiers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/prefer-plus-quantifier"
		}
	},
	"regexPredefinedAssertions": {
		"eslint": [
			{
				"name": "regexp/prefer-predefined-assertion",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-predefined-assertion.html"
			}
		],
		"flint": {
			"name": "regexPredefinedAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "regexPredefinedAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "regexp/prefer-predefined-assertion"
		}
	},
	"regexQuestionQuantifiers": {
		"eslint": [
			{
				"name": "regexp/prefer-question-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-question-quantifier.html"
			}
		],
		"flint": {
			"name": "regexQuestionQuantifiers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexQuestionQuantifiers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/prefer-question-quantifier"
		}
	},
	"regexRepeatQuantifiers": {
		"eslint": [
			{
				"name": "regexp/prefer-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-quantifier.html"
			}
		],
		"flint": {
			"name": "regexRepeatQuantifiers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "regexRepeatQuantifiers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "regexp/prefer-quantifier"
		}
	},
	"regexResultArrayGroups": {
		"eslint": [
			{
				"name": "regexp/prefer-result-array-groups",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-result-array-groups.html"
			}
		],
		"flint": {
			"name": "regexResultArrayGroups",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexResultArrayGroups",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/prefer-result-array-groups"
		}
	},
	"regexStarQuantifiers": {
		"eslint": [
			{
				"name": "regexp/prefer-star-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-star-quantifier.html"
			}
		],
		"flint": {
			"name": "regexStarQuantifiers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexStarQuantifiers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/prefer-star-quantifier"
		}
	},
	"regexTestMethods": {
		"eslint": [
			{
				"name": "regexp/prefer-regexp-test",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-regexp-test.html"
			},
			{
				"name": "unicorn/prefer-regexp-test",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-regexp-test.md"
			}
		],
		"flint": {
			"name": "regexTestMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-regexp-test",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-regexp-test.html"
			}
		],
		"raw": {
			"Flint Name": "regexTestMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "regexp/prefer-regexp-test; unicorn/prefer-regexp-test",
			"Oxlint Name": "unicorn/prefer-regexp-test"
		}
	},
	"regexUnicodeCodepointEscapes": {
		"eslint": [
			{
				"name": "regexp/prefer-unicode-codepoint-escapes",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-unicode-codepoint-escapes.html"
			}
		],
		"flint": {
			"name": "regexUnicodeCodepointEscapes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexUnicodeCodepointEscapes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/prefer-unicode-codepoint-escapes"
		}
	},
	"regexUnicodeEscapes": {
		"eslint": [
			{
				"name": "regexp/unicode-escape",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/unicode-escape.html"
			}
		],
		"flint": {
			"name": "regexUnicodeEscapes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "regexUnicodeEscapes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "regexp/unicode-escape"
		}
	},
	"regexUnicodeProperties": {
		"eslint": [
			{
				"name": "regexp/unicode-property",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/unicode-property.html"
			}
		],
		"flint": {
			"name": "regexUnicodeProperties",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "regexUnicodeProperties",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "regexp/unicode-property"
		}
	},
	"regexUnnecessaryEscapes": {
		"eslint": [
			{
				"name": "regexp/no-useless-escape",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-escape.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryEscapes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-escape",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-escape.html"
			}
		],
		"raw": {
			"Flint Name": "regexUnnecessaryEscapes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "regexp/no-useless-escape",
			"Oxlint Name": "eslint/no-useless-escape"
		}
	},
	"regexUnnecessaryNonCapturingGroups": {
		"eslint": [
			{
				"name": "regexp/no-useless-non-capturing-group",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-non-capturing-group.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryNonCapturingGroups",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexUnnecessaryNonCapturingGroups",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/no-useless-non-capturing-group"
		}
	},
	"regexWordMatchers": {
		"eslint": [
			{
				"name": "regexp/prefer-w",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-w.html"
			}
		],
		"flint": {
			"name": "regexWordMatchers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "regexWordMatchers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "regexp/prefer-w"
		}
	},
	"responseMethods": {
		"biome": [
			{
				"name": "useStaticResponseMethods",
				"url": "https://biomejs.dev/linter/rules/useStaticResponseMethods"
			}
		],
		"flint": {
			"name": "responseMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "responseMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useStaticResponseMethods"
		}
	},
	"returnAssignments": {
		"eslint": [
			{
				"name": "no-return-assign",
				"url": "https://eslint.org/docs/latest/rules/no-return-assign"
			}
		],
		"flint": {
			"name": "returnAssignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-return-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-return-assign.html"
			}
		],
		"raw": {
			"Flint Name": "returnAssignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "no-return-assign",
			"Oxlint Name": "eslint/no-return-assign"
		}
	},
	"setHasExistenceChecks": {
		"eslint": [
			{
				"name": "unicorn/prefer-set-has",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-set-has.md"
			}
		],
		"flint": {
			"name": "setHasExistenceChecks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-set-has",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-set-has.html"
			}
		],
		"raw": {
			"Flint Name": "setHasExistenceChecks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-set-has",
			"Oxlint Name": "unicorn/prefer-set-has"
		}
	},
	"setSizeLengthChecks": {
		"eslint": [
			{
				"name": "unicorn/prefer-set-size",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-set-size.md"
			}
		],
		"flint": {
			"name": "setSizeLengthChecks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-set-size",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-set-size.html"
			}
		],
		"raw": {
			"Flint Name": "setSizeLengthChecks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-set-size",
			"Oxlint Name": "unicorn/prefer-set-size"
		}
	},
	"shadows": {
		"biome": [
			{
				"name": "noShadow",
				"url": "https://biomejs.dev/linter/rules/noShadow"
			}
		],
		"eslint": [
			{
				"name": "no-shadow",
				"url": "https://eslint.org/docs/latest/rules/no-shadow"
			},
			{
				"name": "@typescript-eslint/no-shadow",
				"url": "https://typescript-eslint.io/rules/no-shadow"
			}
		],
		"flint": {
			"name": "shadows",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "shadows",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noShadow",
			"ESLint Name": "no-shadow; @typescript-eslint/no-shadow"
		}
	},
	"sizeComparisonOperators": {
		"biome": [
			{
				"name": "useExplicitLengthCheck",
				"url": "https://biomejs.dev/linter/rules/useExplicitLengthCheck"
			}
		],
		"eslint": [
			{
				"name": "unicorn/explicit-length-check",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/explicit-length-check.md"
			}
		],
		"flint": {
			"name": "sizeComparisonOperators",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/explicit-length-check",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/explicit-length-check.html"
			}
		],
		"raw": {
			"Flint Name": "sizeComparisonOperators",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Biome Name": "useExplicitLengthCheck",
			"ESLint Name": "unicorn/explicit-length-check",
			"Oxlint Name": "unicorn/explicit-length-check"
		}
	},
	"staticMemberOnlyClasses": {
		"biome": [
			{
				"name": "noStaticOnlyClass",
				"url": "https://biomejs.dev/linter/rules/noStaticOnlyClass"
			}
		],
		"eslint": [
			{
				"name": "unicorn/no-static-only-class",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-static-only-class.md"
			}
		],
		"flint": {
			"name": "staticMemberOnlyClasses",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-static-only-class",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-static-only-class.html"
			}
		],
		"raw": {
			"Flint Name": "staticMemberOnlyClasses",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Biome Name": "noStaticOnlyClass",
			"ESLint Name": "unicorn/no-static-only-class",
			"Oxlint Name": "unicorn/no-static-only-class"
		}
	},
	"stringSliceMethods": {
		"biome": [
			{
				"name": "noSubstr",
				"url": "https://biomejs.dev/linter/rules/noSubstr"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-string-slice",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-string-slice.md"
			}
		],
		"flint": {
			"name": "stringSliceMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-string-slice",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-slice.html"
			}
		],
		"raw": {
			"Flint Name": "stringSliceMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Biome Name": "noSubstr",
			"ESLint Name": "unicorn/prefer-string-slice",
			"Oxlint Name": "unicorn/prefer-string-slice"
		}
	},
	"stringStartsEndsWith": {
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-string-starts-ends-with",
				"url": "https://typescript-eslint.io/rules/prefer-string-starts-ends-with"
			}
		],
		"flint": {
			"name": "stringStartsEndsWith",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-string-starts-ends-with",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-starts-ends-with.html"
			}
		],
		"raw": {
			"Flint Name": "stringStartsEndsWith",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "@typescript-eslint/prefer-string-starts-ends-with",
			"Oxlint Name": "unicorn/prefer-string-starts-ends-with"
		}
	},
	"stringTrimMethods": {
		"biome": [
			{
				"name": "useTrimStartEnd",
				"url": "https://biomejs.dev/linter/rules/useTrimStartEnd"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-string-trim-start-end",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-string-trim-start-end.md"
			}
		],
		"flint": {
			"name": "stringTrimMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-string-trim-start-end",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-trim-start-end.html"
			}
		],
		"raw": {
			"Flint Name": "stringTrimMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"Biome Name": "useTrimStartEnd",
			"ESLint Name": "unicorn/prefer-string-trim-start-end",
			"Oxlint Name": "unicorn/prefer-string-trim-start-end"
		}
	},
	"structuredCloneMethods": {
		"eslint": [
			{
				"name": "unicorn/prefer-structured-clone",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-structured-clone.md"
			}
		],
		"flint": {
			"name": "structuredCloneMethods",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-structured-clone",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-structured-clone.html"
			}
		],
		"raw": {
			"Flint Name": "structuredCloneMethods",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-structured-clone",
			"Oxlint Name": "unicorn/prefer-structured-clone"
		}
	},
	"symbolDescriptions": {
		"biome": [
			{
				"name": "useSymbolDescription",
				"url": "https://biomejs.dev/linter/rules/useSymbolDescription"
			}
		],
		"eslint": [
			{
				"name": "symbol-description",
				"url": "https://eslint.org/docs/latest/rules/symbol-description"
			}
		],
		"flint": {
			"name": "symbolDescriptions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/symbol-description",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/symbol-description.html"
			}
		],
		"raw": {
			"Flint Name": "symbolDescriptions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useSymbolDescription",
			"ESLint Name": "symbol-description",
			"Oxlint Name": "eslint/symbol-description"
		}
	},
	"tslintComments": {
		"eslint": [
			{
				"name": "@typescript-eslint/ban-tslint-comment",
				"url": "https://typescript-eslint.io/rules/ban-tslint-comment"
			}
		],
		"flint": {
			"name": "tslintComments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/ban-tslint-comment",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/ban-tslint-comment.html"
			}
		],
		"raw": {
			"Flint Name": "tslintComments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "@typescript-eslint/ban-tslint-comment",
			"Oxlint Name": "typescript/ban-tslint-comment"
		}
	},
	"typeAssertions": {
		"eslint": [
			{
				"name": "@typescript-eslint/consistent-type-assertions",
				"url": "https://typescript-eslint.io/rules/consistent-type-assertions"
			}
		],
		"flint": {
			"name": "typeAssertions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "typeAssertions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "@typescript-eslint/consistent-type-assertions"
		}
	},
	"typeExports": {
		"biome": [
			{
				"name": "consistentTypeExports",
				"url": "https://biomejs.dev/linter/rules/consistentTypeExports"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/consistent-type-exports",
				"url": "https://typescript-eslint.io/rules/consistent-type-exports"
			}
		],
		"flint": {
			"name": "typeExports",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "typeExports",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "consistentTypeExports",
			"ESLint Name": "@typescript-eslint/consistent-type-exports"
		}
	},
	"typeImports": {
		"biome": [
			{
				"name": "consistentTypeImports",
				"url": "https://biomejs.dev/linter/rules/consistentTypeImports"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/consistent-type-imports",
				"url": "https://typescript-eslint.io/rules/consistent-type-imports"
			},
			{
				"name": "import/consistent-type-specifier-style",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/consistent-type-specifier-style.md"
			}
		],
		"flint": {
			"name": "typeImports",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "import/consistent-type-specifier-style",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/consistent-type-specifier-style.html"
			},
			{
				"name": "typescript/consistent-type-imports",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/consistent-type-imports.html"
			}
		],
		"raw": {
			"Flint Name": "typeImports",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "consistentTypeImports",
			"ESLint Name": "@typescript-eslint/consistent-type-imports; import/consistent-type-specifier-style",
			"Oxlint Name": "import/consistent-type-specifier-style; typescript/consistent-type-imports"
		}
	},
	"undefinedInitialValues": {
		"biome": [
			{
				"name": "noUselessUndefinedInitialization",
				"url": "https://biomejs.dev/linter/rules/noUselessUndefinedInitialization"
			}
		],
		"deno": [
			{
				"name": "no-undef",
				"url": "https://docs.deno.com/lint/rules/no-undef"
			}
		],
		"eslint": [
			{
				"name": "no-undef-init",
				"url": "https://eslint.org/docs/latest/rules/no-undef-init"
			}
		],
		"flint": {
			"name": "undefinedInitialValues",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "undefinedInitialValues",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noUselessUndefinedInitialization",
			"Deno Lint Name": "no-undef",
			"ESLint Name": "no-undef-init"
		}
	},
	"undefinedTypeofChecks": {
		"eslint": [
			{
				"name": "unicorn/no-typeof-undefined",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-typeof-undefined.md"
			}
		],
		"flint": {
			"name": "undefinedTypeofChecks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-typeof-undefined",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-typeof-undefined.html"
			}
		],
		"raw": {
			"Flint Name": "undefinedTypeofChecks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/no-typeof-undefined",
			"Oxlint Name": "unicorn/no-typeof-undefined"
		}
	},
	"unicodeBOMs": {
		"eslint": [
			{
				"name": "unicode-bom",
				"url": "https://eslint.org/docs/latest/rules/unicode-bom"
			}
		],
		"flint": {
			"name": "unicodeBOMs",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/unicode-bom",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/unicode-bom.html"
			}
		],
		"raw": {
			"Flint Name": "unicodeBOMs",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "unicode-bom",
			"Oxlint Name": "eslint/unicode-bom"
		}
	},
	"unnecessaryBlocks": {
		"biome": [
			{
				"name": "noUselessLoneBlockStatements",
				"url": "https://biomejs.dev/linter/rules/noUselessLoneBlockStatements"
			}
		],
		"eslint": [
			{
				"name": "no-lone-blocks",
				"url": "https://eslint.org/docs/latest/rules/no-lone-blocks"
			}
		],
		"flint": {
			"name": "unnecessaryBlocks",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-lone-blocks",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-lone-blocks.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryBlocks",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noUselessLoneBlockStatements",
			"ESLint Name": "no-lone-blocks",
			"Oxlint Name": "eslint/no-lone-blocks"
		}
	},
	"unnecessaryBooleanCasts": {
		"biome": [
			{
				"name": "noExtraBooleanCast",
				"url": "https://biomejs.dev/linter/rules/noExtraBooleanCast"
			}
		],
		"deno": [
			{
				"name": "no-extra-boolean-cast",
				"url": "https://docs.deno.com/lint/rules/no-extra-boolean-cast"
			}
		],
		"eslint": [
			{
				"name": "no-extra-boolean-cast",
				"url": "https://eslint.org/docs/latest/rules/no-extra-boolean-cast"
			}
		],
		"flint": {
			"name": "unnecessaryBooleanCasts",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-extra-boolean-cast",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-extra-boolean-cast.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryBooleanCasts",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noExtraBooleanCast",
			"Deno Lint Name": "no-extra-boolean-cast",
			"ESLint Name": "no-extra-boolean-cast",
			"Oxlint Name": "eslint/no-extra-boolean-cast"
		}
	},
	"unnecessaryComputedKeys": {
		"biome": [
			{
				"name": "useLiteralKeys",
				"url": "https://biomejs.dev/linter/rules/useLiteralKeys"
			}
		],
		"eslint": [
			{
				"name": "no-useless-computed-key",
				"url": "https://eslint.org/docs/latest/rules/no-useless-computed-key"
			}
		],
		"flint": {
			"name": "unnecessaryComputedKeys",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "unnecessaryComputedKeys",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "useLiteralKeys",
			"ESLint Name": "no-useless-computed-key"
		}
	},
	"unnecessaryConcatentation": {
		"biome": [
			{
				"name": "noUselessStringConcat",
				"url": "https://biomejs.dev/linter/rules/noUselessStringConcat"
			}
		],
		"eslint": [
			{
				"name": "no-useless-concat",
				"url": "https://eslint.org/docs/latest/rules/no-useless-concat"
			}
		],
		"flint": {
			"name": "unnecessaryConcatentation",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-concat",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-concat.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryConcatentation",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noUselessStringConcat",
			"ESLint Name": "no-useless-concat",
			"Oxlint Name": "eslint/no-useless-concat"
		}
	},
	"unnecessaryConstructors": {
		"biome": [
			{
				"name": "noUselessConstructor",
				"url": "https://biomejs.dev/linter/rules/noUselessConstructor"
			}
		],
		"eslint": [
			{
				"name": "no-useless-constructor",
				"url": "https://eslint.org/docs/latest/rules/no-useless-constructor"
			},
			{
				"name": "@typescript-eslint/no-useless-constructor",
				"url": "https://typescript-eslint.io/rules/no-useless-constructor"
			}
		],
		"flint": {
			"name": "unnecessaryConstructors",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-constructor",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-constructor.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryConstructors",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noUselessConstructor",
			"ESLint Name": "no-useless-constructor; @typescript-eslint/no-useless-constructor",
			"Oxlint Name": "eslint/no-useless-constructor"
		}
	},
	"unnecessaryRenames": {
		"biome": [
			{
				"name": "noUselessRename",
				"url": "https://biomejs.dev/linter/rules/noUselessRename"
			}
		],
		"deno": [
			{
				"name": "no-useless-rename",
				"url": "https://docs.deno.com/lint/rules/no-useless-rename"
			}
		],
		"eslint": [
			{
				"name": "no-useless-rename",
				"url": "https://eslint.org/docs/latest/rules/no-useless-rename"
			}
		],
		"flint": {
			"name": "unnecessaryRenames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-rename",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-rename.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryRenames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noUselessRename",
			"Deno Lint Name": "no-useless-rename",
			"ESLint Name": "no-useless-rename",
			"Oxlint Name": "eslint/no-useless-rename"
		}
	},
	"unnecessaryReturns": {
		"eslint": [
			{
				"name": "no-useless-return",
				"url": "https://eslint.org/docs/latest/rules/no-useless-return"
			}
		],
		"flint": {
			"name": "unnecessaryReturns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "unnecessaryReturns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"ESLint Name": "no-useless-return"
		}
	},
	"unnecessaryTernaries": {
		"eslint": [
			{
				"name": "unicorn/prefer-logical-operator-over-ternary",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-logical-operator-over-ternary.md"
			}
		],
		"flint": {
			"name": "unnecessaryTernaries",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-logical-operator-over-ternary",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-logical-operator-over-ternary.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryTernaries",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-logical-operator-over-ternary",
			"Oxlint Name": "unicorn/prefer-logical-operator-over-ternary"
		}
	},
	"unnecessaryTypeAnnotations": {
		"biome": [
			{
				"name": "noInferrableTypes",
				"url": "https://biomejs.dev/linter/rules/noInferrableTypes"
			}
		],
		"deno": [
			{
				"name": "no-inferrable-types",
				"url": "https://docs.deno.com/lint/rules/no-inferrable-types"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-inferrable-types",
				"url": "https://typescript-eslint.io/rules/no-inferrable-types"
			}
		],
		"flint": {
			"name": "unnecessaryTypeAnnotations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/no-inferrable-types",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-inferrable-types.html"
			}
		],
		"raw": {
			"Flint Name": "unnecessaryTypeAnnotations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noInferrableTypes",
			"Deno Lint Name": "no-inferrable-types",
			"ESLint Name": "@typescript-eslint/no-inferrable-types",
			"Oxlint Name": "typescript/no-inferrable-types"
		}
	},
	"unusedLabels": {
		"biome": [
			{
				"name": "noUnusedLabels",
				"url": "https://biomejs.dev/linter/rules/noUnusedLabels"
			}
		],
		"deno": [
			{
				"name": "no-unused-labels",
				"url": "https://docs.deno.com/lint/rules/no-unused-labels"
			}
		],
		"eslint": [
			{
				"name": "no-unused-labels",
				"url": "https://eslint.org/docs/latest/rules/no-unused-labels"
			}
		],
		"flint": {
			"name": "unusedLabels",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-unused-labels",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unused-labels.html"
			}
		],
		"raw": {
			"Flint Name": "unusedLabels",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noUnusedLabels",
			"Deno Lint Name": "no-unused-labels",
			"ESLint Name": "no-unused-labels",
			"Oxlint Name": "eslint/no-unused-labels"
		}
	},
	"varDeclarations": {
		"biome": [
			{
				"name": "noVar",
				"url": "https://biomejs.dev/linter/rules/noVar"
			}
		],
		"deno": [
			{
				"name": "no-var",
				"url": "https://docs.deno.com/lint/rules/no-var"
			}
		],
		"eslint": [
			{
				"name": "no-var",
				"url": "https://eslint.org/docs/latest/rules/no-var"
			}
		],
		"flint": {
			"name": "varDeclarations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "varDeclarations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noVar",
			"Deno Lint Name": "no-var",
			"ESLint Name": "no-var"
		}
	},
	"voidOperator": {
		"biome": [
			{
				"name": "noVoid",
				"url": "https://biomejs.dev/linter/rules/noVoid"
			}
		],
		"eslint": [
			{
				"name": "no-void",
				"url": "https://eslint.org/docs/latest/rules/no-void"
			}
		],
		"flint": {
			"name": "voidOperator",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-void",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-void.html"
			}
		],
		"raw": {
			"Flint Name": "voidOperator",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Stylistic",
			"Biome Name": "noVoid",
			"ESLint Name": "no-void",
			"Oxlint Name": "eslint/no-void"
		}
	},
	"arrayCallbackReturns": {
		"biome": [
			{
				"name": "useIterableCallbackReturn",
				"url": "https://biomejs.dev/linter/rules/useIterableCallbackReturn"
			}
		],
		"eslint": [
			{
				"name": "array-callback-return",
				"url": "https://eslint.org/docs/latest/rules/array-callback-return"
			}
		],
		"flint": {
			"name": "arrayCallbackReturns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/array-callback-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/array-callback-return.html"
			}
		],
		"raw": {
			"Flint Name": "arrayCallbackReturns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "useIterableCallbackReturn",
			"ESLint Name": "array-callback-return",
			"Oxlint Name": "eslint/array-callback-return"
		}
	},
	"caseDeclarations": {
		"biome": [
			{
				"name": "noSwitchDeclarations",
				"url": "https://biomejs.dev/linter/rules/noSwitchDeclarations"
			}
		],
		"deno": [
			{
				"name": "no-case-declarations",
				"url": "https://docs.deno.com/lint/rules/no-case-declarations"
			}
		],
		"eslint": [
			{
				"name": "no-case-declarations",
				"url": "https://eslint.org/docs/latest/rules/no-case-declarations"
			}
		],
		"flint": {
			"name": "caseDeclarations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-case-declarations",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-case-declarations.html"
			}
		],
		"raw": {
			"Flint Name": "caseDeclarations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noSwitchDeclarations",
			"Deno Lint Name": "no-case-declarations",
			"ESLint Name": "no-case-declarations",
			"Oxlint Name": "eslint/no-case-declarations"
		}
	},
	"classAssignments": {
		"biome": [
			{
				"name": "noClassAssign",
				"url": "https://biomejs.dev/linter/rules/noClassAssign"
			}
		],
		"deno": [
			{
				"name": "no-case-assign",
				"url": "https://docs.deno.com/lint/rules/no-case-assign"
			}
		],
		"eslint": [
			{
				"name": "no-class-assign",
				"url": "https://eslint.org/docs/latest/rules/no-class-assign"
			}
		],
		"flint": {
			"name": "classAssignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-class-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-class-assign.html"
			}
		],
		"raw": {
			"Flint Name": "classAssignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noClassAssign",
			"Deno Lint Name": "no-case-assign",
			"ESLint Name": "no-class-assign",
			"Oxlint Name": "eslint/no-class-assign"
		}
	},
	"classFieldDeclarations": {
		"eslint": [
			{
				"name": "unicorn/prefer-class-fields",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-class-fields.md"
			}
		],
		"flint": {
			"name": "classFieldDeclarations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "classFieldDeclarations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Flint Strictness": "Strict",
			"ESLint Name": "unicorn/prefer-class-fields"
		}
	},
	"classMemberDuplicates": {
		"biome": [
			{
				"name": "noDuplicateClassMembers",
				"url": "https://biomejs.dev/linter/rules/noDuplicateClassMembers"
			}
		],
		"deno": [
			{
				"name": "no-dupe-class-members",
				"url": "https://docs.deno.com/lint/rules/no-dupe-class-members"
			}
		],
		"eslint": [
			{
				"name": "no-dupe-class-members",
				"url": "https://eslint.org/docs/latest/rules/no-dupe-class-members"
			},
			{
				"name": "@typescript-eslint/no-dupe-class-members",
				"url": "https://typescript-eslint.io/rules/no-dupe-class-members"
			}
		],
		"flint": {
			"name": "classMemberDuplicates",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-dupe-class-members",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-dupe-class-members.html"
			}
		],
		"raw": {
			"Flint Name": "classMemberDuplicates",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noDuplicateClassMembers",
			"Deno Lint Name": "no-dupe-class-members",
			"ESLint Name": "no-dupe-class-members; @typescript-eslint/no-dupe-class-members",
			"Oxlint Name": "eslint/no-dupe-class-members"
		}
	},
	"constantAssignments": {
		"biome": [
			{
				"name": "noConstAssign",
				"url": "https://biomejs.dev/linter/rules/noConstAssign"
			}
		],
		"deno": [
			{
				"name": "no-const-assign",
				"url": "https://docs.deno.com/lint/rules/no-const-assign"
			}
		],
		"eslint": [
			{
				"name": "no-const-assign",
				"url": "https://eslint.org/docs/latest/rules/no-const-assign"
			}
		],
		"flint": {
			"name": "constantAssignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-const-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-const-assign.html"
			}
		],
		"raw": {
			"Flint Name": "constantAssignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noConstAssign",
			"Deno Lint Name": "no-const-assign",
			"ESLint Name": "no-const-assign",
			"Oxlint Name": "eslint/no-const-assign"
		}
	},
	"constructorSupers": {
		"biome": [
			{
				"name": "noInvalidConstructorSuper",
				"url": "https://biomejs.dev/linter/rules/noInvalidConstructorSuper"
			}
		],
		"deno": [
			{
				"name": "constructor-super",
				"url": "https://docs.deno.com/lint/rules/constructor-super"
			}
		],
		"eslint": [
			{
				"name": "constructor-super",
				"url": "https://eslint.org/docs/latest/rules/constructor-super"
			}
		],
		"flint": {
			"name": "constructorSupers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"raw": {
			"Flint Name": "constructorSupers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noInvalidConstructorSuper",
			"Deno Lint Name": "constructor-super",
			"ESLint Name": "constructor-super"
		}
	},
	"defaultParameterLast": {
		"biome": [
			{
				"name": "useDefaultParameterLast",
				"url": "https://biomejs.dev/linter/rules/useDefaultParameterLast"
			}
		],
		"deno": [
			{
				"name": "default-param-last",
				"url": "https://docs.deno.com/lint/rules/default-param-last"
			}
		],
		"eslint": [
			{
				"name": "default-param-last",
				"url": "https://eslint.org/docs/latest/rules/default-param-last"
			},
			{
				"name": "@typescript-eslint/default-param-last",
				"url": "https://typescript-eslint.io/rules/default-param-last"
			}
		],
		"flint": {
			"name": "defaultParameterLast",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/default-param-last",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/default-param-last.html"
			}
		],
		"raw": {
			"Flint Name": "defaultParameterLast",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "useDefaultParameterLast",
			"Deno Lint Name": "default-param-last",
			"ESLint Name": "default-param-last; @typescript-eslint/default-param-last",
			"Oxlint Name": "eslint/default-param-last"
		}
	},
	"duplicateArguments": {
		"biome": [
			{
				"name": "noDuplicateParameters",
				"url": "https://biomejs.dev/linter/rules/noDuplicateParameters"
			}
		],
		"deno": [
			{
				"name": "no-dupe-args",
				"url": "https://docs.deno.com/lint/rules/no-dupe-args"
			}
		],
		"eslint": [
			{
				"name": "no-dupe-args",
				"url": "https://eslint.org/docs/latest/rules/no-dupe-args"
			}
		],
		"flint": {
			"name": "duplicateArguments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"raw": {
			"Flint Name": "duplicateArguments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noDuplicateParameters",
			"Deno Lint Name": "no-dupe-args",
			"ESLint Name": "no-dupe-args"
		}
	},
	"functionAssignments": {
		"biome": [
			{
				"name": "noFunctionAssign",
				"url": "https://biomejs.dev/linter/rules/noFunctionAssign"
			}
		],
		"deno": [
			{
				"name": "no-func-assign",
				"url": "https://docs.deno.com/lint/rules/no-func-assign"
			}
		],
		"eslint": [
			{
				"name": "no-func-assign",
				"url": "https://eslint.org/docs/latest/rules/no-func-assign"
			}
		],
		"flint": {
			"name": "functionAssignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-func-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-func-assign.html"
			}
		],
		"raw": {
			"Flint Name": "functionAssignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noFunctionAssign",
			"Deno Lint Name": "no-func-assign",
			"ESLint Name": "no-func-assign",
			"Oxlint Name": "eslint/no-func-assign"
		}
	},
	"getterReturns": {
		"biome": [
			{
				"name": "useGetterReturn",
				"url": "https://biomejs.dev/linter/rules/useGetterReturn"
			}
		],
		"deno": [
			{
				"name": "getter-return",
				"url": "https://docs.deno.com/lint/rules/getter-return"
			}
		],
		"eslint": [
			{
				"name": "getter-return",
				"url": "https://eslint.org/docs/latest/rules/getter-return"
			}
		],
		"flint": {
			"name": "getterReturns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/getter-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/getter-return.html"
			}
		],
		"raw": {
			"Flint Name": "getterReturns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "useGetterReturn",
			"Deno Lint Name": "getter-return",
			"ESLint Name": "getter-return",
			"Oxlint Name": "eslint/getter-return"
		}
	},
	"globalAssignments": {
		"biome": [
			{
				"name": "noGlobalAssign",
				"url": "https://biomejs.dev/linter/rules/noGlobalAssign"
			}
		],
		"deno": [
			{
				"name": "no-global-assign",
				"url": "https://docs.deno.com/lint/rules/no-global-assign"
			}
		],
		"eslint": [
			{
				"name": "no-global-assign",
				"url": "https://eslint.org/docs/latest/rules/no-global-assign"
			}
		],
		"flint": {
			"name": "globalAssignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-global-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-global-assign.html"
			}
		],
		"raw": {
			"Flint Name": "globalAssignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noGlobalAssign",
			"Deno Lint Name": "no-global-assign",
			"ESLint Name": "no-global-assign",
			"Oxlint Name": "eslint/no-global-assign"
		}
	},
	"globalObjectCalls": {
		"biome": [
			{
				"name": "noGlobalObjectCalls",
				"url": "https://biomejs.dev/linter/rules/noGlobalObjectCalls"
			}
		],
		"deno": [
			{
				"name": "no-obj-calls",
				"url": "https://docs.deno.com/lint/rules/no-obj-calls"
			}
		],
		"eslint": [
			{
				"name": "no-obj-calls",
				"url": "https://eslint.org/docs/latest/rules/no-obj-calls"
			}
		],
		"flint": {
			"name": "globalObjectCalls",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-obj-calls",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-obj-calls.html"
			}
		],
		"raw": {
			"Flint Name": "globalObjectCalls",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noGlobalObjectCalls",
			"Deno Lint Name": "no-obj-calls",
			"ESLint Name": "no-obj-calls",
			"Oxlint Name": "eslint/no-obj-calls"
		}
	},
	"guardedForIns": {
		"biome": [
			{
				"name": "useGuardForIn",
				"url": "https://biomejs.dev/linter/rules/useGuardForIn"
			}
		],
		"deno": [
			{
				"name": "guard-for-in",
				"url": "https://docs.deno.com/lint/rules/guard-for-in"
			}
		],
		"eslint": [
			{
				"name": "guard-for-in",
				"url": "https://eslint.org/docs/latest/rules/guard-for-in"
			}
		],
		"flint": {
			"name": "guardedForIns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/guard-for-in",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/guard-for-in.html"
			}
		],
		"raw": {
			"Flint Name": "guardedForIns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "useGuardForIn",
			"Deno Lint Name": "guard-for-in",
			"ESLint Name": "guard-for-in",
			"Oxlint Name": "eslint/guard-for-in"
		}
	},
	"importAssignments": {
		"biome": [
			{
				"name": "noImportAssign",
				"url": "https://biomejs.dev/linter/rules/noImportAssign"
			}
		],
		"deno": [
			{
				"name": "no-import-assign",
				"url": "https://docs.deno.com/lint/rules/no-import-assign"
			}
		],
		"eslint": [
			{
				"name": "no-import-assign",
				"url": "https://eslint.org/docs/latest/rules/no-import-assign"
			}
		],
		"flint": {
			"name": "importAssignments",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"raw": {
			"Flint Name": "importAssignments",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noImportAssign",
			"Deno Lint Name": "no-import-assign",
			"ESLint Name": "no-import-assign"
		}
	},
	"invalidThis": {
		"eslint": [
			{
				"name": "no-invalid-this",
				"url": "https://eslint.org/docs/latest/rules/no-invalid-this"
			},
			{
				"name": "@typescript-eslint/no-invalid-this",
				"url": "https://typescript-eslint.io/rules/no-invalid-this"
			}
		],
		"flint": {
			"name": "invalidThis",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"raw": {
			"Flint Name": "invalidThis",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"ESLint Name": "no-invalid-this; @typescript-eslint/no-invalid-this"
		}
	},
	"nativeObjectExtensions": {
		"eslint": [
			{
				"name": "no-extend-native",
				"url": "https://eslint.org/docs/latest/rules/no-extend-native"
			}
		],
		"flint": {
			"name": "nativeObjectExtensions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-extend-native",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-extend-native.html"
			}
		],
		"raw": {
			"Flint Name": "nativeObjectExtensions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"ESLint Name": "no-extend-native",
			"Oxlint Name": "eslint/no-extend-native"
		}
	},
	"nonOctalDecimalEscapes": {
		"biome": [
			{
				"name": "noNonoctalDecimalEscape",
				"url": "https://biomejs.dev/linter/rules/noNonoctalDecimalEscape"
			}
		],
		"eslint": [
			{
				"name": "no-nonoctal-decimal-escape",
				"url": "https://eslint.org/docs/latest/rules/no-nonoctal-decimal-escape"
			}
		],
		"flint": {
			"name": "nonOctalDecimalEscapes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-nonoctal-decimal-escape",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-nonoctal-decimal-escape.html"
			}
		],
		"raw": {
			"Flint Name": "nonOctalDecimalEscapes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noNonoctalDecimalEscape",
			"ESLint Name": "no-nonoctal-decimal-escape",
			"Oxlint Name": "eslint/no-nonoctal-decimal-escape"
		}
	},
	"objectProto": {
		"eslint": [
			{
				"name": "no-proto",
				"url": "https://eslint.org/docs/latest/rules/no-proto"
			}
		],
		"flint": {
			"name": "objectProto",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-proto",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-proto.html"
			}
		],
		"raw": {
			"Flint Name": "objectProto",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"ESLint Name": "no-proto",
			"Oxlint Name": "eslint/no-proto"
		}
	},
	"octalEscapes": {
		"biome": [
			{
				"name": "noOctalEscape",
				"url": "https://biomejs.dev/linter/rules/noOctalEscape"
			}
		],
		"deno": [
			{
				"name": "no-octal",
				"url": "https://docs.deno.com/lint/rules/no-octal"
			}
		],
		"eslint": [
			{
				"name": "no-octal-escape",
				"url": "https://eslint.org/docs/latest/rules/no-octal-escape"
			}
		],
		"flint": {
			"name": "octalEscapes",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"raw": {
			"Flint Name": "octalEscapes",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noOctalEscape",
			"Deno Lint Name": "no-octal",
			"ESLint Name": "no-octal-escape"
		}
	},
	"octalNumbers": {
		"eslint": [
			{
				"name": "no-octal",
				"url": "https://eslint.org/docs/latest/rules/no-octal"
			}
		],
		"flint": {
			"name": "octalNumbers",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"raw": {
			"Flint Name": "octalNumbers",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"ESLint Name": "no-octal"
		}
	},
	"sequences": {
		"biome": [
			{
				"name": "noCommaOperator",
				"url": "https://biomejs.dev/linter/rules/noCommaOperator"
			}
		],
		"eslint": [
			{
				"name": "no-sequences",
				"url": "https://eslint.org/docs/latest/rules/no-sequences"
			}
		],
		"flint": {
			"name": "sequences",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"raw": {
			"Flint Name": "sequences",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noCommaOperator",
			"ESLint Name": "no-sequences"
		}
	},
	"setterReturns": {
		"biome": [
			{
				"name": "noSetterReturn",
				"url": "https://biomejs.dev/linter/rules/noSetterReturn"
			}
		],
		"deno": [
			{
				"name": "no-setter-return",
				"url": "https://docs.deno.com/lint/rules/no-setter-return"
			}
		],
		"eslint": [
			{
				"name": "no-setter-return",
				"url": "https://eslint.org/docs/latest/rules/no-setter-return"
			}
		],
		"flint": {
			"name": "setterReturns",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-setter-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-setter-return.html"
			}
		],
		"raw": {
			"Flint Name": "setterReturns",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noSetterReturn",
			"Deno Lint Name": "no-setter-return",
			"ESLint Name": "no-setter-return",
			"Oxlint Name": "eslint/no-setter-return"
		}
	},
	"shadowedRestrictedNames": {
		"biome": [
			{
				"name": "noShadowRestrictedNames",
				"url": "https://biomejs.dev/linter/rules/noShadowRestrictedNames"
			}
		],
		"deno": [
			{
				"name": "no-shadow-restricted-names",
				"url": "https://docs.deno.com/lint/rules/no-shadow-restricted-names"
			}
		],
		"eslint": [
			{
				"name": "no-shadow-restricted-names",
				"url": "https://eslint.org/docs/latest/rules/no-shadow-restricted-names"
			}
		],
		"flint": {
			"name": "shadowedRestrictedNames",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-shadow-restricted-names",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-shadow-restricted-names.html"
			}
		],
		"raw": {
			"Flint Name": "shadowedRestrictedNames",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noShadowRestrictedNames",
			"Deno Lint Name": "no-shadow-restricted-names",
			"ESLint Name": "no-shadow-restricted-names",
			"Oxlint Name": "eslint/no-shadow-restricted-names"
		}
	},
	"thisBeforeSuper": {
		"biome": [
			{
				"name": "noUnreachableSuper",
				"url": "https://biomejs.dev/linter/rules/noUnreachableSuper"
			}
		],
		"deno": [
			{
				"name": "no-this-before-super",
				"url": "https://docs.deno.com/lint/rules/no-this-before-super"
			}
		],
		"eslint": [
			{
				"name": "no-this-before-super",
				"url": "https://eslint.org/docs/latest/rules/no-this-before-super"
			}
		],
		"flint": {
			"name": "thisBeforeSuper",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-this-before-super",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-this-before-super.html"
			}
		],
		"raw": {
			"Flint Name": "thisBeforeSuper",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noUnreachableSuper",
			"Deno Lint Name": "no-this-before-super",
			"ESLint Name": "no-this-before-super",
			"Oxlint Name": "eslint/no-this-before-super"
		}
	},
	"typeofComparisons": {
		"biome": [
			{
				"name": "useValidTypeof",
				"url": "https://biomejs.dev/linter/rules/useValidTypeof"
			}
		],
		"deno": [
			{
				"name": "valid-typeof",
				"url": "https://docs.deno.com/lint/rules/valid-typeof"
			}
		],
		"eslint": [
			{
				"name": "valid-typeof",
				"url": "https://eslint.org/docs/latest/rules/valid-typeof"
			}
		],
		"flint": {
			"name": "typeofComparisons",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/valid-typeof",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/valid-typeof.html"
			}
		],
		"raw": {
			"Flint Name": "typeofComparisons",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "useValidTypeof",
			"Deno Lint Name": "valid-typeof",
			"ESLint Name": "valid-typeof",
			"Oxlint Name": "eslint/valid-typeof"
		}
	},
	"unassignedVariables": {
		"biome": [
			{
				"name": "noUnassignedVariables",
				"url": "https://biomejs.dev/linter/rules/noUnassignedVariables"
			}
		],
		"eslint": [
			{
				"name": "no-unassigned-vars",
				"url": "https://eslint.org/docs/latest/rules/no-unassigned-vars"
			}
		],
		"flint": {
			"name": "unassignedVariables",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-unassigned-vars",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unassigned-vars.html"
			}
		],
		"raw": {
			"Flint Name": "unassignedVariables",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noUnassignedVariables",
			"ESLint Name": "no-unassigned-vars",
			"Oxlint Name": "eslint/no-unassigned-vars"
		}
	},
	"undefinedVariables": {
		"biome": [
			{
				"name": "noUndeclaredVariables",
				"url": "https://biomejs.dev/linter/rules/noUndeclaredVariables"
			}
		],
		"eslint": [
			{
				"name": "no-undef",
				"url": "https://eslint.org/docs/latest/rules/no-undef"
			}
		],
		"flint": {
			"name": "undefinedVariables",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-undef",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-undef.html"
			}
		],
		"raw": {
			"Flint Name": "undefinedVariables",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noUndeclaredVariables",
			"ESLint Name": "no-undef",
			"Oxlint Name": "eslint/no-undef"
		}
	},
	"unreachableStatements": {
		"biome": [
			{
				"name": "noUnreachable",
				"url": "https://biomejs.dev/linter/rules/noUnreachable"
			}
		],
		"deno": [
			{
				"name": "no-unreachable",
				"url": "https://docs.deno.com/lint/rules/no-unreachable"
			}
		],
		"eslint": [
			{
				"name": "no-unreachable",
				"url": "https://eslint.org/docs/latest/rules/no-unreachable"
			}
		],
		"flint": {
			"name": "unreachableStatements",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-unreachable",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unreachable.html"
			}
		],
		"raw": {
			"Flint Name": "unreachableStatements",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noUnreachable",
			"Deno Lint Name": "no-unreachable",
			"ESLint Name": "no-unreachable",
			"Oxlint Name": "eslint/no-unreachable"
		}
	},
	"unsafeNegations": {
		"biome": [
			{
				"name": "noUnsafeNegation",
				"url": "https://biomejs.dev/linter/rules/noUnsafeNegation"
			}
		],
		"deno": [
			{
				"name": "no-unsafe-negation",
				"url": "https://docs.deno.com/lint/rules/no-unsafe-negation"
			}
		],
		"eslint": [
			{
				"name": "no-unsafe-negation",
				"url": "https://eslint.org/docs/latest/rules/no-unsafe-negation"
			}
		],
		"flint": {
			"name": "unsafeNegations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-unsafe-negation",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unsafe-negation.html"
			}
		],
		"raw": {
			"Flint Name": "unsafeNegations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noUnsafeNegation",
			"Deno Lint Name": "no-unsafe-negation",
			"ESLint Name": "no-unsafe-negation",
			"Oxlint Name": "eslint/no-unsafe-negation"
		}
	},
	"unsafeOptionalChains": {
		"biome": [
			{
				"name": "noUnsafeOptionalChaining",
				"url": "https://biomejs.dev/linter/rules/noUnsafeOptionalChaining"
			}
		],
		"eslint": [
			{
				"name": "no-unsafe-optional-chaining",
				"url": "https://eslint.org/docs/latest/rules/no-unsafe-optional-chaining"
			}
		],
		"flint": {
			"name": "unsafeOptionalChains",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-unsafe-optional-chaining",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unsafe-optional-chaining.html"
			}
		],
		"raw": {
			"Flint Name": "unsafeOptionalChains",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noUnsafeOptionalChaining",
			"ESLint Name": "no-unsafe-optional-chaining",
			"Oxlint Name": "eslint/no-unsafe-optional-chaining"
		}
	},
	"usageBeforeDefinition": {
		"biome": [
			{
				"name": "noInvalidUseBeforeDeclaration",
				"url": "https://biomejs.dev/linter/rules/noInvalidUseBeforeDeclaration"
			}
		],
		"eslint": [
			{
				"name": "no-use-before-define",
				"url": "https://eslint.org/docs/latest/rules/no-use-before-define"
			},
			{
				"name": "@typescript-eslint/no-use-before-define",
				"url": "https://typescript-eslint.io/rules/no-use-before-define"
			}
		],
		"flint": {
			"name": "usageBeforeDefinition",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"raw": {
			"Flint Name": "usageBeforeDefinition",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noInvalidUseBeforeDeclaration",
			"ESLint Name": "no-use-before-define; @typescript-eslint/no-use-before-define"
		}
	},
	"useStrictDirectives": {
		"eslint": [
			{
				"name": "strict",
				"url": "https://eslint.org/docs/latest/rules/strict"
			}
		],
		"flint": {
			"name": "useStrictDirectives",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"raw": {
			"Flint Name": "useStrictDirectives",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"ESLint Name": "strict"
		}
	},
	"variableBlockScopeUsage": {
		"eslint": [
			{
				"name": "block-scoped-var",
				"url": "https://eslint.org/docs/latest/rules/block-scoped-var"
			}
		],
		"flint": {
			"name": "variableBlockScopeUsage",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/block-scoped-var",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/block-scoped-var.html"
			}
		],
		"raw": {
			"Flint Name": "variableBlockScopeUsage",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"ESLint Name": "block-scoped-var",
			"Oxlint Name": "eslint/block-scoped-var"
		}
	},
	"variableDeletions": {
		"deno": [
			{
				"name": "no-delete-var",
				"url": "https://docs.deno.com/lint/rules/no-delete-var"
			}
		],
		"eslint": [
			{
				"name": "no-delete-var",
				"url": "https://eslint.org/docs/latest/rules/no-delete-var"
			}
		],
		"flint": {
			"name": "variableDeletions",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-delete-var",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-delete-var.html"
			}
		],
		"raw": {
			"Flint Name": "variableDeletions",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Deno Lint Name": "no-delete-var",
			"ESLint Name": "no-delete-var",
			"Oxlint Name": "eslint/no-delete-var"
		}
	},
	"variableRedeclarations": {
		"biome": [
			{
				"name": "noRedeclare",
				"url": "https://biomejs.dev/linter/rules/noRedeclare"
			}
		],
		"deno": [
			{
				"name": "no-redeclare",
				"url": "https://docs.deno.com/lint/rules/no-redeclare"
			}
		],
		"eslint": [
			{
				"name": "no-redeclare",
				"url": "https://eslint.org/docs/latest/rules/no-redeclare"
			},
			{
				"name": "@typescript-eslint/no-redeclare",
				"url": "https://typescript-eslint.io/rules/no-redeclare"
			}
		],
		"flint": {
			"name": "variableRedeclarations",
			"plugin": {
				"code": "ts",
				"name": "TypeScript"
			},
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-redeclare",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-redeclare.html"
			}
		],
		"raw": {
			"Flint Name": "variableRedeclarations",
			"Flint Plugin": "TypeScript",
			"Flint Preset": "Untyped",
			"Biome Name": "noRedeclare",
			"Deno Lint Name": "no-redeclare",
			"ESLint Name": "no-redeclare; @typescript-eslint/no-redeclare",
			"Oxlint Name": "eslint/no-redeclare"
		}
	},
	"emptyDocuments": {
		"eslint": [
			{
				"name": "yml/no-empty-document",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-empty-document.html"
			}
		],
		"flint": {
			"name": "emptyDocuments",
			"plugin": {
				"code": "yml",
				"name": "YML"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "emptyDocuments",
			"Flint Plugin": "YML",
			"Flint Preset": "Logical",
			"ESLint Name": "yml/no-empty-document"
		}
	},
	"emptyMappingKeys": {
		"eslint": [
			{
				"name": "yml/no-empty-key",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-empty-key.html"
			}
		],
		"flint": {
			"implemented": true,
			"name": "emptyMappingKeys",
			"plugin": {
				"code": "yml",
				"name": "YML"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "emptyMappingKeys",
			"Flint Plugin": "YML",
			"Flint Preset": "Logical",
			"ESLint Name": "yml/no-empty-key"
		}
	},
	"emptyMappingValues": {
		"eslint": [
			{
				"name": "yml/no-empty-mapping-value",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-empty-mapping-value.html"
			}
		],
		"flint": {
			"name": "emptyMappingValues",
			"plugin": {
				"code": "yml",
				"name": "YML"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "emptyMappingValues",
			"Flint Plugin": "YML",
			"Flint Preset": "Logical",
			"ESLint Name": "yml/no-empty-mapping-value"
		}
	},
	"emptySequenceEntries": {
		"eslint": [
			{
				"name": "yml/no-empty-sequence-entry",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-empty-sequence-entry.html"
			}
		],
		"flint": {
			"name": "emptySequenceEntries",
			"plugin": {
				"code": "yml",
				"name": "YML"
			},
			"preset": "Logical"
		},
		"raw": {
			"Flint Name": "emptySequenceEntries",
			"Flint Plugin": "YML",
			"Flint Preset": "Logical",
			"ESLint Name": "yml/no-empty-sequence-entry"
		}
	},
	"stringMappingKeys": {
		"eslint": [
			{
				"name": "yml/require-string-key",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/require-string-key.html"
			}
		],
		"flint": {
			"name": "stringMappingKeys",
			"plugin": {
				"code": "yml",
				"name": "YML"
			},
			"preset": "Logical",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "stringMappingKeys",
			"Flint Plugin": "YML",
			"Flint Preset": "Logical",
			"Flint Strictness": "Strict",
			"ESLint Name": "yml/require-string-key"
		}
	},
	"mappingKeyCasing": {
		"eslint": [
			{
				"name": "yml/key-name-casing",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/key-name-casing.html"
			}
		],
		"flint": {
			"name": "mappingKeyCasing",
			"plugin": {
				"code": "yml",
				"name": "YML"
			},
			"preset": "Not implementing"
		},
		"raw": {
			"Flint Name": "mappingKeyCasing",
			"Flint Plugin": "YML",
			"Flint Preset": "Not implementing",
			"ESLint Name": "yml/key-name-casing"
		}
	},
	"blockMappings": {
		"eslint": [
			{
				"name": "yml/block-mapping",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/block-mapping.html"
			}
		],
		"flint": {
			"name": "blockMappings",
			"plugin": {
				"code": "yml",
				"name": "YML"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "blockMappings",
			"Flint Plugin": "YML",
			"Flint Preset": "Stylistic",
			"ESLint Name": "yml/block-mapping"
		}
	},
	"blockSequences": {
		"eslint": [
			{
				"name": "yml/block-sequence",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/block-sequence.html"
			}
		],
		"flint": {
			"name": "blockSequences",
			"plugin": {
				"code": "yml",
				"name": "YML"
			},
			"preset": "Stylistic"
		},
		"raw": {
			"Flint Name": "blockSequences",
			"Flint Plugin": "YML",
			"Flint Preset": "Stylistic",
			"ESLint Name": "yml/block-sequence"
		}
	},
	"fileExtensions": {
		"eslint": [
			{
				"name": "yml/file-extension",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/file-extension.html"
			}
		],
		"flint": {
			"name": "fileExtensions",
			"plugin": {
				"code": "yml",
				"name": "YML"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "fileExtensions",
			"Flint Plugin": "YML",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "yml/file-extension"
		}
	},
	"numericTrailingZeros": {
		"eslint": [
			{
				"name": "yml/no-trailing-zeros",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-trailing-zeros.html"
			}
		],
		"flint": {
			"name": "numericTrailingZeros",
			"plugin": {
				"code": "yml",
				"name": "YML"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "numericTrailingZeros",
			"Flint Plugin": "YML",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "yml/no-trailing-zeros"
		}
	},
	"plainScalars": {
		"eslint": [
			{
				"name": "yml/plain-scalar",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/plain-scalar.html"
			}
		],
		"flint": {
			"name": "plainScalars",
			"plugin": {
				"code": "yml",
				"name": "YML"
			},
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"raw": {
			"Flint Name": "plainScalars",
			"Flint Plugin": "YML",
			"Flint Preset": "Stylistic",
			"Flint Strictness": "Strict",
			"ESLint Name": "yml/plain-scalar"
		}
	}
}
