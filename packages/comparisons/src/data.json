[
	{
		"biome": [
			{
				"name": "noAlert",
				"url": "https://biomejs.dev/linter/rules/noAlert"
			}
		],
		"eslint": [
			{
				"name": "no-alert",
				"url": "https://eslint.org/docs/latest/rules/no-alert"
			}
		],
		"flint": {
			"implemented": true,
			"name": "alerts",
			"plugin": "browser",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-alert",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-alert.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-classlist-toggle",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-classlist-toggle.md"
			}
		],
		"flint": {
			"name": "classListToggles",
			"plugin": "browser",
			"preset": "Stylistic"
		}
	},
	{
		"biome": [
			{
				"name": "noDocumentCookie",
				"url": "https://biomejs.dev/linter/rules/noDocumentCookie"
			}
		],
		"eslint": [
			{
				"name": "unicorn/no-document-cookie",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-document-cookie.md"
			}
		],
		"flint": {
			"name": "documentCookies",
			"plugin": "browser",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-document-cookie",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-document-cookie.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-event-target",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-event-target.md"
			}
		],
		"flint": {
			"name": "eventClasses",
			"plugin": "browser",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-event-target",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-event-target.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-add-event-listener",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-add-event-listener.md"
			}
		],
		"flint": {
			"name": "eventListenerSubscriptions",
			"plugin": "browser",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-add-event-listener",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-add-event-listener.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-implicit-globals",
				"url": "https://eslint.org/docs/latest/rules/no-implicit-globals"
			}
		],
		"flint": {
			"name": "implicitGlobals",
			"plugin": "browser",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-keyboard-event-key",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-keyboard-event-key.md"
			}
		],
		"flint": {
			"name": "keyboardEventKeys",
			"plugin": "browser",
			"preset": "Not implementing"
		},
		"notes": "Superseded by deprecated"
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-dom-node-append",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-dom-node-append.md"
			}
		],
		"flint": {
			"name": "nodeAppendMethods",
			"plugin": "browser",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-dom-node-append",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-dom-node-append.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-dom-node-dataset",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-dom-node-dataset.md"
			}
		],
		"flint": {
			"name": "nodeDatasetAttributes",
			"plugin": "browser",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-dom-node-dataset",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-dom-node-dataset.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-modern-dom-apis",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-modern-dom-apis.md"
			}
		],
		"flint": {
			"name": "nodeModificationMethods",
			"plugin": "browser",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-modern-dom-apis",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-modern-dom-apis.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-query-selector",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-query-selector.md"
			}
		],
		"flint": {
			"name": "nodeQueryMethods",
			"plugin": "browser",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-query-selector",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-query-selector.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-dom-node-remove",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-dom-node-remove.md"
			}
		],
		"flint": {
			"name": "nodeRemoveMethods",
			"plugin": "browser",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-dom-node-remove",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-dom-node-remove.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-dom-node-text-content",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-dom-node-text-content.md"
			}
		],
		"flint": {
			"name": "nodeTextContents",
			"plugin": "browser",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-dom-node-text-content",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-dom-node-text-content.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-invalid-remove-event-listener",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-invalid-remove-event-listener.md"
			}
		],
		"flint": {
			"name": "removeEventListenerExpressions",
			"plugin": "browser",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-invalid-remove-event-listener",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-invalid-remove-event-listener.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-script-url",
				"url": "https://eslint.org/docs/latest/rules/no-script-url"
			}
		],
		"flint": {
			"name": "scriptUrls",
			"plugin": "browser",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-script-url",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-script-url.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/require-post-message-target-origin",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/require-post-message-target-origin.md"
			}
		],
		"flint": {
			"name": "windowMessagingTargetOrigin",
			"plugin": "browser",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/require-post-message-target-origin",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/require-post-message-target-origin.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "prefer-ascii",
				"url": "https://docs.deno.com/lint/rules/prefer-ascii"
			}
		],
		"flint": {
			"name": "asciiCharacters",
			"plugin": "deno",
			"preset": "Not implementing"
		}
	},
	{
		"deno": [
			{
				"name": "no-node-globals",
				"url": "https://docs.deno.com/lint/rules/no-node-globals"
			}
		],
		"flint": {
			"name": "nodeGlobals",
			"plugin": "deno",
			"preset": "Not implementing"
		}
	},
	{
		"deno": [
			{
				"name": "no-sync-fn-in-async-fn",
				"url": "https://docs.deno.com/lint/rules/no-sync-fn-in-async-fn"
			}
		],
		"flint": {
			"name": "syncFunctionInAsyncFunctions",
			"plugin": "deno",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsonc/sort-array-values",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/sort-array-values.html"
			}
		],
		"flint": {
			"name": "arrayElementsSorting",
			"plugin": "json",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-bigint-literals",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-bigint-literals.html"
			}
		],
		"flint": {
			"name": "bigintLiterals",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-binary-expression",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-binary-expression.html"
			}
		],
		"flint": {
			"name": "binaryExpressions",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-binary-numeric-literals",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-binary-numeric-literals.html"
			}
		],
		"flint": {
			"name": "binaryNumericLiterals",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-comments",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-comments.html"
			}
		],
		"flint": {
			"name": "comments",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-floating-decimal",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-floating-decimal.html"
			}
		],
		"flint": {
			"name": "floatingDecimals",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-hexadecimal-numeric-literals",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-hexadecimal-numeric-literals.html"
			}
		],
		"flint": {
			"name": "hexadecimalNumericLiterals",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-escape-sequence-in-identifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-escape-sequence-in-identifier.html"
			}
		],
		"flint": {
			"name": "identifierEscapeSequences",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-number-props",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-number-props.html"
			}
		],
		"flint": {
			"name": "identifierNumbers",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-infinity",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-infinity.html"
			}
		],
		"flint": {
			"name": "infinity",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/key-name-casing",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/key-name-casing.html"
			}
		],
		"flint": {
			"name": "keyCasing",
			"plugin": "json",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "json/no-empty-keys",
				"url": "https://github.com/eslint/json/blob/HEAD/docs/rules/no-empty-keys.md"
			}
		],
		"flint": {
			"name": "keyContents",
			"plugin": "json",
			"preset": "Not implementing"
		}
	},
	{
		"deno": [
			{
				"name": "no-dupe-keys",
				"url": "https://docs.deno.com/lint/rules/no-dupe-keys"
			}
		],
		"eslint": [
			{
				"name": "jsonc/no-dupe-keys",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-dupe-keys.html"
			}
		],
		"flint": {
			"name": "keyDuplicates",
			"plugin": "json",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "json/no-unnormalized-keys",
				"url": "https://github.com/eslint/json/blob/HEAD/docs/rules/no-unnormalized-keys.md"
			}
		],
		"flint": {
			"name": "keyNormalization",
			"plugin": "json",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-nan",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-nan.html"
			}
		],
		"flint": {
			"name": "nan",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/valid-json-number",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/valid-json-number.html"
			}
		],
		"flint": {
			"name": "numbers",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-numeric-separators",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-numeric-separators.html"
			}
		],
		"flint": {
			"name": "numericSeparators",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-octal-escape",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-octal-escape.html"
			}
		],
		"flint": {
			"name": "octalEscapeSequences",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-octal-escape",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-octal-escape.html"
			}
		],
		"flint": {
			"name": "octalLiterals",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-octal-numeric-literals",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-octal-numeric-literals.html"
			}
		],
		"flint": {
			"name": "octalNumericLiterals",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-parenthesized",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-parenthesized.html"
			}
		],
		"flint": {
			"name": "parentheses",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-plus-sign",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-plus-sign.html"
			}
		],
		"flint": {
			"name": "plusOperators",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-template-literals",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-template-literals.html"
			}
		],
		"flint": {
			"name": "templateLiterals",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "json/top-level-interop",
				"url": "https://github.com/eslint/json/blob/HEAD/docs/rules/top-level-interop.md"
			}
		],
		"flint": {
			"name": "topLevelInteroperability",
			"plugin": "json",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-undefined-value",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-undefined-value.html"
			}
		],
		"flint": {
			"name": "undefined",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "jsonc/no-unicode-codepoint-escapes",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-unicode-codepoint-escapes.html"
			}
		],
		"flint": {
			"name": "unicodeCodepointEscapes",
			"plugin": "json",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "json/no-unsafe-values",
				"url": "https://github.com/eslint/json/blob/HEAD/docs/rules/no-unsafe-values.md"
			}
		],
		"flint": {
			"name": "valueSafety",
			"plugin": "json",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/no-access-key",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-access-key.md"
			}
		],
		"flint": {
			"implemented": true,
			"name": "accessKeys",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx-a11y/no-access-key",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-access-key.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/alt-text",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/alt-text.md"
			}
		],
		"flint": {
			"name": "altText",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/alt-text",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/alt-text.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/anchor-ambiguous-text",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-ambiguous-text.md"
			}
		],
		"flint": {
			"name": "anchorAmbiguousText",
			"plugin": "jsx",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "jsx-a11y/anchor-ambiguous-text",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx-a11y/anchor-ambiguous-text.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/anchor-content",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-content.md"
			}
		],
		"flint": {
			"name": "anchorContent",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/anchor-has-content",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/anchor-has-content.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/anchor-is-valid",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"
			}
		],
		"flint": {
			"name": "anchorValidity",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/anchor-is-valid",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/anchor-is-valid.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/aria-activedescendant-has-tabindex",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/aria-activedescendant-has-tabindex.md"
			}
		],
		"flint": {
			"name": "ariaActiveDescendantTabIndex",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/aria-activedescendant-has-tabindex",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/aria-activedescendant-has-tabindex.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/no-aria-hidden-on-focusable",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-aria-hidden-on-focusable.md"
			}
		],
		"flint": {
			"name": "ariaHiddenFocusables",
			"plugin": "jsx",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/no-aria-hidden-on-focusable",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-aria-hidden-on-focusable.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/aria-props",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/aria-props.md"
			}
		],
		"flint": {
			"name": "ariaProps",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/aria-props",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/aria-props.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/aria-proptypes",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/aria-proptypes.md"
			}
		],
		"flint": {
			"name": "ariaPropTypes",
			"plugin": "jsx",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/aria-role",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/aria-role.md"
			}
		],
		"flint": {
			"name": "ariaRoles",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/aria-role",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/aria-role.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/aria-unsupported-elements",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/aria-unsupported-elements.md"
			}
		],
		"flint": {
			"name": "ariaUnsupportedElements",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/aria-unsupported-elements",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/aria-unsupported-elements.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/autocomplete-valid",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/autocomplete-valid.md"
			}
		],
		"flint": {
			"name": "autocomplete",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/autocomplete-valid",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/autocomplete-valid.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/no-autofocus",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-autofocus.md"
			}
		],
		"flint": {
			"name": "autoFocusProps",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/no-autofocus",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-autofocus.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "jsx-boolean-value",
				"url": "https://docs.deno.com/lint/rules/jsx-boolean-value"
			}
		],
		"flint": {
			"name": "booleanValues",
			"plugin": "jsx",
			"preset": "Stylistic"
		}
	},
	{
		"deno": [
			{
				"name": "jsx-curly-braces",
				"url": "https://docs.deno.com/lint/rules/jsx-curly-braces"
			}
		],
		"flint": {
			"name": "bracedStatements",
			"plugin": "jsx",
			"preset": "Stylistic"
		}
	},
	{
		"deno": [
			{
				"name": "button-has-type",
				"url": "https://docs.deno.com/lint/rules/button-has-type"
			},
			{
				"name": "jsx-button-has-type",
				"url": "https://docs.deno.com/lint/rules/jsx-button-has-type"
			}
		],
		"flint": {
			"name": "buttonTypes",
			"plugin": "jsx",
			"preset": "Not implementing"
		}
	},
	{
		"deno": [
			{
				"name": "jsx-no-children-prop",
				"url": "https://docs.deno.com/lint/rules/jsx-no-children-prop"
			}
		],
		"flint": {
			"name": "childrenProps",
			"plugin": "jsx",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/click-events-have-key-events",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/click-events-have-key-events.md"
			}
		],
		"flint": {
			"name": "clickEventKeyEvents",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/click-events-have-key-events",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/click-events-have-key-events.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "jsx-no-comment-text-nodes",
				"url": "https://docs.deno.com/lint/rules/jsx-no-comment-text-nodes"
			}
		],
		"flint": {
			"name": "commentTextNodes",
			"plugin": "jsx",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/no-distracting-elements",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-distracting-elements.md"
			}
		],
		"flint": {
			"name": "distractingElements",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/no-distracting-elements",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-distracting-elements.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "jsx-no-duplicate-props",
				"url": "https://docs.deno.com/lint/rules/jsx-no-duplicate-props"
			}
		],
		"flint": {
			"name": "duplicateProps",
			"plugin": "jsx",
			"preset": "Logical"
		}
	},
	{
		"deno": [
			{
				"name": "jsx-props-no-spread-multi",
				"url": "https://docs.deno.com/lint/rules/jsx-props-no-spread-multi"
			}
		],
		"flint": {
			"name": "duplicateSpreads",
			"plugin": "jsx",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/heading-has-content",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/heading-has-content.md"
			}
		],
		"flint": {
			"name": "headingContents",
			"plugin": "jsx",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/html-has-lang",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/html-has-lang.md"
			}
		],
		"flint": {
			"name": "htmlLangs",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/html-has-lang",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/html-has-lang.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/iframe-has-title",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/iframe-has-title.md"
			}
		],
		"flint": {
			"name": "iframeTitles",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/iframe-has-title",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/iframe-has-title.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/img-redundant-alt",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/img-redundant-alt.md"
			}
		],
		"flint": {
			"name": "imageAltRedundancy",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/img-redundant-alt",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/img-redundant-alt.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/no-interactive-element-to-noninteractive-role",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-interactive-element-to-noninteractive-role.md"
			}
		],
		"flint": {
			"name": "interactiveElementNonInteractiveRoles",
			"plugin": "jsx",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/interactive-elements-focusable",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/interactive-elements-focusable.md"
			}
		],
		"flint": {
			"name": "interactiveElementsFocusable",
			"plugin": "jsx",
			"preset": "Logical"
		}
	},
	{
		"deno": [
			{
				"name": "jsx-key",
				"url": "https://docs.deno.com/lint/rules/jsx-key"
			}
		],
		"flint": {
			"name": "iterableKeys",
			"plugin": "jsx",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/label-has-associated-control",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/label-has-associated-control.md"
			}
		],
		"flint": {
			"name": "labelAssociatedControls",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/label-has-associated-control",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/label-has-associated-control.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/lang",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/lang.md"
			}
		],
		"flint": {
			"name": "langValidity",
			"plugin": "jsx",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/lang",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/lang.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/media-has-caption",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/media-has-caption.md"
			}
		],
		"flint": {
			"name": "mediaCaptions",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/media-has-caption",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/media-has-caption.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noSuspiciousSemicolonInJsx",
				"url": "https://biomejs.dev/linter/rules/noSuspiciousSemicolonInJsx"
			}
		],
		"flint": {
			"name": "misleadingSemicolons",
			"plugin": "jsx",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/mouse-events-have-key-events",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/mouse-events-have-key-events.md"
			}
		],
		"flint": {
			"name": "mouseEventKeyEvents",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/mouse-events-have-key-events",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/mouse-events-have-key-events.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/no-noninteractive-element-interactions",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-noninteractive-element-interactions.md"
			}
		],
		"flint": {
			"name": "nonInteractiveElementInteractions",
			"plugin": "jsx",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/no-noninteractive-element-to-interactive-role",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-noninteractive-element-to-interactive-role.md"
			}
		],
		"flint": {
			"name": "nonInteractiveElementInteractiveRoles",
			"plugin": "jsx",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/no-noninteractive-tabindex",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-noninteractive-tabindex.md"
			}
		],
		"flint": {
			"name": "nonInteractiveElementTabIndexes",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/no-noninteractive-tabindex",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-noninteractive-tabindex.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/no-redundant-roles",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-redundant-roles.md"
			}
		],
		"flint": {
			"name": "roleRedundancies",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/no-redundant-roles",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-redundant-roles.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/role-has-required-aria-props",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/role-has-required-aria-props.md"
			}
		],
		"flint": {
			"name": "roleRequiredAriaProps",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/role-has-required-aria-props",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/role-has-required-aria-props.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/prefer-tag-over-role",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/prefer-tag-over-role.md"
			}
		],
		"flint": {
			"name": "roleTags",
			"plugin": "jsx",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/prefer-tag-over-role",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/prefer-tag-over-role.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/role-supports-aria-props",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/role-supports-aria-props.md"
			}
		],
		"flint": {
			"name": "ruleSupportedAriaProps",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/role-supports-aria-props",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/role-supports-aria-props.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/scope",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/scope.md"
			}
		],
		"flint": {
			"name": "scopeProps",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/scope",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/scope.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/no-static-element-interactions",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/no-static-element-interactions.md"
			}
		],
		"flint": {
			"name": "staticElementInteractions",
			"plugin": "jsx",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noSvgWithoutTitle",
				"url": "https://biomejs.dev/linter/rules/noSvgWithoutTitle"
			}
		],
		"flint": {
			"name": "svgTitles",
			"plugin": "jsx",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "jsx-a11y/tabindex-no-positive",
				"url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/tabindex-no-positive.md"
			}
		],
		"flint": {
			"name": "tabIndexPositiveValues",
			"plugin": "jsx",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "jsx_a11y/tabindex-no-positive",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/tabindex-no-positive.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "jsx-no-unescaped-entities",
				"url": "https://docs.deno.com/lint/rules/jsx-no-unescaped-entities"
			}
		],
		"flint": {
			"name": "unescapedEntities",
			"plugin": "jsx",
			"preset": "Stylistic"
		}
	},
	{
		"deno": [
			{
				"name": "jsx-no-useless-fragment",
				"url": "https://docs.deno.com/lint/rules/jsx-no-useless-fragment"
			}
		],
		"flint": {
			"name": "unnecessaryFragments",
			"plugin": "jsx",
			"preset": "Stylistic"
		}
	},
	{
		"deno": [
			{
				"name": "jsx-void-dom-elements-no-children",
				"url": "https://docs.deno.com/lint/rules/jsx-void-dom-elements-no-children"
			}
		],
		"flint": {
			"name": "validElementChildren",
			"plugin": "jsx",
			"preset": "Logical",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-bare-urls",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-bare-urls.md"
			}
		],
		"flint": {
			"name": "bareUrls",
			"plugin": "md",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-empty-definitions",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-empty-definitions.md"
			}
		],
		"flint": {
			"name": "definitionContents",
			"plugin": "md",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-duplicate-definitions",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-duplicate-definitions.md"
			}
		],
		"flint": {
			"name": "definitionDuplicates",
			"plugin": "md",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-unused-definitions",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-unused-definitions.md"
			}
		],
		"flint": {
			"name": "definitionUses",
			"plugin": "md",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-space-in-emphasis",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-space-in-emphasis.md"
			}
		],
		"flint": {
			"name": "emphasisMarkerSpacing",
			"plugin": "md",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/fenced-code-language",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/fenced-code-language.md"
			}
		],
		"flint": {
			"name": "fencedCodeLanguages",
			"plugin": "md",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-duplicate-headings",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-duplicate-headings.md"
			}
		],
		"flint": {
			"name": "headingDuplicates",
			"plugin": "md",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"notes": "Enable with Markdownlint's siblings_only equivalent"
	},
	{
		"eslint": [
			{
				"name": "markdown/heading-increment",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/heading-increment.md"
			}
		],
		"flint": {
			"implemented": true,
			"name": "headingIncrements",
			"plugin": "md",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-missing-atx-heading-space",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-missing-atx-heading-space.md"
			}
		],
		"flint": {
			"name": "headingSpaces",
			"plugin": "md",
			"preset": "Not implementing"
		},
		"notes": "I intend to write a Prettier plugin."
	},
	{
		"eslint": [
			{
				"name": "markdown/no-multiple-h1",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-multiple-h1.md"
			}
		],
		"flint": {
			"name": "headingsRootDuplicates",
			"plugin": "md",
			"preset": "Logical",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-html",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-html.md"
			}
		],
		"flint": {
			"name": "html",
			"plugin": "md",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/require-alt-text",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/require-alt-text.md"
			}
		],
		"flint": {
			"name": "imageAltTexts",
			"plugin": "md",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-empty-images",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-empty-images.md"
			}
		],
		"flint": {
			"name": "imageContents",
			"plugin": "md",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-missing-label-refs",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-missing-label-refs.md"
			}
		],
		"flint": {
			"name": "labelReferences",
			"plugin": "md",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-invalid-label-refs",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-invalid-label-refs.md"
			}
		],
		"flint": {
			"name": "labelReferenceValidity",
			"plugin": "md",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-empty-links",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-empty-links.md"
			}
		],
		"flint": {
			"name": "linkContents",
			"plugin": "md",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-missing-link-fragments",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-missing-link-fragments.md"
			}
		],
		"flint": {
			"name": "linkFragments",
			"plugin": "md",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-reversed-media-syntax",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-reversed-media-syntax.md"
			}
		],
		"flint": {
			"name": "mediaSyntaxReversals",
			"plugin": "md",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/no-reference-like-url",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/no-reference-like-url.md"
			}
		],
		"flint": {
			"name": "referenceLikeUrls",
			"plugin": "md",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "markdown/table-column-count",
				"url": "https://github.com/eslint/markdown/blob/HEAD/docs/rules/table-column-count.md"
			}
		],
		"flint": {
			"name": "tableColumnCounts",
			"plugin": "md",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "useNodeAssertStrict",
				"url": "https://biomejs.dev/linter/rules/useNodeAssertStrict"
			}
		],
		"flint": {
			"name": "assertStrict",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/consistent-assert",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/consistent-assert.md"
			}
		],
		"flint": {
			"name": "assertStyles",
			"plugin": "node",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/consistent-assert",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-assert.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-blob-reading-methods",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-blob-reading-methods.md"
			}
		],
		"flint": {
			"name": "blobReadingMethods",
			"plugin": "node",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-blob-reading-methods",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-blob-reading-methods.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-new-buffer",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-new-buffer.md"
			}
		],
		"flint": {
			"name": "bufferAllocators",
			"plugin": "node",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-new-buffer",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-new-buffer.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "n/handle-callback-err",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/handle-callback-err.md"
			}
		],
		"flint": {
			"name": "callbackErrorHandling",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/no-callback-literal",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-callback-literal.md"
			}
		],
		"flint": {
			"name": "callbackErrorLiterals",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/callback-return",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/callback-return.md"
			}
		],
		"flint": {
			"name": "callbackReturns",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-console-spaces",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-console-spaces.md"
			}
		],
		"flint": {
			"name": "consoleSpaces",
			"plugin": "node",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-console-spaces",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-console-spaces.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "no-deprecated-deno-api",
				"url": "https://docs.deno.com/lint/rules/no-deprecated-deno-api"
			}
		],
		"eslint": [
			{
				"name": "n/no-deprecated-api",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-deprecated-api.md"
			}
		],
		"flint": {
			"name": "deprecatedAPIs",
			"plugin": "node",
			"preset": "Not implementing"
		},
		"notes": "Superseded by deprecated"
	},
	{
		"eslint": [
			{
				"name": "n/no-exports-assign",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-exports-assign.md"
			}
		],
		"flint": {
			"name": "exportsAssignments",
			"plugin": "node",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "node/no-exports-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/node/no-exports-assign.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "n/exports-style",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/exports-style.md"
			}
		],
		"flint": {
			"name": "exportsStyle",
			"plugin": "node",
			"preset": "Not implementing"
		},
		"notes": "CJS-specific"
	},
	{
		"eslint": [
			{
				"name": "n/no-extraneous-import",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-extraneous-import.md"
			}
		],
		"flint": {
			"name": "extraneousImports",
			"plugin": "node",
			"preset": "Not implementing"
		},
		"notes": "Superseded by Knip"
	},
	{
		"eslint": [
			{
				"name": "n/no-extraneous-require",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-extraneous-require.md"
			}
		],
		"flint": {
			"name": "extraneousRequires",
			"plugin": "node",
			"preset": "Not implementing"
		},
		"notes": "Superseded by Knip"
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-import-meta-properties",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-import-meta-properties.md"
			}
		],
		"flint": {
			"name": "filePathsFromImportMeta",
			"plugin": "node",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-json-parse-buffer",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-json-parse-buffer.md"
			}
		],
		"flint": {
			"name": "fileReadJSONBuffers",
			"plugin": "node",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "n/prefer-global/buffer",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalBuffer",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/prefer-global/console",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalConsole",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noProcessGlobal",
				"url": "https://biomejs.dev/linter/rules/noProcessGlobal"
			}
		],
		"deno": [
			{
				"name": "no-process-global",
				"url": "https://docs.deno.com/lint/rules/no-process-global"
			}
		],
		"eslint": [
			{
				"name": "n/prefer-global/process",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalProcess",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/prefer-global/text-decoder",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalTextDecoder",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/prefer-global/text-encoder",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalTextEncoder",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/prefer-global/url-search-params",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalURL",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/prefer-global/url-search-params",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global.md"
			}
		],
		"flint": {
			"name": "globalURLSearchParams",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/hashbang",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/hashbang.md"
			}
		],
		"flint": {
			"name": "hashbangs",
			"plugin": "node",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "useImportExtensions",
				"url": "https://biomejs.dev/linter/rules/useImportExtensions"
			}
		],
		"deno": [
			{
				"name": "no-sloppy-imports",
				"url": "https://docs.deno.com/lint/rules/no-sloppy-imports"
			}
		],
		"eslint": [
			{
				"name": "n/file-extension-in-import",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/file-extension-in-import.md"
			}
		],
		"flint": {
			"name": "importFileExtensions",
			"plugin": "node",
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "import/extensions",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/extensions.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "n/no-missing-import",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-missing-import.md"
			}
		],
		"flint": {
			"name": "missingImports",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/no-missing-require",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-missing-require.md"
			}
		],
		"flint": {
			"name": "missingRequires",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/no-mixed-requires",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-mixed-requires.md"
			}
		],
		"flint": {
			"name": "mixedRequires",
			"plugin": "node",
			"preset": "Not implementing"
		},
		"notes": "Superseded by ESM and ordering rules"
	},
	{
		"eslint": [
			{
				"name": "n/no-new-requires",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-new-requires.md"
			}
		],
		"flint": {
			"name": "newRequires",
			"plugin": "node",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "node/no-new-require",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/node/no-new-require.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useNodejsImportProtocol",
				"url": "https://biomejs.dev/linter/rules/useNodejsImportProtocol"
			}
		],
		"eslint": [
			{
				"name": "import/enforce-node-protocol-usage",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/enforce-node-protocol-usage.md"
			},
			{
				"name": "n/prefer-node-protocol",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-node-protocol.md"
			},
			{
				"name": "unicorn/prefer-node-protocol",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-node-protocol.md"
			}
		],
		"flint": {
			"name": "nodeProtocols",
			"plugin": "node",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-node-protocol",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-node-protocol.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "n/no-path-concat",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-path-concat.md"
			}
		],
		"flint": {
			"name": "pathConcatenations",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/no-process-env",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-process-env.md"
			}
		],
		"flint": {
			"name": "processEnvs",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/no-process-exit",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-process-exit.md"
			},
			{
				"name": "unicorn/no-process-exit",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-process-exit.md"
			}
		],
		"flint": {
			"name": "processExists",
			"plugin": "node",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-process-exit",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-process-exit.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "n/process-exit-as-throw",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/process-exit-as-throw.md"
			}
		],
		"flint": {
			"name": "processExitThrows",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "promise/no-callback-in-promise",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/no-callback-in-promise.md"
			}
		],
		"flint": {
			"name": "promiseCallbackFunctions",
			"plugin": "node",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/no-callback-in-promise",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-callback-in-promise.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "n/prefer-promises/dns",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-promises.md"
			}
		],
		"flint": {
			"name": "promisesDNS",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/prefer-promises/fs",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-promises.md"
			}
		],
		"flint": {
			"name": "promisesFS",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/no-restricted-require",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-restricted-require.md"
			}
		],
		"flint": {
			"name": "restrictedRequires",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/no-sync",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-sync.md"
			}
		],
		"flint": {
			"name": "synchronousMethods",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/global-require",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/global-require.md"
			}
		],
		"flint": {
			"name": "topLevelRequires",
			"plugin": "node",
			"preset": "Not implementing"
		},
		"notes": "CJS-specific"
	},
	{
		"eslint": [
			{
				"name": "n/no-unpublished-bin",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-bin.md"
			}
		],
		"flint": {
			"name": "unpublishedBins",
			"plugin": "node",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "n/no-unpublished-import",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-import.md"
			}
		],
		"flint": {
			"name": "unpublishedImports",
			"plugin": "node",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "n/no-unpublished-require",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-require.md"
			}
		],
		"flint": {
			"name": "unpublishedRequires",
			"plugin": "node",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "n/no-unsupported-features/es-builtins",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features.md"
			}
		],
		"flint": {
			"name": "unsupportedGlobals",
			"plugin": "node",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "n/no-unsupported-features/node-builtins",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features.md"
			}
		],
		"flint": {
			"name": "unsupportedNodeAPIs",
			"plugin": "node",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "n/no-unsupported-features/es-syntax",
				"url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features.md"
			}
		],
		"flint": {
			"name": "unsupportedSyntax",
			"plugin": "node",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-author",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-author.md"
			}
		],
		"flint": {
			"name": "authorPresence",
			"plugin": "packageJson",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-author",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-author.md"
			}
		],
		"flint": {
			"name": "authorValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-bin",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-bin.md"
			}
		],
		"flint": {
			"name": "binValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-bugs",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-bugs.md"
			}
		],
		"flint": {
			"name": "bugsPresence",
			"plugin": "packageJson",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-bundleDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-bundleDependencies.md"
			}
		],
		"flint": {
			"name": "bundleDependenciesPresence",
			"plugin": "packageJson",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-bundleDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-bundleDependencies.md"
			}
		],
		"flint": {
			"name": "bundleDependenciesValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-config",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-config.md"
			}
		],
		"flint": {
			"name": "configValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-cpu",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-cpu.md"
			}
		],
		"flint": {
			"name": "cpuValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-dependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-dependencies.md"
			}
		],
		"flint": {
			"name": "dependenciesPresence",
			"plugin": "packageJson",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-dependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-dependencies.md"
			}
		],
		"flint": {
			"name": "dependenciesValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/restrict-dependency-ranges",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/restrict-dependency-ranges.md"
			}
		],
		"flint": {
			"name": "dependencyRanges",
			"plugin": "packageJson",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/unique-dependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/unique-dependencies.md"
			}
		],
		"flint": {
			"name": "dependencyUniqueness",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-description",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-description.md"
			}
		],
		"flint": {
			"name": "descriptionPresence",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-description",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-description.md"
			}
		],
		"flint": {
			"name": "descriptionValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-devDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-devDependencies.md"
			}
		],
		"flint": {
			"name": "devDependenciesPresence",
			"plugin": "packageJson",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-devDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-devDependencies.md"
			}
		],
		"flint": {
			"name": "devDependenciesValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-directories",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-directories.md"
			}
		],
		"flint": {
			"name": "directoriesValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/no-empty-fields",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/no-empty-fields.md"
			}
		],
		"flint": {
			"name": "emptyFields",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-engines",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-engines.md"
			}
		],
		"flint": {
			"name": "enginesPresence",
			"plugin": "packageJson",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-exports",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-exports.md"
			}
		],
		"flint": {
			"name": "exportsValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-files",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-files.md"
			}
		],
		"flint": {
			"name": "filesPresence",
			"plugin": "packageJson",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/no-redundant-files",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/no-redundant-files.md"
			}
		],
		"flint": {
			"name": "filesRedundancy",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-files",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-files.md"
			}
		],
		"flint": {
			"name": "filesValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-homepage",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-homepage.md"
			}
		],
		"flint": {
			"name": "homepageValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-keywords",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-keywords.md"
			}
		],
		"flint": {
			"name": "keywordsPresence",
			"plugin": "packageJson",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-keywords",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-keywords.md"
			}
		],
		"flint": {
			"name": "keywordsValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/license-required",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/license-required.md"
			}
		],
		"flint": {
			"name": "licenseRequired",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-license",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-license.md"
			}
		],
		"flint": {
			"name": "licenseValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-main",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-main.md"
			}
		],
		"flint": {
			"name": "mainValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-man",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-man.md"
			}
		],
		"flint": {
			"name": "manValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-name",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-name.md"
			}
		],
		"flint": {
			"name": "namePresence",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-name",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-name.md"
			}
		],
		"flint": {
			"name": "nameValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-optionalDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-optionalDependencies.md"
			}
		],
		"flint": {
			"name": "optionalDependenciesPresence",
			"plugin": "packageJson",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-optionalDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-optionalDependencies.md"
			}
		],
		"flint": {
			"name": "optionalDependenciesValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-os",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-os.md"
			}
		],
		"flint": {
			"name": "osValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-peerDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-peerDependencies.md"
			}
		],
		"flint": {
			"name": "peerDependenciesPresence",
			"plugin": "packageJson",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-peerDependencies",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-peerDependencies.md"
			}
		],
		"flint": {
			"name": "peerDependenciesValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-private",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-private.md"
			}
		],
		"flint": {
			"name": "privateValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/order-properties",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/order-properties.md"
			}
		],
		"flint": {
			"name": "propertyOrdering",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-publishConfig",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-publishConfig.md"
			}
		],
		"flint": {
			"name": "publishConfigValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-repository-directory",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-repository-directory.md"
			}
		],
		"flint": {
			"name": "repositoryDirectoryValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/repository-shorthand",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/repository-shorthand.md"
			}
		],
		"flint": {
			"name": "repositoryShorthand",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-repository",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-repository.md"
			}
		],
		"flint": {
			"name": "repositoryValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-scripts",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-scripts.md"
			}
		],
		"flint": {
			"name": "scriptsValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-type",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-type.md"
			}
		],
		"flint": {
			"name": "typePresence",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/type-required",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/type-required.md"
			}
		],
		"flint": {
			"name": "typeRequired",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-types",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-types.md"
			}
		],
		"flint": {
			"name": "typesPresence",
			"plugin": "packageJson",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-type",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-type.md"
			}
		],
		"flint": {
			"name": "typeValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/require-version",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-version.md"
			}
		],
		"flint": {
			"name": "versionPresence",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-version",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-version.md"
			}
		],
		"flint": {
			"name": "versionValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/valid-workspaces",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-workspaces.md"
			}
		],
		"flint": {
			"name": "workspacesValidity",
			"plugin": "packageJson",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noDelete",
				"url": "https://biomejs.dev/linter/rules/noDelete"
			}
		],
		"flint": {
			"name": "deletes",
			"plugin": "performance",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noDynamicNamespaceImportAccess",
				"url": "https://biomejs.dev/linter/rules/noDynamicNamespaceImportAccess"
			}
		],
		"flint": {
			"name": "importedNamespaceDynamicAccesses",
			"plugin": "performance",
			"preset": "Logical"
		}
	},
	{
		"flint": {
			"name": "mappedObjectSpreads",
			"plugin": "performance",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/no-map-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-map-spread.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noAccumulatingSpread",
				"url": "https://biomejs.dev/linter/rules/noAccumulatingSpread"
			}
		],
		"flint": {
			"name": "spreadAccumulators",
			"plugin": "performance",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/no-accumulating-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-accumulating-spread.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useSortedClasses",
				"url": "https://biomejs.dev/linter/rules/useSortedClasses"
			}
		],
		"eslint": [
			{
				"name": "perfectionist/sort-classes",
				"url": "https://perfectionist.dev/rules/sort-classes"
			}
		],
		"flint": {
			"name": "classes",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-decorators",
				"url": "https://perfectionist.dev/rules/sort-decorators"
			}
		],
		"flint": {
			"name": "decorators",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-named-exports",
				"url": "https://perfectionist.dev/rules/sort-named-exports"
			}
		],
		"flint": {
			"name": "exports",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-heritage-clauses",
				"url": "https://perfectionist.dev/rules/sort-heritage-clauses"
			}
		],
		"flint": {
			"name": "heritageClauses",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-interfaces",
				"url": "https://perfectionist.dev/rules/sort-interfaces"
			}
		],
		"flint": {
			"name": "interfaces",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-intersection-types",
				"url": "https://perfectionist.dev/rules/sort-intersection-types"
			}
		],
		"flint": {
			"name": "intersectionTypes",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/sort-tags",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/sort-tags.md"
			}
		],
		"flint": {
			"name": "jsdocTags",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "json/sort-keys",
				"url": "https://github.com/eslint/json/blob/HEAD/docs/rules/sort-keys.md"
			},
			{
				"name": "jsonc/sort-keys",
				"url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/sort-keys.html"
			}
		],
		"flint": {
			"name": "jsonKeys",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-jsx-props",
				"url": "https://perfectionist.dev/rules/sort-jsx-props"
			}
		],
		"flint": {
			"name": "jsxProps",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-maps",
				"url": "https://perfectionist.dev/rules/sort-maps"
			}
		],
		"flint": {
			"name": "maps",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-modules",
				"url": "https://perfectionist.dev/rules/sort-modules"
			}
		],
		"flint": {
			"name": "modules",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "sort-keys",
				"url": "https://eslint.org/docs/latest/rules/sort-keys"
			},
			{
				"name": "perfectionist/sort-objects",
				"url": "https://perfectionist.dev/rules/sort-objects"
			}
		],
		"flint": {
			"name": "objects",
			"plugin": "sorting",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/sort-keys",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/sort-keys.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-object-types",
				"url": "https://perfectionist.dev/rules/sort-object-types"
			}
		],
		"flint": {
			"name": "objectTypes",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "package-json/sort-collections",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/sort-collections.md"
			}
		],
		"flint": {
			"name": "packageCollections",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/sort-flags",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/sort-flags.html"
			}
		],
		"flint": {
			"name": "regexFlags",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/sort-alternatives",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/sort-alternatives.html"
			}
		],
		"flint": {
			"name": "regexLists",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-sets",
				"url": "https://perfectionist.dev/rules/sort-sets"
			}
		],
		"flint": {
			"name": "sets",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-switch-case",
				"url": "https://perfectionist.dev/rules/sort-switch-case"
			}
		],
		"flint": {
			"name": "switchCases",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-union-types",
				"url": "https://perfectionist.dev/rules/sort-union-types"
			}
		],
		"flint": {
			"name": "unionTypes",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "perfectionist/sort-variable-declarations",
				"url": "https://perfectionist.dev/rules/sort-variable-declarations"
			}
		],
		"flint": {
			"name": "variableDeclarations",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/sort-keys",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/sort-keys.html"
			}
		],
		"flint": {
			"name": "ymlKeys",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/sort-sequence-values",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/sort-sequence-values.html"
			}
		],
		"flint": {
			"name": "ymlSequenceValues",
			"plugin": "sorting",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "cspell/spellchecker",
				"url": "https://github.com/streetsidesoftware/cspell/tree/main/packages/cspell-eslint-plugin"
			}
		],
		"flint": {
			"name": "spelling",
			"plugin": "cspell",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/prevent-abbreviations",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prevent-abbreviations.md"
			}
		],
		"flint": {
			"name": "abbreviations",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "accessor-pairs",
				"url": "https://eslint.org/docs/latest/rules/accessor-pairs"
			}
		],
		"flint": {
			"name": "accessorPairs",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-accessor-recursion",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-accessor-recursion.md"
			}
		],
		"flint": {
			"name": "accessorThisRecursion",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-accessor-recursion",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-accessor-recursion.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-argument",
				"url": "https://typescript-eslint.io/rules/no-unsafe-argument"
			}
		],
		"flint": {
			"name": "anyArguments",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-argument",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-argument.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-assignment",
				"url": "https://typescript-eslint.io/rules/no-unsafe-assignment"
			}
		],
		"flint": {
			"name": "anyAssignments",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-assignment",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-assignment.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-call",
				"url": "https://typescript-eslint.io/rules/no-unsafe-call"
			}
		],
		"flint": {
			"name": "anyCalls",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-call",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-call.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-member-access",
				"url": "https://typescript-eslint.io/rules/no-unsafe-member-access"
			}
		],
		"flint": {
			"name": "anyMemberAccess",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-member-access",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-member-access.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-return",
				"url": "https://typescript-eslint.io/rules/no-unsafe-return"
			}
		],
		"flint": {
			"name": "anyReturns",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-return.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noArguments",
				"url": "https://biomejs.dev/linter/rules/noArguments"
			}
		],
		"eslint": [
			{
				"name": "prefer-rest-params",
				"url": "https://eslint.org/docs/latest/rules/prefer-rest-params"
			}
		],
		"flint": {
			"name": "arguments",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-rest-params",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-rest-params.html"
			}
		]
	},
	{
		"flint": {
			"name": "argumentsArrayMethods",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/bad-array-method-on-arguments",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-array-method-on-arguments.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-caller",
				"url": "https://eslint.org/docs/latest/rules/no-caller"
			}
		],
		"flint": {
			"name": "argumentsProperties",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-caller",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-caller.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useIterableCallbackReturn",
				"url": "https://biomejs.dev/linter/rules/useIterableCallbackReturn"
			}
		],
		"eslint": [
			{
				"name": "array-callback-return",
				"url": "https://eslint.org/docs/latest/rules/array-callback-return"
			}
		],
		"flint": {
			"name": "arrayCallbackReturns",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/array-callback-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/array-callback-return.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useArrayLiterals",
				"url": "https://biomejs.dev/linter/rules/useArrayLiterals"
			}
		],
		"deno": [
			{
				"name": "no-array-constructor",
				"url": "https://docs.deno.com/lint/rules/no-array-constructor"
			}
		],
		"eslint": [
			{
				"name": "no-array-constructor",
				"url": "https://eslint.org/docs/latest/rules/no-array-constructor"
			},
			{
				"name": "@typescript-eslint/no-array-constructor",
				"url": "https://typescript-eslint.io/rules/no-array-constructor"
			},
			{
				"name": "unicorn/no-new-array",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-new-array.md"
			}
		],
		"flint": {
			"name": "arrayConstructors",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-array-constructor",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-array-constructor.html"
			},
			{
				"name": "unicorn/no-new-array",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-new-array.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-unnecessary-array-splice-count",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-unnecessary-array-splice-count.md"
			}
		],
		"flint": {
			"name": "arrayDeleteUnnecessaryCounts",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-unreadable-array-destructuring",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-unreadable-array-destructuring.md"
			}
		],
		"flint": {
			"name": "arrayDestructuringSparsity",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-unreadable-array-destructuring",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unreadable-array-destructuring.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-array-delete",
				"url": "https://typescript-eslint.io/rules/no-array-delete"
			}
		],
		"flint": {
			"name": "arrayElementDeletions",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-array-delete",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-array-delete.html"
			}
		]
	},
	{
		"flint": {
			"name": "arrayEmptyCallbackSlots",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/uninvoked-array-callback",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/uninvoked-array-callback.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/consistent-existence-index-check",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/consistent-existence-index-check.md"
			}
		],
		"flint": {
			"name": "arrayExistenceChecksConsistency",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/consistent-existence-index-check",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-existence-index-check.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-array-find",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-array-find.md"
			}
		],
		"flint": {
			"name": "arrayFilteredFinds",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-array-find",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-find.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-find",
				"url": "https://typescript-eslint.io/rules/prefer-find"
			}
		],
		"flint": {
			"name": "arrayFinds",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-magic-array-flat-depth",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-magic-array-flat-depth.md"
			}
		],
		"flint": {
			"name": "arrayFlatDepthMagicNumbers",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-magic-array-flat-depth",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-magic-array-flat-depth.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useFlatMap",
				"url": "https://biomejs.dev/linter/rules/useFlatMap"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-array-flat-map",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-array-flat-map.md"
			}
		],
		"flint": {
			"name": "arrayFlatMapMethods",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-array-flat-map",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-flat-map.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-array-flat",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-array-flat.md"
			}
		],
		"flint": {
			"name": "arrayFlatMethods",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-array-flat",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-flat.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-unnecessary-array-flat-depth",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-unnecessary-array-flat-depth.md"
			}
		],
		"flint": {
			"name": "arrayFlatUnnecessaryDepths",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/no-unnecessary-array-flat-depth",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unnecessary-array-flat-depth.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-includes",
				"url": "https://typescript-eslint.io/rules/prefer-includes"
			}
		],
		"flint": {
			"name": "arrayIncludes",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "@typescript-eslint/prefer-includes",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/@typescript-eslint/prefer-includes.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-includes",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-includes.md"
			}
		],
		"flint": {
			"name": "arrayIncludesMethods",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"biome": [
			{
				"name": "useIndexOf",
				"url": "https://biomejs.dev/linter/rules/useIndexOf"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-array-index-of",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-array-index-of.md"
			}
		],
		"flint": {
			"name": "arrayIndexOfMethods",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-array-index-of",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-index-of.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/require-array-join-separator",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/require-array-join-separator.md"
			}
		],
		"flint": {
			"name": "arrayJoinSeparators",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/require-array-join-separator",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/require-array-join-separator.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noForEach",
				"url": "https://biomejs.dev/linter/rules/noForEach"
			},
			{
				"name": "useForOf",
				"url": "https://biomejs.dev/linter/rules/useForOf"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-for-of",
				"url": "https://typescript-eslint.io/rules/prefer-for-of"
			},
			{
				"name": "unicorn/no-array-for-each",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-array-for-each.md"
			},
			{
				"name": "unicorn/no-for-loop",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-for-loop.md"
			}
		],
		"flint": {
			"name": "arrayLoops",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-for-of",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-for-of.html"
			},
			{
				"name": "unicorn/no-array-for-each",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-array-for-each.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noFlatMapIdentity",
				"url": "https://biomejs.dev/linter/rules/noFlatMapIdentity"
			}
		],
		"flint": {
			"name": "arrayMapIdentities",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-array-method-this-argument",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-array-method-this-argument.md"
			}
		],
		"flint": {
			"name": "arrayMethodThisArguments",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-array-method-this-argument",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-array-method-this-argument.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-array-reverse",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-array-reverse.md"
			}
		],
		"flint": {
			"name": "arrayMutableReverses",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-array-sort",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-array-sort.md"
			}
		],
		"flint": {
			"name": "arrayMutableSorts",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-array-reduce",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-array-reduce.md"
			}
		],
		"flint": {
			"name": "arrayReducers",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-array-reduce",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-array-reduce.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-unnecessary-slice-end",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-unnecessary-slice-end.md"
			}
		],
		"flint": {
			"name": "arraySliceUnnecessaryEnd",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/no-length-as-slice-end",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-length-as-slice-end.html"
			},
			{
				"name": "unicorn/no-unnecessary-slice-end",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unnecessary-slice-end.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-array-some",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-array-some.md"
			}
		],
		"flint": {
			"name": "arraySomeMethods",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-array-some",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-some.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/require-array-sort-compare",
				"url": "https://typescript-eslint.io/rules/require-array-sort-compare"
			}
		],
		"flint": {
			"name": "arraySortCompareArgument",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "typescript/require-array-sort-compare",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/require-array-sort-compare.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/consistent-empty-array-spread",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/consistent-empty-array-spread.md"
			}
		],
		"flint": {
			"name": "arrayTernarySpreadingConsistency",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/consistent-empty-array-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-empty-array-spread.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useConsistentArrayType",
				"url": "https://biomejs.dev/linter/rules/useConsistentArrayType"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/array-type",
				"url": "https://typescript-eslint.io/rules/array-type"
			}
		],
		"flint": {
			"name": "arrayTypes",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/array-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/array-type.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-useless-length-check",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-useless-length-check.md"
			}
		],
		"flint": {
			"name": "arrayUnnecessaryLengthChecks",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-useless-length-check",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-length-check.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "arrow-body-style",
				"url": "https://eslint.org/docs/latest/rules/arrow-body-style"
			}
		],
		"flint": {
			"name": "arrowBodyBraces",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/arrow-body-style",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/arrow-body-style.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useArrowFunction",
				"url": "https://biomejs.dev/linter/rules/useArrowFunction"
			}
		],
		"eslint": [
			{
				"name": "prefer-arrow-callback",
				"url": "https://eslint.org/docs/latest/rules/prefer-arrow-callback"
			}
		],
		"flint": {
			"name": "arrowCallbacks",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "useAsConstAssertion",
				"url": "https://biomejs.dev/linter/rules/useAsConstAssertion"
			}
		],
		"deno": [
			{
				"name": "prefer-as-const",
				"url": "https://docs.deno.com/lint/rules/prefer-as-const"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-as-const",
				"url": "https://typescript-eslint.io/rules/prefer-as-const"
			}
		],
		"flint": {
			"name": "asConstAssertions",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-as-const",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-as-const.html"
			}
		]
	},
	{
		"flint": {
			"name": "assignmentOperationRefactors",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/misrefactored-assign-op",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/misrefactored-assign-op.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "logical-assignment-operators",
				"url": "https://eslint.org/docs/latest/rules/logical-assignment-operators"
			}
		],
		"flint": {
			"name": "assignmentOperatorShorthands",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"flint": {
			"name": "asyncAwaitStatements",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/no-async-await",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-async-await.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useAwait",
				"url": "https://biomejs.dev/linter/rules/useAwait"
			}
		],
		"deno": [
			{
				"name": "require-await",
				"url": "https://docs.deno.com/lint/rules/require-await"
			}
		],
		"eslint": [
			{
				"name": "require-await",
				"url": "https://eslint.org/docs/latest/rules/require-await"
			},
			{
				"name": "@typescript-eslint/require-await",
				"url": "https://typescript-eslint.io/rules/require-await"
			}
		],
		"flint": {
			"name": "asyncFunctionAwaits",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/require-await",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/require-await.html"
			},
			{
				"name": "typescript/require-await",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/require-await.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noAsyncPromiseExecutor",
				"url": "https://biomejs.dev/linter/rules/noAsyncPromiseExecutor"
			}
		],
		"deno": [
			{
				"name": "no-async-promise-executor",
				"url": "https://docs.deno.com/lint/rules/no-async-promise-executor"
			}
		],
		"eslint": [
			{
				"name": "no-async-promise-executor",
				"url": "https://eslint.org/docs/latest/rules/no-async-promise-executor"
			}
		],
		"flint": {
			"implemented": true,
			"name": "asyncPromiseExecutors",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-async-promise-executor",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-async-promise-executor.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-useless-promise-resolve-reject",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-useless-promise-resolve-reject.md"
			}
		],
		"flint": {
			"name": "asyncUnnecessaryPromiseWrappers",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-useless-promise-resolve-reject",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-promise-resolve-reject.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useAtIndex",
				"url": "https://biomejs.dev/linter/rules/useAtIndex"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-at",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-at.md"
			}
		],
		"flint": {
			"name": "atAccesses",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "require-atomic-updates",
				"url": "https://eslint.org/docs/latest/rules/require-atomic-updates"
			}
		],
		"flint": {
			"name": "atomicUpdates",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-await-in-promise-methods",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-await-in-promise-methods.md"
			}
		],
		"flint": {
			"name": "awaitInsidePromiseMethods",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-await-in-promise-methods",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-await-in-promise-methods.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-await-expression-member",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-await-expression-member.md"
			}
		],
		"flint": {
			"name": "awaitMemberAccesses",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-await-expression-member",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-await-expression-member.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/await-thenable",
				"url": "https://typescript-eslint.io/rules/await-thenable"
			},
			{
				"name": "unicorn/no-unnecessary-await",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-unnecessary-await.md"
			}
		],
		"flint": {
			"name": "awaitThenable",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/await-thenable",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/await-thenable.html"
			},
			{
				"name": "unicorn/no-unnecessary-await",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unnecessary-await.html"
			}
		]
	},
	{
		"flint": {
			"name": "barrelFiles",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/no-barrel-file",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-barrel-file.html"
			}
		]
	},
	{
		"flint": {
			"name": "bitwiseOperatorLogic",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/bad-bitwise-operator",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-bitwise-operator.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noBitwiseOperators",
				"url": "https://biomejs.dev/linter/rules/noBitwiseOperators"
			}
		],
		"eslint": [
			{
				"name": "no-bitwise",
				"url": "https://eslint.org/docs/latest/rules/no-bitwise"
			}
		],
		"flint": {
			"name": "bitwiseOperators",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-bitwise",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-bitwise.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useBlockStatements",
				"url": "https://biomejs.dev/linter/rules/useBlockStatements"
			}
		],
		"eslint": [
			{
				"name": "curly",
				"url": "https://eslint.org/docs/latest/rules/curly"
			}
		],
		"flint": {
			"name": "blockStatements",
			"plugin": "ts",
			"preset": "Not implementing",
			"strictness": "Strict"
		},
		"notes": "Superseded by prettier-plugin-curly",
		"oxlint": [
			{
				"name": "eslint/curly",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/curly.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "no-boolean-literal-for-arguments",
				"url": "https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments"
			}
		],
		"flint": {
			"name": "booleanLiteralParameterComments",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-native-coercion-functions",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-native-coercion-functions.md"
			}
		],
		"flint": {
			"name": "builtinCoercions",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-native-coercion-functions",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-native-coercion-functions.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noInvalidBuiltinInstantiation",
				"url": "https://biomejs.dev/linter/rules/noInvalidBuiltinInstantiation"
			}
		],
		"eslint": [
			{
				"name": "unicorn/new-for-builtins",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/new-for-builtins.md"
			}
		],
		"flint": {
			"name": "builtinConstructorNews",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/new-for-builtins",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/new-for-builtins.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-prototype-methods",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-prototype-methods.md"
			}
		],
		"flint": {
			"name": "builtinPrototypeMethodAccesses",
			"plugin": "ts",
			"preset": "Not implementing",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-prototype-methods",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-prototype-methods.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "new-cap",
				"url": "https://eslint.org/docs/latest/rules/new-cap"
			}
		],
		"flint": {
			"name": "capitalizedConstructors",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/new-cap",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/new-cap.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noSwitchDeclarations",
				"url": "https://biomejs.dev/linter/rules/noSwitchDeclarations"
			}
		],
		"deno": [
			{
				"name": "no-case-declarations",
				"url": "https://docs.deno.com/lint/rules/no-case-declarations"
			}
		],
		"eslint": [
			{
				"name": "no-case-declarations",
				"url": "https://eslint.org/docs/latest/rules/no-case-declarations"
			}
		],
		"flint": {
			"implemented": true,
			"name": "caseDeclarations",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-case-declarations",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-case-declarations.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noDuplicateCase",
				"url": "https://biomejs.dev/linter/rules/noDuplicateCase"
			}
		],
		"deno": [
			{
				"name": "no-duplicate-case",
				"url": "https://docs.deno.com/lint/rules/no-duplicate-case"
			}
		],
		"eslint": [
			{
				"name": "no-duplicate-case",
				"url": "https://eslint.org/docs/latest/rules/no-duplicate-case"
			}
		],
		"flint": {
			"name": "caseDuplicates",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-duplicate-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-duplicate-case.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noFallthroughSwitchClause",
				"url": "https://biomejs.dev/linter/rules/noFallthroughSwitchClause"
			}
		],
		"deno": [
			{
				"name": "no-fallthrough",
				"url": "https://docs.deno.com/lint/rules/no-fallthrough"
			}
		],
		"eslint": [
			{
				"name": "no-fallthrough",
				"url": "https://eslint.org/docs/latest/rules/no-fallthrough"
			}
		],
		"flint": {
			"name": "caseFallthroughs",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-fallthrough",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-fallthrough.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/use-unknown-in-catch-callback-variable",
				"url": "https://typescript-eslint.io/rules/use-unknown-in-catch-callback-variable"
			}
		],
		"flint": {
			"name": "catchCallbackTypes",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/use-unknown-in-catch-callback-variable",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/use-unknown-in-catch-callback-variable.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "preserve-caught-error",
				"url": "https://eslint.org/docs/latest/rules/preserve-caught-error"
			}
		],
		"flint": {
			"name": "caughtErrorCauses",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/catch-error-name",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/catch-error-name.md"
			}
		],
		"flint": {
			"name": "caughtVariableNames",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/catch-error-name",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/catch-error-name.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-multi-assign",
				"url": "https://eslint.org/docs/latest/rules/no-multi-assign"
			}
		],
		"flint": {
			"implemented": true,
			"name": "chainedAssignments",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-multi-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-multi-assign.html"
			}
		]
	},
	{
		"flint": {
			"name": "charAtComparisons",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/bad-char-at-comparison",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-char-at-comparison.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noClassAssign",
				"url": "https://biomejs.dev/linter/rules/noClassAssign"
			}
		],
		"deno": [
			{
				"name": "no-case-assign",
				"url": "https://docs.deno.com/lint/rules/no-case-assign"
			}
		],
		"eslint": [
			{
				"name": "no-class-assign",
				"url": "https://eslint.org/docs/latest/rules/no-class-assign"
			}
		],
		"flint": {
			"implemented": true,
			"name": "classAssignments",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-class-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-class-assign.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-class-fields",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-class-fields.md"
			}
		],
		"flint": {
			"name": "classFieldDeclarations",
			"plugin": "ts",
			"preset": "Untyped"
		}
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/class-literal-property-style",
				"url": "https://typescript-eslint.io/rules/class-literal-property-style"
			}
		],
		"flint": {
			"name": "classLiteralProperties",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"biome": [
			{
				"name": "noDuplicateClassMembers",
				"url": "https://biomejs.dev/linter/rules/noDuplicateClassMembers"
			}
		],
		"deno": [
			{
				"name": "no-dupe-class-members",
				"url": "https://docs.deno.com/lint/rules/no-dupe-class-members"
			}
		],
		"eslint": [
			{
				"name": "no-dupe-class-members",
				"url": "https://eslint.org/docs/latest/rules/no-dupe-class-members"
			},
			{
				"name": "@typescript-eslint/no-dupe-class-members",
				"url": "https://typescript-eslint.io/rules/no-dupe-class-members"
			}
		],
		"flint": {
			"name": "classMemberDuplicates",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-dupe-class-members",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-dupe-class-members.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "class-methods-use-this",
				"url": "https://eslint.org/docs/latest/rules/class-methods-use-this"
			},
			{
				"name": "@typescript-eslint/class-methods-use-this",
				"url": "https://typescript-eslint.io/rules/class-methods-use-this"
			}
		],
		"flint": {
			"name": "classMethodsThis",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-single-call",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-single-call.md"
			}
		],
		"flint": {
			"name": "combinedPushes",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"notes": "Just for Array#push(); the others would be their own rules"
	},
	{
		"eslint": [
			{
				"name": "capitalized-comments",
				"url": "https://eslint.org/docs/latest/rules/capitalized-comments"
			}
		],
		"flint": {
			"name": "commentCapitalization",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "no-warning-comments",
				"url": "https://eslint.org/docs/latest/rules/no-warning-comments"
			}
		],
		"flint": {
			"name": "commentWarnings",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"flint": {
			"name": "comparisonSequences",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Handled by TypeScript / otherwise is stylistic"
	},
	{
		"biome": [
			{
				"name": "noAssignInExpressions",
				"url": "https://biomejs.dev/linter/rules/noAssignInExpressions"
			}
		],
		"deno": [
			{
				"name": "no-cond-assign",
				"url": "https://docs.deno.com/lint/rules/no-cond-assign"
			}
		],
		"eslint": [
			{
				"name": "no-cond-assign",
				"url": "https://eslint.org/docs/latest/rules/no-cond-assign"
			}
		],
		"flint": {
			"name": "conditionalAssignments",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Superseded by unnecessaryConditions",
		"oxlint": [
			{
				"name": "eslint/no-cond-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-cond-assign.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noNegationElse",
				"url": "https://biomejs.dev/linter/rules/noNegationElse"
			}
		],
		"eslint": [
			{
				"name": "no-negated-condition",
				"url": "https://eslint.org/docs/latest/rules/no-negated-condition"
			},
			{
				"name": "unicorn/no-negated-condition",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-negated-condition.md"
			}
		],
		"flint": {
			"name": "conditionNegations",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-negated-condition",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-negated-condition.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noYodaExpression",
				"url": "https://biomejs.dev/linter/rules/noYodaExpression"
			}
		],
		"eslint": [
			{
				"name": "yoda",
				"url": "https://eslint.org/docs/latest/rules/yoda"
			}
		],
		"flint": {
			"name": "conditionOrdering",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/yoda",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/yoda.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noExtraNonNullAssertion",
				"url": "https://biomejs.dev/linter/rules/noExtraNonNullAssertion"
			}
		],
		"deno": [
			{
				"name": "no-extra-non-null-assertion",
				"url": "https://docs.deno.com/lint/rules/no-extra-non-null-assertion"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-extra-non-null-assertion",
				"url": "https://typescript-eslint.io/rules/no-extra-non-null-assertion"
			}
		],
		"flint": {
			"implemented": true,
			"name": "consecutiveNonNullAssertions",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/no-extra-non-null-assertion",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-extra-non-null-assertion.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "consistent-return",
				"url": "https://eslint.org/docs/latest/rules/consistent-return"
			},
			{
				"name": "@typescript-eslint/consistent-return",
				"url": "https://typescript-eslint.io/rules/consistent-return"
			}
		],
		"flint": {
			"name": "consistentReturns",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noConsole",
				"url": "https://biomejs.dev/linter/rules/noConsole"
			}
		],
		"deno": [
			{
				"name": "no-console",
				"url": "https://docs.deno.com/lint/rules/no-console"
			}
		],
		"eslint": [
			{
				"name": "no-console",
				"url": "https://eslint.org/docs/latest/rules/no-console"
			}
		],
		"flint": {
			"name": "consoleCalls",
			"plugin": "ts",
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "eslint/no-console",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-console.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noConstAssign",
				"url": "https://biomejs.dev/linter/rules/noConstAssign"
			}
		],
		"deno": [
			{
				"name": "no-const-assign",
				"url": "https://docs.deno.com/lint/rules/no-const-assign"
			}
		],
		"eslint": [
			{
				"name": "no-const-assign",
				"url": "https://eslint.org/docs/latest/rules/no-const-assign"
			}
		],
		"flint": {
			"implemented": true,
			"name": "constantAssignments",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-const-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-const-assign.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noConstantBinaryExpressions",
				"url": "https://biomejs.dev/linter/rules/noConstantBinaryExpressions"
			}
		],
		"eslint": [
			{
				"name": "no-constant-binary-expression",
				"url": "https://eslint.org/docs/latest/rules/no-constant-binary-expression"
			}
		],
		"flint": {
			"name": "constantBinaryExpressions",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Superseded by unnecessaryConditions",
		"oxlint": [
			{
				"name": "eslint/no-constant-binary-expression",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-constant-binary-expression.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noConstantCondition",
				"url": "https://biomejs.dev/linter/rules/noConstantCondition"
			}
		],
		"deno": [
			{
				"name": "no-constant-condition",
				"url": "https://docs.deno.com/lint/rules/no-constant-condition"
			}
		],
		"eslint": [
			{
				"name": "no-constant-condition",
				"url": "https://eslint.org/docs/latest/rules/no-constant-condition"
			}
		],
		"flint": {
			"name": "constantConditions",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Superseded by unnecessaryConditions",
		"oxlint": [
			{
				"name": "eslint/no-constant-condition",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-constant-condition.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noConstEnum",
				"url": "https://biomejs.dev/linter/rules/noConstEnum"
			}
		],
		"flint": {
			"name": "constEnums",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noConstructorReturn",
				"url": "https://biomejs.dev/linter/rules/noConstructorReturn"
			}
		],
		"eslint": [
			{
				"name": "no-constructor-return",
				"url": "https://eslint.org/docs/latest/rules/no-constructor-return"
			}
		],
		"flint": {
			"implemented": true,
			"name": "constructorReturns",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-constructor-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-constructor-return.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noInvalidConstructorSuper",
				"url": "https://biomejs.dev/linter/rules/noInvalidConstructorSuper"
			}
		],
		"deno": [
			{
				"name": "constructor-super",
				"url": "https://docs.deno.com/lint/rules/constructor-super"
			}
		],
		"eslint": [
			{
				"name": "constructor-super",
				"url": "https://eslint.org/docs/latest/rules/constructor-super"
			}
		],
		"flint": {
			"name": "constructorSupers",
			"plugin": "ts",
			"preset": "Untyped"
		}
	},
	{
		"biome": [
			{
				"name": "useConst",
				"url": "https://biomejs.dev/linter/rules/useConst"
			}
		],
		"deno": [
			{
				"name": "prefer-const",
				"url": "https://docs.deno.com/lint/rules/prefer-const"
			}
		],
		"eslint": [
			{
				"name": "prefer-const",
				"url": "https://eslint.org/docs/latest/rules/prefer-const"
			}
		],
		"flint": {
			"name": "constVariables",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "no-continue",
				"url": "https://eslint.org/docs/latest/rules/no-continue"
			}
		],
		"flint": {
			"name": "continues",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-continue",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-continue.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/consistent-date-clone",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/consistent-date-clone.md"
			}
		],
		"flint": {
			"name": "dateConstructorClones",
			"plugin": "ts",
			"preset": "Logical"
		},
		"notes": "unicorn/consistent-date-clone"
	},
	{
		"biome": [
			{
				"name": "useDateNow",
				"url": "https://biomejs.dev/linter/rules/useDateNow"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-date-now",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-date-now.md"
			}
		],
		"flint": {
			"name": "dateNowTimestamps",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-date-now",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-date-now.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noDebugger",
				"url": "https://biomejs.dev/linter/rules/noDebugger"
			}
		],
		"deno": [
			{
				"name": "no-debugger",
				"url": "https://docs.deno.com/lint/rules/no-debugger"
			}
		],
		"eslint": [
			{
				"name": "no-debugger",
				"url": "https://eslint.org/docs/latest/rules/no-debugger"
			}
		],
		"flint": {
			"implemented": true,
			"name": "debuggerStatements",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-debugger",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-debugger.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useDefaultSwitchClauseLast",
				"url": "https://biomejs.dev/linter/rules/useDefaultSwitchClauseLast"
			}
		],
		"eslint": [
			{
				"name": "default-case-last",
				"url": "https://eslint.org/docs/latest/rules/default-case-last"
			}
		],
		"flint": {
			"implemented": true,
			"name": "defaultCaseLast",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/default-case-last",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/default-case-last.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useDefaultSwitchClause",
				"url": "https://biomejs.dev/linter/rules/useDefaultSwitchClause"
			}
		],
		"eslint": [
			{
				"name": "default-case",
				"url": "https://eslint.org/docs/latest/rules/default-case"
			}
		],
		"flint": {
			"name": "defaultCases",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/default-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/default-case.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-named-default",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-named-default.md"
			}
		],
		"flint": {
			"name": "defaultImportRenames",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/no-named-default",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-named-default.html"
			},
			{
				"name": "import/no-named-as-default",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-named-as-default.html"
			},
			{
				"name": "import/no-named-as-default-member",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-named-as-default-member.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useDefaultParameterLast",
				"url": "https://biomejs.dev/linter/rules/useDefaultParameterLast"
			}
		],
		"deno": [
			{
				"name": "default-param-last",
				"url": "https://docs.deno.com/lint/rules/default-param-last"
			}
		],
		"eslint": [
			{
				"name": "default-param-last",
				"url": "https://eslint.org/docs/latest/rules/default-param-last"
			},
			{
				"name": "@typescript-eslint/default-param-last",
				"url": "https://typescript-eslint.io/rules/default-param-last"
			}
		],
		"flint": {
			"name": "defaultParameterLast",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/default-param-last",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/default-param-last.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-default-parameters",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-default-parameters.md"
			}
		],
		"flint": {
			"name": "defaultParameterReassignments",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-deprecated",
				"url": "https://typescript-eslint.io/rules/no-deprecated"
			}
		],
		"flint": {
			"name": "deprecated",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "prefer-destructuring",
				"url": "https://eslint.org/docs/latest/rules/prefer-destructuring"
			},
			{
				"name": "@typescript-eslint/prefer-destructuring",
				"url": "https://typescript-eslint.io/rules/prefer-destructuring"
			}
		],
		"flint": {
			"name": "destructuring",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-destructuring",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-destructuring.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/consistent-destructuring",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/consistent-destructuring.md"
			}
		],
		"flint": {
			"name": "destructuringConsistency",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-abusive-eslint-disable",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-abusive-eslint-disable.md"
			}
		],
		"flint": {
			"name": "directiveDisableSelectors",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Core requires explicit disables",
		"oxlint": [
			{
				"name": "unicorn/no-abusive-eslint-disable",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-abusive-eslint-disable.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-duplicate-disable",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveDuplicateDisables",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Core detects duplicate disables"
	},
	{
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-aggregating-enable",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveMisleadingEnables",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Core requires explicit enables"
	},
	{
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/disable-enable-pair",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directivePairs",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/require-description",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveRequireDescriptions",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-restricted-disable",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveRestrictedDisables",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"deno": [
			{
				"name": "ban-untagged-ignore",
				"url": "https://docs.deno.com/lint/rules/ban-untagged-ignore"
			}
		],
		"flint": {
			"name": "directiveSelectors",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Handled by Flint core"
	},
	{
		"deno": [
			{
				"name": "ban-unknown-rule-code",
				"url": "https://docs.deno.com/lint/rules/ban-unknown-rule-code"
			}
		],
		"flint": {
			"name": "directiveUnknownRules",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Handled by Flint core"
	},
	{
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-unlimited-disable",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveUnlimitedDisables",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Core requires explicit disables"
	},
	{
		"deno": [
			{
				"name": "ban-unused-ignore",
				"url": "https://docs.deno.com/lint/rules/ban-unused-ignore"
			}
		],
		"flint": {
			"name": "directiveUnused",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Handled by Flint core"
	},
	{
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-unused-disable",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveUnusedDisables",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Core detects unused disables"
	},
	{
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-unused-enable",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "directiveUnusedEnables",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Core detects unused enables"
	},
	{
		"biome": [
			{
				"name": "noDuplicateParameters",
				"url": "https://biomejs.dev/linter/rules/noDuplicateParameters"
			}
		],
		"deno": [
			{
				"name": "no-dupe-args",
				"url": "https://docs.deno.com/lint/rules/no-dupe-args"
			}
		],
		"eslint": [
			{
				"name": "no-dupe-args",
				"url": "https://eslint.org/docs/latest/rules/no-dupe-args"
			}
		],
		"flint": {
			"implemented": true,
			"name": "duplicateArguments",
			"plugin": "ts",
			"preset": "Untyped"
		}
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-dynamic-delete",
				"url": "https://typescript-eslint.io/rules/no-dynamic-delete"
			}
		],
		"flint": {
			"name": "dynamicDeletes",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-dynamic-delete",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-dynamic-delete.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noDuplicateElseIf",
				"url": "https://biomejs.dev/linter/rules/noDuplicateElseIf"
			}
		],
		"eslint": [
			{
				"name": "no-dupe-else-if",
				"url": "https://eslint.org/docs/latest/rules/no-dupe-else-if"
			}
		],
		"flint": {
			"implemented": true,
			"name": "elseIfDuplicates",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-dupe-else-if",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-dupe-else-if.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUselessElse",
				"url": "https://biomejs.dev/linter/rules/noUselessElse"
			}
		],
		"eslint": [
			{
				"name": "no-else-return",
				"url": "https://eslint.org/docs/latest/rules/no-else-return"
			}
		],
		"flint": {
			"name": "elseReturns",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "eslint/no-else-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-else-return.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noEmptyBlockStatements",
				"url": "https://biomejs.dev/linter/rules/noEmptyBlockStatements"
			}
		],
		"deno": [
			{
				"name": "no-empty",
				"url": "https://docs.deno.com/lint/rules/no-empty"
			}
		],
		"eslint": [
			{
				"name": "no-empty",
				"url": "https://eslint.org/docs/latest/rules/no-empty"
			}
		],
		"flint": {
			"name": "emptyBlocks",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-empty",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noEmptyPattern",
				"url": "https://biomejs.dev/linter/rules/noEmptyPattern"
			}
		],
		"deno": [
			{
				"name": "no-empty-pattern",
				"url": "https://docs.deno.com/lint/rules/no-empty-pattern"
			}
		],
		"eslint": [
			{
				"name": "no-empty-pattern",
				"url": "https://eslint.org/docs/latest/rules/no-empty-pattern"
			}
		],
		"flint": {
			"name": "emptyDestructures",
			"plugin": "ts",
			"preset": "Logical",
			"implemented": true
		},
		"oxlint": [
			{
				"name": "eslint/no-empty-pattern",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty-pattern.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "no-empty-enum",
				"url": "https://docs.deno.com/lint/rules/no-empty-enum"
			}
		],
		"flint": {
			"name": "emptyEnums",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noUselessEmptyExport",
				"url": "https://biomejs.dev/linter/rules/noUselessEmptyExport"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-useless-empty-export",
				"url": "https://typescript-eslint.io/rules/no-useless-empty-export"
			}
		],
		"flint": {
			"name": "emptyExports",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-useless-empty-export",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-useless-empty-export.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-empty-file",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-empty-file.md"
			}
		],
		"flint": {
			"name": "emptyFiles",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-empty-file",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-empty-file.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noEmptyBlockStatements",
				"url": "https://biomejs.dev/linter/rules/noEmptyBlockStatements"
			}
		],
		"eslint": [
			{
				"name": "no-empty-function",
				"url": "https://eslint.org/docs/latest/rules/no-empty-function"
			},
			{
				"name": "@typescript-eslint/no-empty-function",
				"url": "https://typescript-eslint.io/rules/no-empty-function"
			}
		],
		"flint": {
			"name": "emptyFunctions",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "eslint/no-empty-function",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty-function.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/require-module-attributes",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/require-module-attributes.md"
			}
		],
		"flint": {
			"name": "emptyModuleAttributes",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"biome": [
			{
				"name": "noBannedTypes",
				"url": "https://biomejs.dev/linter/rules/noBannedTypes"
			}
		],
		"deno": [
			{
				"name": "ban-types",
				"url": "https://docs.deno.com/lint/rules/ban-types"
			},
			{
				"name": "no-empty-interface",
				"url": "https://docs.deno.com/lint/rules/no-empty-interface"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-empty-object-type",
				"url": "https://typescript-eslint.io/rules/no-empty-object-type"
			}
		],
		"flint": {
			"name": "emptyObjectTypes",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/ban-types",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/ban-types.html"
			},
			{
				"name": "typescript/no-empty-object-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-empty-object-type.html"
			},
			{
				"name": "typescript/no-empty-interface",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-empty-interface.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noEmptyBlockStatements",
				"url": "https://biomejs.dev/linter/rules/noEmptyBlockStatements"
			}
		],
		"eslint": [
			{
				"name": "no-empty-static-block",
				"url": "https://eslint.org/docs/latest/rules/no-empty-static-block"
			}
		],
		"flint": {
			"implemented": true,
			"name": "emptyStaticBlocks",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-empty-static-block",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty-static-block.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noEmptyTypeParameters",
				"url": "https://biomejs.dev/linter/rules/noEmptyTypeParameters"
			}
		],
		"flint": {
			"name": "emptyTypeParameterLists",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-ternary",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-ternary.md"
			}
		],
		"flint": {
			"name": "endingTernaryIfElses",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "useEnumInitializers",
				"url": "https://biomejs.dev/linter/rules/useEnumInitializers"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-enum-initializers",
				"url": "https://typescript-eslint.io/rules/prefer-enum-initializers"
			}
		],
		"flint": {
			"name": "enumInitializers",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-enum-initializers",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-enum-initializers.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useLiteralEnumMembers",
				"url": "https://biomejs.dev/linter/rules/useLiteralEnumMembers"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-literal-enum-member",
				"url": "https://typescript-eslint.io/rules/prefer-literal-enum-member"
			}
		],
		"flint": {
			"name": "enumMemberLiterals",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-literal-enum-member",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-literal-enum-member.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-misused-spread",
				"url": "https://typescript-eslint.io/rules/no-misused-spread"
			}
		],
		"flint": {
			"name": "enumMixedValues",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-misused-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-misused-spread.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "eslint-plugin/no-identical-tests",
				"url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/blob/HEAD/docs/rules/no-identical-tests.md"
			}
		],
		"flint": {
			"name": "duplicateTestCases",
			"plugin": "flint",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-mixed-enums",
				"url": "https://typescript-eslint.io/rules/no-mixed-enums"
			}
		],
		"flint": {
			"name": "enumValueConsistency",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-mixed-enums",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-mixed-enums.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-duplicate-enum-values",
				"url": "https://typescript-eslint.io/rules/no-duplicate-enum-values"
			}
		],
		"flint": {
			"name": "enumValueDuplicates",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-duplicate-enum-values",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-duplicate-enum-values.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-negation-in-equality-check",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-negation-in-equality-check.md"
			}
		],
		"flint": {
			"name": "equalityOperatorNegations",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-negation-in-equality-check",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-negation-in-equality-check.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noDoubleEquals",
				"url": "https://biomejs.dev/linter/rules/noDoubleEquals"
			}
		],
		"deno": [
			{
				"name": "eqeqeq",
				"url": "https://docs.deno.com/lint/rules/eqeqeq"
			}
		],
		"eslint": [
			{
				"name": "eqeqeq",
				"url": "https://eslint.org/docs/latest/rules/eqeqeq"
			}
		],
		"flint": {
			"name": "equalityOperators",
			"plugin": "ts",
			"preset": "Logical"
		},
		"notes": "Default ESLint's \"smart\" to true",
		"oxlint": [
			{
				"name": "eslint/eqeqeq",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/eqeqeq.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useErrorMessage",
				"url": "https://biomejs.dev/linter/rules/useErrorMessage"
			}
		],
		"eslint": [
			{
				"name": "unicorn/error-message",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/error-message.md"
			}
		],
		"flint": {
			"name": "errorMessages",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/error-message",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/error-message.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/custom-error-definition",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/custom-error-definition.md"
			}
		],
		"flint": {
			"name": "errorSubclassProperties",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-useless-error-capture-stack-trace",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-useless-error-capture-stack-trace.md"
			}
		],
		"flint": {
			"name": "errorUnnecessaryCaptureStackTraces",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/escape-case",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/escape-case.md"
			}
		],
		"flint": {
			"name": "escapeSequenceCasing",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/escape-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/escape-case.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noGlobalEval",
				"url": "https://biomejs.dev/linter/rules/noGlobalEval"
			}
		],
		"deno": [
			{
				"name": "no-eval",
				"url": "https://docs.deno.com/lint/rules/no-eval"
			}
		],
		"eslint": [
			{
				"name": "no-eval",
				"url": "https://eslint.org/docs/latest/rules/no-eval"
			}
		],
		"flint": {
			"name": "evals",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-eval",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-eval.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noImplicitAnyLet",
				"url": "https://biomejs.dev/linter/rules/noImplicitAnyLet"
			}
		],
		"flint": {
			"name": "evolvingVariableTypes",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noCatchAssign",
				"url": "https://biomejs.dev/linter/rules/noCatchAssign"
			}
		],
		"deno": [
			{
				"name": "no-ex-assign",
				"url": "https://docs.deno.com/lint/rules/no-ex-assign"
			}
		],
		"eslint": [
			{
				"name": "no-ex-assign",
				"url": "https://eslint.org/docs/latest/rules/no-ex-assign"
			}
		],
		"flint": {
			"implemented": true,
			"name": "exceptionAssignments",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-ex-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-ex-assign.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noExplicitAny",
				"url": "https://biomejs.dev/linter/rules/noExplicitAny"
			}
		],
		"deno": [
			{
				"name": "no-explicit-any",
				"url": "https://docs.deno.com/lint/rules/no-explicit-any"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-explicit-any",
				"url": "https://typescript-eslint.io/rules/no-explicit-any"
			}
		],
		"flint": {
			"name": "explicitAnys",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-explicit-any",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-explicit-any.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useExponentiationOperator",
				"url": "https://biomejs.dev/linter/rules/useExponentiationOperator"
			}
		],
		"eslint": [
			{
				"name": "prefer-exponentiation-operator",
				"url": "https://eslint.org/docs/latest/rules/prefer-exponentiation-operator"
			}
		],
		"flint": {
			"name": "exponentiationOperators",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-exponentiation-operator",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-exponentiation-operator.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/prefer-default-export",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/prefer-default-export.md"
			}
		],
		"flint": {
			"name": "exportDefault",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/prefer-default-export",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/prefer-default-export.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noExportedImports",
				"url": "https://biomejs.dev/linter/rules/noExportedImports"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-export-from",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-export-from.md"
			}
		],
		"flint": {
			"name": "exportFromImports",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "import/group-exports",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/group-exports.md"
			}
		],
		"flint": {
			"name": "exportGroups",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/group-exports",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/group-exports.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/exports-last",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/exports-last.md"
			}
		],
		"flint": {
			"name": "exportLast",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/exports-last",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/exports-last.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/no-mutable-exports",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-mutable-exports.md"
			}
		],
		"flint": {
			"name": "exportMutables",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "import/no-mutable-exports",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-mutable-exports.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/exports",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/exports.md"
			}
		],
		"flint": {
			"name": "exportUniqueNames",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/exports",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/exports.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "no-external-import",
				"url": "https://docs.deno.com/lint/rules/no-external-import"
			}
		],
		"flint": {
			"name": "externalHttpImports",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-extraneous-class",
				"url": "https://typescript-eslint.io/rules/no-extraneous-class"
			}
		],
		"flint": {
			"name": "extraneousClasses",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "typescript/no-extraneous-class",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-extraneous-class.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-invalid-fetch-options",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-invalid-fetch-options.md"
			}
		],
		"flint": {
			"name": "fetchMethodBodies",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-invalid-fetch-options",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-invalid-fetch-options.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useFilenamingConvention",
				"url": "https://biomejs.dev/linter/rules/useFilenamingConvention"
			}
		],
		"eslint": [
			{
				"name": "unicorn/filename-case",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/filename-case.md"
			}
		],
		"flint": {
			"name": "filenameCasing",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/filename-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/filename-case.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noFloatingPromises",
				"url": "https://biomejs.dev/linter/rules/noFloatingPromises"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-floating-promises",
				"url": "https://typescript-eslint.io/rules/no-floating-promises"
			}
		],
		"flint": {
			"name": "floatingPromises",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-floating-promises",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-floating-promises.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useValidForDirection",
				"url": "https://biomejs.dev/linter/rules/useValidForDirection"
			}
		],
		"deno": [
			{
				"name": "for-direction",
				"url": "https://docs.deno.com/lint/rules/for-direction"
			}
		],
		"eslint": [
			{
				"name": "for-direction",
				"url": "https://eslint.org/docs/latest/rules/for-direction"
			}
		],
		"flint": {
			"name": "forDirections",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/for-direction",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/for-direction.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-for-in-array",
				"url": "https://typescript-eslint.io/rules/no-for-in-array"
			}
		],
		"flint": {
			"implemented": true,
			"name": "forInArrays",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-for-in-array",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-for-in-array.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noFunctionAssign",
				"url": "https://biomejs.dev/linter/rules/noFunctionAssign"
			}
		],
		"deno": [
			{
				"name": "no-func-assign",
				"url": "https://docs.deno.com/lint/rules/no-func-assign"
			}
		],
		"eslint": [
			{
				"name": "no-func-assign",
				"url": "https://eslint.org/docs/latest/rules/no-func-assign"
			}
		],
		"flint": {
			"implemented": true,
			"name": "functionAssignments",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-func-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-func-assign.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "prefer-spread",
				"url": "https://eslint.org/docs/latest/rules/prefer-spread"
			},
			{
				"name": "unicorn/prefer-spread",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-spread.md"
			}
		],
		"flint": {
			"name": "functionCallSpreads",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-spread.html"
			},
			{
				"name": "unicorn/prefer-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-spread.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "func-style",
				"url": "https://eslint.org/docs/latest/rules/func-style"
			}
		],
		"flint": {
			"name": "functionDeclarationStyles",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/func-style",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/func-style.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/consistent-function-scoping",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/consistent-function-scoping.md"
			}
		],
		"flint": {
			"name": "functionDefinitionScopeConsistency",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/consistent-function-scoping",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-function-scoping.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "func-name-matching",
				"url": "https://eslint.org/docs/latest/rules/func-name-matching"
			}
		],
		"flint": {
			"name": "functionNameMatches",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "func-names",
				"url": "https://eslint.org/docs/latest/rules/func-names"
			}
		],
		"flint": {
			"name": "functionNames",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/func-names",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/func-names.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-new-func",
				"url": "https://eslint.org/docs/latest/rules/no-new-func"
			}
		],
		"flint": {
			"name": "functionNewCalls",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-new-func",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-new-func.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useExplicitType",
				"url": "https://biomejs.dev/linter/rules/useExplicitType"
			}
		],
		"deno": [
			{
				"name": "explicit-function-return-type",
				"url": "https://docs.deno.com/lint/rules/explicit-function-return-type"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/explicit-function-return-type",
				"url": "https://typescript-eslint.io/rules/explicit-function-return-type"
			}
		],
		"flint": {
			"name": "functionReturnTypes",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "typescript/explicit-function-return-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/explicit-function-return-type.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useShorthandFunctionType",
				"url": "https://biomejs.dev/linter/rules/useShorthandFunctionType"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-function-type",
				"url": "https://typescript-eslint.io/rules/prefer-function-type"
			}
		],
		"flint": {
			"name": "functionTypeDeclarations",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-function-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-function-type.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useYield",
				"url": "https://biomejs.dev/linter/rules/useYield"
			}
		],
		"deno": [
			{
				"name": "require-yield",
				"url": "https://docs.deno.com/lint/rules/require-yield"
			}
		],
		"eslint": [
			{
				"name": "require-yield",
				"url": "https://eslint.org/docs/latest/rules/require-yield"
			}
		],
		"flint": {
			"name": "generatorFunctionYields",
			"plugin": "ts",
			"preset": "Logical",
			"implemented": true
		},
		"oxlint": [
			{
				"name": "eslint/require-yield",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/require-yield.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/consistent-generic-constructors",
				"url": "https://typescript-eslint.io/rules/consistent-generic-constructors"
			}
		],
		"flint": {
			"name": "genericConstructorCalls",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/consistent-generic-constructors",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/consistent-generic-constructors.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useGetterReturn",
				"url": "https://biomejs.dev/linter/rules/useGetterReturn"
			}
		],
		"deno": [
			{
				"name": "getter-return",
				"url": "https://docs.deno.com/lint/rules/getter-return"
			}
		],
		"eslint": [
			{
				"name": "getter-return",
				"url": "https://eslint.org/docs/latest/rules/getter-return"
			}
		],
		"flint": {
			"name": "getterReturns",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/getter-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/getter-return.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/related-getter-setter-pairs",
				"url": "https://typescript-eslint.io/rules/related-getter-setter-pairs"
			}
		],
		"flint": {
			"name": "getterSetterPairedTypes",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/related-getter-setter-pairs",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/related-getter-setter-pairs.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noGlobalAssign",
				"url": "https://biomejs.dev/linter/rules/noGlobalAssign"
			}
		],
		"deno": [
			{
				"name": "no-global-assign",
				"url": "https://docs.deno.com/lint/rules/no-global-assign"
			}
		],
		"eslint": [
			{
				"name": "no-global-assign",
				"url": "https://eslint.org/docs/latest/rules/no-global-assign"
			}
		],
		"flint": {
			"implemented": true,
			"name": "globalAssignments",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-global-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-global-assign.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noGlobalObjectCalls",
				"url": "https://biomejs.dev/linter/rules/noGlobalObjectCalls"
			}
		],
		"deno": [
			{
				"name": "no-obj-calls",
				"url": "https://docs.deno.com/lint/rules/no-obj-calls"
			}
		],
		"eslint": [
			{
				"name": "no-obj-calls",
				"url": "https://eslint.org/docs/latest/rules/no-obj-calls"
			}
		],
		"flint": {
			"implemented": true,
			"name": "globalObjectCalls",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-obj-calls",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-obj-calls.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "no-window",
				"url": "https://docs.deno.com/lint/rules/no-window"
			},
			{
				"name": "no-window-prefix",
				"url": "https://docs.deno.com/lint/rules/no-window-prefix"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-global-this",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-global-this.md"
			}
		],
		"flint": {
			"name": "globalThisAliases",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-global-this",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-global-this.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useGroupedAccessorPairs",
				"url": "https://biomejs.dev/linter/rules/useGroupedAccessorPairs"
			}
		],
		"eslint": [
			{
				"name": "grouped-accessor-pairs",
				"url": "https://eslint.org/docs/latest/rules/grouped-accessor-pairs"
			}
		],
		"flint": {
			"name": "groupedAccessorPairs",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/grouped-accessor-pairs",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/grouped-accessor-pairs.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useGuardForIn",
				"url": "https://biomejs.dev/linter/rules/useGuardForIn"
			}
		],
		"deno": [
			{
				"name": "guard-for-in",
				"url": "https://docs.deno.com/lint/rules/guard-for-in"
			}
		],
		"eslint": [
			{
				"name": "guard-for-in",
				"url": "https://eslint.org/docs/latest/rules/guard-for-in"
			}
		],
		"flint": {
			"name": "guardedForIns",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/guard-for-in",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/guard-for-in.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-hex-escape",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-hex-escape.md"
			}
		],
		"flint": {
			"name": "hexEscapes",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-hex-escape",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-hex-escape.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "id-match",
				"url": "https://eslint.org/docs/latest/rules/id-match"
			}
		],
		"flint": {
			"name": "identifierMatches",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-unreadable-iife",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-unreadable-iife.md"
			}
		],
		"flint": {
			"name": "iifeReadability",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-unreadable-iife",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unreadable-iife.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noImplicitCoercions",
				"url": "https://biomejs.dev/linter/rules/noImplicitCoercions"
			}
		],
		"eslint": [
			{
				"name": "no-implicit-coercion",
				"url": "https://eslint.org/docs/latest/rules/no-implicit-coercion"
			}
		],
		"flint": {
			"name": "implicitCoercions",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "no-implied-eval",
				"url": "https://eslint.org/docs/latest/rules/no-implied-eval"
			},
			{
				"name": "@typescript-eslint/no-implied-eval",
				"url": "https://typescript-eslint.io/rules/no-implied-eval"
			}
		],
		"flint": {
			"name": "impliedEvals",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-implied-eval",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-implied-eval.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/no-absolute-path",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-absolute-path.md"
			}
		],
		"flint": {
			"name": "importAbsolutePaths",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/no-absolute-path",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-absolute-path.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "no-import-assertions",
				"url": "https://docs.deno.com/lint/rules/no-import-assertions"
			}
		],
		"flint": {
			"name": "importAssertions",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"biome": [
			{
				"name": "noImportAssign",
				"url": "https://biomejs.dev/linter/rules/noImportAssign"
			}
		],
		"deno": [
			{
				"name": "no-import-assign",
				"url": "https://docs.deno.com/lint/rules/no-import-assign"
			}
		],
		"eslint": [
			{
				"name": "no-import-assign",
				"url": "https://eslint.org/docs/latest/rules/no-import-assign"
			}
		],
		"flint": {
			"name": "importAssignments",
			"plugin": "ts",
			"preset": "Untyped"
		}
	},
	{
		"biome": [
			{
				"name": "noImportCycles",
				"url": "https://biomejs.dev/linter/rules/noImportCycles"
			}
		],
		"eslint": [
			{
				"name": "import/no-cycle",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-cycle.md"
			}
		],
		"flint": {
			"name": "importCycles",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "import/no-cycle",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-cycle.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/default",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/default.md"
			}
		],
		"flint": {
			"name": "importDefaults",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Handled by TypeScript",
		"oxlint": [
			{
				"name": "eslint/default",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/default.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/no-duplicates",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-duplicates.md"
			}
		],
		"flint": {
			"name": "importDuplicates",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/no-duplicates",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-duplicates.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/no-empty-named-blocks",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-empty-named-blocks.md"
			}
		],
		"flint": {
			"name": "importEmptyBlocks",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "import/no-empty-named-blocks",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-empty-named-blocks.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/no-extraneous-dependencies",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-extraneous-dependencies.md"
			}
		],
		"flint": {
			"name": "importExtraneousDependencies",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "import/first",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/first.md"
			}
		],
		"flint": {
			"name": "importFirst",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/first",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/first.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/max-dependencies",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/max-dependencies.md"
			}
		],
		"flint": {
			"name": "importMaximumDependencies",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/max-dependencies",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/max-dependencies.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/named",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/named.md"
			}
		],
		"flint": {
			"name": "importNameMatches",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/named",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/named.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/namespace",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/namespace.md"
			}
		],
		"flint": {
			"name": "importNamespaceProperties",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Handled by TypeScript",
		"oxlint": [
			{
				"name": "eslint/namespace",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/namespace.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/no-namespace",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-namespace.md"
			}
		],
		"flint": {
			"name": "importNamespaces",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/no-namespace",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-namespace.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/no-self-import",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-self-import.md"
			}
		],
		"flint": {
			"name": "importSelf",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "import/no-self-import",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-self-import.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "sort-imports",
				"url": "https://eslint.org/docs/latest/rules/sort-imports"
			}
		],
		"flint": {
			"name": "importsSorting",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-import-type-side-effects",
				"url": "https://typescript-eslint.io/rules/no-import-type-side-effects"
			}
		],
		"flint": {
			"name": "importTypeSideEffects",
			"plugin": "ts",
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "typescript/no-import-type-side-effects",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-import-type-side-effects.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/no-useless-path-segments",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-useless-path-segments.md"
			}
		],
		"flint": {
			"name": "importUnnecessaryPathSegments",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "import/no-useless-path-segments",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-useless-path-segments.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/consistent-indexed-object-style",
				"url": "https://typescript-eslint.io/rules/consistent-indexed-object-style"
			}
		],
		"flint": {
			"name": "indexedObjectTypes",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/consistent-indexed-object-style",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/consistent-indexed-object-style.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-inline-comments",
				"url": "https://eslint.org/docs/latest/rules/no-inline-comments"
			}
		],
		"flint": {
			"name": "inlineComments",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noInnerDeclarations",
				"url": "https://biomejs.dev/linter/rules/noInnerDeclarations"
			}
		],
		"deno": [
			{
				"name": "no-inner-declarations",
				"url": "https://docs.deno.com/lint/rules/no-inner-declarations"
			}
		],
		"eslint": [
			{
				"name": "no-inner-declarations",
				"url": "https://eslint.org/docs/latest/rules/no-inner-declarations"
			}
		],
		"flint": {
			"name": "innerDeclarations",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-inner-declarations",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-inner-declarations.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useIsArray",
				"url": "https://biomejs.dev/linter/rules/useIsArray"
			}
		],
		"eslint": [
			{
				"name": "unicorn/no-instanceof-builtins",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-instanceof-builtins.md"
			}
		],
		"flint": {
			"name": "instanceOfArrays",
			"plugin": "ts",
			"preset": "Logical"
		},
		"notes": "Only for built-ins with a static .is* (Array)",
		"oxlint": [
			{
				"name": "unicorn/no-instanceof-array",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-instanceof-array.html"
			},
			{
				"name": "unicorn/no-instanceof-builtins",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-instanceof-builtins.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-invalid-this",
				"url": "https://eslint.org/docs/latest/rules/no-invalid-this"
			},
			{
				"name": "@typescript-eslint/no-invalid-this",
				"url": "https://typescript-eslint.io/rules/no-invalid-this"
			}
		],
		"flint": {
			"name": "invalidThis",
			"plugin": "ts",
			"preset": "Untyped"
		}
	},
	{
		"biome": [
			{
				"name": "noConfusingVoidType",
				"url": "https://biomejs.dev/linter/rules/noConfusingVoidType"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-invalid-void-type",
				"url": "https://typescript-eslint.io/rules/no-invalid-void-type"
			}
		],
		"flint": {
			"name": "invalidVoidTypes",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		}
	},
	{
		"biome": [
			{
				"name": "useIsNan",
				"url": "https://biomejs.dev/linter/rules/useIsNan"
			}
		],
		"deno": [
			{
				"name": "use-isnan",
				"url": "https://docs.deno.com/lint/rules/use-isnan"
			}
		],
		"eslint": [
			{
				"name": "use-isnan",
				"url": "https://eslint.org/docs/latest/rules/use-isnan"
			}
		],
		"flint": {
			"name": "isNaNComparisons",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/use-isnan",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/use-isnan.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-array-callback-reference",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-array-callback-reference.md"
			}
		],
		"flint": {
			"name": "iteratorMethodFunctionReferences",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/check-access",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/check-access.md"
			}
		],
		"flint": {
			"name": "jsdocAccessTags",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "jsdoc/check-ass",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/check-ass.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/check-alignment",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/check-alignment.md"
			}
		],
		"flint": {
			"name": "jsdocAlignment",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "I intend to write a Prettier plugin."
	},
	{
		"eslint": [
			{
				"name": "jsdoc/no-multi-asterisks",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/no-multi-asterisks.md"
			},
			{
				"name": "jsdoc/require-asterisk-prefix",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-asterisk-prefix.md"
			}
		],
		"flint": {
			"name": "jsdocAsterisks",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/no-blank-block-descriptions",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/no-blank-block-descriptions.md"
			}
		],
		"flint": {
			"name": "jsdocBlankBlockDescriptions",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/convert-to-jsdoc-comments",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/convert-to-jsdoc-comments.md"
			}
		],
		"flint": {
			"name": "jsdocConvertToJSDocComments",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/no-defaults",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/no-defaults.md"
			}
		],
		"flint": {
			"name": "jsdocDefaults",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/no-defaults",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/no-defaults.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/no-undefined-types",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/no-undefined-types.md"
			}
		],
		"flint": {
			"name": "jsdocDefinedTypes",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-description-complete-sentence",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-description-complete-sentence.md"
			}
		],
		"flint": {
			"name": "jsdocDescriptionCompleteSentences",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-description",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-description.md"
			}
		],
		"flint": {
			"name": "jsdocDescriptions",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/no-blank-blocks",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/no-blank-blocks.md"
			}
		],
		"flint": {
			"name": "jsdocEmptyBlocks",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/empty-tags",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/empty-tags.md"
			}
		],
		"flint": {
			"name": "jsdocEmptyTags",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "jsdoc/empty-tags",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/empty-tags.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-example",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-example.md"
			}
		],
		"flint": {
			"name": "jsdocExamples",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-file-overview",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-file-overview.md"
			}
		],
		"flint": {
			"name": "jsdocFileOverviews",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/implements-on-classes",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/implements-on-classes.md"
			}
		],
		"flint": {
			"name": "jsdocImplementsTags",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "jsdoc/implements-on-classes",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/implements-on-classes.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/imports-as-dependencies",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/imports-as-dependencies.md"
			}
		],
		"flint": {
			"name": "jsdocImportsAsDependencies",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/check-indentation",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/check-indentation.md"
			}
		],
		"flint": {
			"name": "jsdocIndentation",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "I intend to write a Prettier plugin."
	},
	{
		"eslint": [
			{
				"name": "jsdoc/informative-docs",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/informative-docs.md"
			}
		],
		"flint": {
			"name": "jsdocInformativeDocs",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/check-line-alignment",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/check-line-alignment.md"
			}
		],
		"flint": {
			"name": "jsdocLineAlignment",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "I intend to write a Prettier plugin."
	},
	{
		"eslint": [
			{
				"name": "jsdoc/match-description",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/match-description.md"
			}
		],
		"flint": {
			"name": "jsdocMatchDescriptions",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/match-names",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/match-names.md"
			}
		],
		"flint": {
			"name": "jsdocMatchNames",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/no-bad-blocks",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/no-bad-blocks.md"
			}
		],
		"flint": {
			"name": "jsdocMisleadingBlocks",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/no-missing-syntax",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/no-missing-syntax.md"
			}
		],
		"flint": {
			"name": "jsdocMissingSyntax",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/multiline-blocks",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/multiline-blocks.md"
			}
		],
		"flint": {
			"name": "jsdocMultilineBlocks",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-hyphen-before-param-description",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-hyphen-before-param-description.md"
			}
		],
		"flint": {
			"name": "jsdocParameterDescriptionHyphens",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-param-description",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-param-description.md"
			}
		],
		"flint": {
			"name": "jsdocParameterDescriptions",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-param-description",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-param-description.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/check-param-names",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/check-param-names.md"
			}
		],
		"flint": {
			"name": "jsdocParameterNames",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-param",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-param.md"
			}
		],
		"flint": {
			"name": "jsdocParameters",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-param",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-param.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-param-type",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-param-type.md"
			}
		],
		"flint": {
			"name": "jsdocParameterTypes",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-param-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-param-type.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-property",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-property.md"
			}
		],
		"flint": {
			"name": "jsdocProperties",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-property",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-property.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-property-description",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-property-description.md"
			}
		],
		"flint": {
			"name": "jsdocPropertyDescriptions",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-property-description",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-property-description.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/check-property-names",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/check-property-names.md"
			}
		],
		"flint": {
			"name": "jsdocPropertyNames",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "jsdoc/check-property-names",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/check-property-names.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-property-type",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-property-type.md"
			}
		],
		"flint": {
			"name": "jsdocPropertyTypes",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-property-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-property-type.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/no-types",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/no-types.md"
			}
		],
		"flint": {
			"name": "jsdocRedundantTypes",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-jsdoc",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-jsdoc.md"
			}
		],
		"flint": {
			"name": "jsdocRequired",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-returns-description",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-returns-description.md"
			}
		],
		"flint": {
			"name": "jsdocReturnDescriptions",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-returns-description",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-returns-description.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-returns",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-returns.md"
			}
		],
		"flint": {
			"name": "jsdocReturns",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-returns",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-returns.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-returns-type",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-returns-type.md"
			}
		],
		"flint": {
			"name": "jsdocReturnTypes",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-returns-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-returns-type.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/tag-lines",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/tag-lines.md"
			}
		],
		"flint": {
			"name": "jsdocTagLines",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/check-tag-names",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/check-tag-names.md"
			}
		],
		"flint": {
			"name": "jsdocTagNames",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "jsdoc/check-tag-names",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/check-tag-names.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/check-template-names",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/check-template-names.md"
			}
		],
		"flint": {
			"name": "jsdocTemplateNames",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-template",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-template.md"
			}
		],
		"flint": {
			"name": "jsdocTemplates",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/text-escaping",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/text-escaping.md"
			}
		],
		"flint": {
			"name": "jsdocTextEscaping",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-throws",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-throws.md"
			}
		],
		"flint": {
			"name": "jsdocThrows",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/check-syntax, jsdoc/check-types",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/check-syntax, jsdoc.md"
			}
		],
		"flint": {
			"name": "jsdocTypesSyntax",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-returns-check",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-returns-check.md"
			}
		],
		"flint": {
			"name": "jsdocUnnecessaryReturns",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-yields-check",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-yields-check.md"
			}
		],
		"flint": {
			"name": "jsdocUnnecessaryYields",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/valid-types",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/valid-types.md"
			}
		],
		"flint": {
			"name": "jsdocValidTypes",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/check-values",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/check-values.md"
			}
		],
		"flint": {
			"name": "jsdocValues",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "jsdoc/require-yields",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/require-yields.md"
			}
		],
		"flint": {
			"name": "jsdocYields",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "jsdoc/require-yields",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-yields.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useJsonImportAttributes",
				"url": "https://biomejs.dev/linter/rules/useJsonImportAttributes"
			}
		],
		"flint": {
			"name": "jsonImportAttributes",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noConfusingLabels",
				"url": "https://biomejs.dev/linter/rules/noConfusingLabels"
			}
		],
		"eslint": [
			{
				"name": "no-labels",
				"url": "https://eslint.org/docs/latest/rules/no-labels"
			}
		],
		"flint": {
			"name": "labels",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-labels",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-labels.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noLabelVar",
				"url": "https://biomejs.dev/linter/rules/noLabelVar"
			}
		],
		"eslint": [
			{
				"name": "no-label-var",
				"url": "https://eslint.org/docs/latest/rules/no-label-var"
			}
		],
		"flint": {
			"name": "labelVariableNames",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-label-var",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-label-var.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-bigint-literals",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-bigint-literals.md"
			}
		],
		"flint": {
			"name": "literalConstructorWrappers",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"notes": "Will apply to all literals, not just bigint"
	},
	{
		"biome": [
			{
				"name": "noAwaitInLoops",
				"url": "https://biomejs.dev/linter/rules/noAwaitInLoops"
			}
		],
		"deno": [
			{
				"name": "no-await-in-loop",
				"url": "https://docs.deno.com/lint/rules/no-await-in-loop"
			}
		],
		"eslint": [
			{
				"name": "no-await-in-loop",
				"url": "https://eslint.org/docs/latest/rules/no-await-in-loop"
			}
		],
		"flint": {
			"name": "loopAwaits",
			"plugin": "ts",
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "eslint/no-await-in-loop",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-await-in-loop.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-unmodified-loop-condition",
				"url": "https://eslint.org/docs/latest/rules/no-unmodified-loop-condition"
			}
		],
		"flint": {
			"name": "loopConditionConstants",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "no-loop-func",
				"url": "https://eslint.org/docs/latest/rules/no-loop-func"
			},
			{
				"name": "@typescript-eslint/no-loop-func",
				"url": "https://typescript-eslint.io/rules/no-loop-func"
			}
		],
		"flint": {
			"name": "loopFunctions",
			"plugin": "ts",
			"preset": "None"
		}
	},
	{
		"biome": [
			{
				"name": "noMagicNumbers",
				"url": "https://biomejs.dev/linter/rules/noMagicNumbers"
			}
		],
		"eslint": [
			{
				"name": "no-magic-numbers",
				"url": "https://eslint.org/docs/latest/rules/no-magic-numbers"
			},
			{
				"name": "@typescript-eslint/no-magic-numbers",
				"url": "https://typescript-eslint.io/rules/no-magic-numbers"
			}
		],
		"flint": {
			"name": "magicNumbers",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-magic-numbers",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-magic-numbers.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-modern-math-apis",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-modern-math-apis.md"
			}
		],
		"flint": {
			"name": "mathMethods",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-modern-math-apis",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-modern-math-apis.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-math-min-max",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-math-min-max.md"
			}
		],
		"flint": {
			"name": "mathRangeTernaries",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-math-min-max",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-math-min-max.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-math-trunc",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-math-trunc.md"
			}
		],
		"flint": {
			"name": "mathTruncationOperators",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-math-trunc",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-math-trunc.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "max-classes-per-file",
				"url": "https://eslint.org/docs/latest/rules/max-classes-per-file"
			}
		],
		"flint": {
			"name": "maximumClassesPerFile",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/max-classes-per-file",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-classes-per-file.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "complexity",
				"url": "https://eslint.org/docs/latest/rules/complexity"
			}
		],
		"flint": {
			"name": "maximumComplexity",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "max-depth",
				"url": "https://eslint.org/docs/latest/rules/max-depth"
			}
		],
		"flint": {
			"name": "maximumDepth",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/max-depth",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-depth.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "id-length",
				"url": "https://eslint.org/docs/latest/rules/id-length"
			}
		],
		"flint": {
			"name": "maximumIdentifierLengths",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/id-length",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/id-length.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "max-lines",
				"url": "https://eslint.org/docs/latest/rules/max-lines"
			}
		],
		"flint": {
			"name": "maximumLinesPerFile",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/max-lines",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-lines.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noExcessiveLinesPerFunction",
				"url": "https://biomejs.dev/linter/rules/noExcessiveLinesPerFunction"
			}
		],
		"eslint": [
			{
				"name": "max-lines-per-function",
				"url": "https://eslint.org/docs/latest/rules/max-lines-per-function"
			}
		],
		"flint": {
			"name": "maximumLinesPerFunction",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/max-lines-per-function",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-lines-per-function.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "max-nested-callbacks",
				"url": "https://eslint.org/docs/latest/rules/max-nested-callbacks"
			}
		],
		"flint": {
			"name": "maximumNestedCallbacks",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/max-nested-callbacks",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-nested-callbacks.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useMaxParams",
				"url": "https://biomejs.dev/linter/rules/useMaxParams"
			}
		],
		"eslint": [
			{
				"name": "max-params",
				"url": "https://eslint.org/docs/latest/rules/max-params"
			},
			{
				"name": "@typescript-eslint/max-params",
				"url": "https://typescript-eslint.io/rules/max-params"
			}
		],
		"flint": {
			"name": "maximumParameters",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/max-params",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-params.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "max-statements",
				"url": "https://eslint.org/docs/latest/rules/max-statements"
			}
		],
		"flint": {
			"name": "maximumStatements",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-meaningless-void-operator",
				"url": "https://typescript-eslint.io/rules/no-meaningless-void-operator"
			}
		],
		"flint": {
			"name": "meaninglessVoidOperators",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-meaningless-void-operator",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-meaningless-void-operator.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useConsistentMemberAccessibility",
				"url": "https://biomejs.dev/linter/rules/useConsistentMemberAccessibility"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/explicit-member-accessibility",
				"url": "https://typescript-eslint.io/rules/explicit-member-accessibility"
			}
		],
		"flint": {
			"name": "memberAccessibility",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"flint": {
			"name": "misleadingShorthandAssignments",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noThenProperty",
				"url": "https://biomejs.dev/linter/rules/noThenProperty"
			}
		],
		"eslint": [
			{
				"name": "unicorn/no-thenable",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-thenable.md"
			}
		],
		"flint": {
			"name": "misleadingThenProperties",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-thenable",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-thenable.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noVoidTypeReturn",
				"url": "https://biomejs.dev/linter/rules/noVoidTypeReturn"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-confusing-void-expression",
				"url": "https://typescript-eslint.io/rules/no-confusing-void-expression"
			}
		],
		"flint": {
			"name": "misleadingVoidExpressions",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-confusing-void-expression",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-confusing-void-expression.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noMisusedPromises",
				"url": "https://biomejs.dev/linter/rules/noMisusedPromises"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-misused-promises",
				"url": "https://typescript-eslint.io/rules/no-misused-promises"
			}
		],
		"flint": {
			"name": "misusedPromises",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-misused-promises",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-misused-promises.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useExplicitType",
				"url": "https://biomejs.dev/linter/rules/useExplicitType"
			}
		],
		"deno": [
			{
				"name": "explicit-module-boundary-types",
				"url": "https://docs.deno.com/lint/rules/explicit-module-boundary-types"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/explicit-module-boundary-types",
				"url": "https://typescript-eslint.io/rules/explicit-module-boundary-types"
			}
		],
		"flint": {
			"name": "moduleBoundaryTypes",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "typescript/explicit-module-boundary-types",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/explicit-module-boundary-types.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noGlobalDirnameFilename",
				"url": "https://biomejs.dev/linter/rules/noGlobalDirnameFilename"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-module",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-module.md"
			}
		],
		"flint": {
			"name": "moduleFormats",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/import-style",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/import-style.md"
			}
		],
		"flint": {
			"name": "moduleImportStyles",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/require-module-specifiers",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/require-module-specifiers.md"
			}
		],
		"flint": {
			"name": "moduleSpecifierLists",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "no-unexpected-multiline",
				"url": "https://eslint.org/docs/latest/rules/no-unexpected-multiline"
			}
		],
		"flint": {
			"name": "multilineAmbiguities",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-unexpected-multiline",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unexpected-multiline.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-multi-str",
				"url": "https://eslint.org/docs/latest/rules/no-multi-str"
			}
		],
		"flint": {
			"name": "multilineStrings",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-multi-str",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-multi-str.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-switch",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-switch.md"
			}
		],
		"flint": {
			"name": "multipleElseIfSwitches",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-anonymous-default-export",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-anonymous-default-export.md"
			}
		],
		"flint": {
			"name": "namedDefaultExports",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "import/no-anonymous-default-export",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-anonymous-default-export.html"
			},
			{
				"name": "unicorn/no-anonymous-default-export",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-anonymous-default-export.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noNamespace",
				"url": "https://biomejs.dev/linter/rules/noNamespace"
			}
		],
		"deno": [
			{
				"name": "no-namespace",
				"url": "https://docs.deno.com/lint/rules/no-namespace"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-namespace",
				"url": "https://typescript-eslint.io/rules/no-namespace"
			}
		],
		"flint": {
			"implemented": true,
			"name": "namespaceDeclarations",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-namespace",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-namespace.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "no-implicit-declare-namespace-export",
				"url": "https://docs.deno.com/lint/rules/no-implicit-declare-namespace-export"
			}
		],
		"flint": {
			"name": "namespaceImplicitAmbientImports",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"biome": [
			{
				"name": "useNamespaceKeyword",
				"url": "https://biomejs.dev/linter/rules/useNamespaceKeyword"
			}
		],
		"deno": [
			{
				"name": "prefer-namespace-keyword",
				"url": "https://docs.deno.com/lint/rules/prefer-namespace-keyword"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-namespace-keyword",
				"url": "https://typescript-eslint.io/rules/prefer-namespace-keyword"
			}
		],
		"flint": {
			"name": "namespaceKeywords",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-namespace-keyword",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-namespace-keyword.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useNamingConvention",
				"url": "https://biomejs.dev/linter/rules/useNamingConvention"
			}
		],
		"deno": [
			{
				"name": "camelcase",
				"url": "https://docs.deno.com/lint/rules/camelcase"
			}
		],
		"eslint": [
			{
				"name": "camelcase",
				"url": "https://eslint.org/docs/latest/rules/camelcase"
			},
			{
				"name": "@typescript-eslint/naming-conventions",
				"url": "https://typescript-eslint.io/rules/naming-conventions"
			}
		],
		"flint": {
			"name": "namingConventions",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "no-extend-native",
				"url": "https://eslint.org/docs/latest/rules/no-extend-native"
			}
		],
		"flint": {
			"name": "nativeObjectExtensions",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-extend-native",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-extend-native.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-negative-index",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-negative-index.md"
			}
		],
		"flint": {
			"name": "negativeIndexLengthMethods",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"biome": [
			{
				"name": "noCompareNegZero",
				"url": "https://biomejs.dev/linter/rules/noCompareNegZero"
			}
		],
		"deno": [
			{
				"name": "no-compare-neg-zero",
				"url": "https://docs.deno.com/lint/rules/no-compare-neg-zero"
			}
		],
		"eslint": [
			{
				"name": "no-compare-neg-zero",
				"url": "https://eslint.org/docs/latest/rules/no-compare-neg-zero"
			}
		],
		"flint": {
			"implemented": true,
			"name": "negativeZeroComparisons",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-compare-neg-zero",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-compare-neg-zero.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useCollapsedElseIf",
				"url": "https://biomejs.dev/linter/rules/useCollapsedElseIf"
			},
			{
				"name": "useCollapsedIf",
				"url": "https://biomejs.dev/linter/rules/useCollapsedIf"
			}
		],
		"eslint": [
			{
				"name": "no-lonely-if",
				"url": "https://eslint.org/docs/latest/rules/no-lonely-if"
			},
			{
				"name": "unicorn/no-lonely-if",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-lonely-if.md"
			}
		],
		"flint": {
			"name": "nestedStandaloneIfs",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-lonely-if",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-lonely-if.html"
			},
			{
				"name": "unicorn/no-lonely-if",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-lonely-if.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noMisleadingInstantiator",
				"url": "https://biomejs.dev/linter/rules/noMisleadingInstantiator"
			}
		],
		"deno": [
			{
				"name": "no-misused-new",
				"url": "https://docs.deno.com/lint/rules/no-misused-new"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-misused-new",
				"url": "https://typescript-eslint.io/rules/no-misused-new"
			}
		],
		"flint": {
			"name": "newDefinitions",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-misused-new",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-misused-new.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-new",
				"url": "https://eslint.org/docs/latest/rules/no-new"
			}
		],
		"flint": {
			"implemented": true,
			"name": "newExpressions",
			"plugin": "ts",
			"preset": "Logical"
		},
		"notes": "oxc/missing-throw is a subset",
		"oxlint": [
			{
				"name": "eslint/no-new",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-new.html"
			},
			{
				"name": "oxc/missing-throw",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/missing-throw.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noInvalidBuiltinInstantiation",
				"url": "https://biomejs.dev/linter/rules/noInvalidBuiltinInstantiation"
			}
		],
		"deno": [
			{
				"name": "no-new-symbol",
				"url": "https://docs.deno.com/lint/rules/no-new-symbol"
			}
		],
		"eslint": [
			{
				"name": "no-new-native-nonconstructor",
				"url": "https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"
			}
		],
		"flint": {
			"implemented": true,
			"name": "newNativeNonConstructors",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-new-native-nonconstructor",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-new-native-nonconstructor.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/non-nullable-type-assertion-style",
				"url": "https://typescript-eslint.io/rules/non-nullable-type-assertion-style"
			}
		],
		"flint": {
			"name": "nonNullableTypeAssertions",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/non-nullable-type-assertion-style",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/non-nullable-type-assertion-style.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-non-null-asserted-nullish-coalescing",
				"url": "https://typescript-eslint.io/rules/no-non-null-asserted-nullish-coalescing"
			}
		],
		"flint": {
			"name": "nonNullAssertedNullishCoalesces",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "typescript/no-non-null-asserted-nullish-coalescing",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-non-null-asserted-nullish-coalescing.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noNonNullAssertedOptionalChain",
				"url": "https://biomejs.dev/linter/rules/noNonNullAssertedOptionalChain"
			}
		],
		"deno": [
			{
				"name": "no-non-null-asserted-optional-chain",
				"url": "https://docs.deno.com/lint/rules/no-non-null-asserted-optional-chain"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-non-null-asserted-optional-chain",
				"url": "https://typescript-eslint.io/rules/no-non-null-asserted-optional-chain"
			}
		],
		"flint": {
			"name": "nonNullAssertedOptionalChains",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-non-null-asserted-optional-chain",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-non-null-asserted-optional-chain.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-confusing-non-null-assertion",
				"url": "https://typescript-eslint.io/rules/no-confusing-non-null-assertion"
			}
		],
		"flint": {
			"name": "nonNullAssertionPlacement",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "typescript/no-confusing-non-null-assertion",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-confusing-non-null-assertion.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noNonNullAssertion",
				"url": "https://biomejs.dev/linter/rules/noNonNullAssertion"
			}
		],
		"deno": [
			{
				"name": "no-non-null-assertion",
				"url": "https://docs.deno.com/lint/rules/no-non-null-assertion"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-non-null-assertion",
				"url": "https://typescript-eslint.io/rules/no-non-null-assertion"
			}
		],
		"flint": {
			"name": "nonNullAssertions",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "typescript/no-non-null-assertion",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-non-null-assertion.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noNonoctalDecimalEscape",
				"url": "https://biomejs.dev/linter/rules/noNonoctalDecimalEscape"
			}
		],
		"eslint": [
			{
				"name": "no-nonoctal-decimal-escape",
				"url": "https://eslint.org/docs/latest/rules/no-nonoctal-decimal-escape"
			}
		],
		"flint": {
			"name": "nonOctalDecimalEscapes",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-nonoctal-decimal-escape",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-nonoctal-decimal-escape.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-eq-null",
				"url": "https://eslint.org/docs/latest/rules/no-eq-null"
			}
		],
		"flint": {
			"name": "nullComparisons",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-eql-null",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-eql-null.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-nullish-coalescing",
				"url": "https://typescript-eslint.io/rules/prefer-nullish-coalescing"
			}
		],
		"flint": {
			"name": "nullishCoalescingOperators",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-null",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-null.md"
			}
		],
		"flint": {
			"name": "nulls",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-null",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-null.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useSimpleNumberKeys",
				"url": "https://biomejs.dev/linter/rules/useSimpleNumberKeys"
			}
		],
		"flint": {
			"name": "numberKeyLiterals",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"flint": {
			"name": "numberMethodRanges",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/number-arg-out-of-range",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/number-arg-out-of-range.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noGlobalIsFinite",
				"url": "https://biomejs.dev/linter/rules/noGlobalIsFinite"
			},
			{
				"name": "noGlobalIsNan",
				"url": "https://biomejs.dev/linter/rules/noGlobalIsNan"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-number-properties",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-number-properties.md"
			}
		],
		"flint": {
			"name": "numberStaticMethods",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-number-properties",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-number-properties.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useNumberToFixedDigitsArgument",
				"url": "https://biomejs.dev/linter/rules/useNumberToFixedDigitsArgument"
			}
		],
		"eslint": [
			{
				"name": "unicorn/require-number-to-fixed-digits-argument",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/require-number-to-fixed-digits-argument.md"
			}
		],
		"flint": {
			"name": "numberToFixedDigits",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/require-number-to-fixed-digits-argument",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/require-number-to-fixed-digits-argument.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noApproximativeNumericConstant",
				"url": "https://biomejs.dev/linter/rules/noApproximativeNumericConstant"
			}
		],
		"flint": {
			"name": "numericConstantApproximations",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/approx-constant",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/approx-constant.html"
			}
		]
	},
	{
		"flint": {
			"name": "numericErasingOperations",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/erasing-op",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/erasing-op.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/number-literal-case",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/number-literal-case.md"
			}
		],
		"flint": {
			"name": "numericLiteralCasing",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/number-literal-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/number-literal-case.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useNumericLiterals",
				"url": "https://biomejs.dev/linter/rules/useNumericLiterals"
			}
		],
		"eslint": [
			{
				"name": "prefer-numeric-literals",
				"url": "https://eslint.org/docs/latest/rules/prefer-numeric-literals"
			}
		],
		"flint": {
			"implemented": true,
			"name": "numericLiteralParsing",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-numeric-literals",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-numeric-literals.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noPrecisionLoss",
				"url": "https://biomejs.dev/linter/rules/noPrecisionLoss"
			}
		],
		"eslint": [
			{
				"name": "no-loss-of-precision",
				"url": "https://eslint.org/docs/latest/rules/no-loss-of-precision"
			},
			{
				"name": "@typescript-eslint/no-loss-of-precision",
				"url": "https://typescript-eslint.io/rules/no-loss-of-precision"
			}
		],
		"flint": {
			"name": "numericPrecision",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-loss-of-precision",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-loss-of-precision.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useNumericSeparators",
				"url": "https://biomejs.dev/linter/rules/useNumericSeparators"
			}
		],
		"eslint": [
			{
				"name": "unicorn/numeric-separators-style",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/numeric-separators-style.md"
			}
		],
		"flint": {
			"name": "numericSeparatorGroups",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/numeric-separators-style",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/numeric-separators-style.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useObjectSpread",
				"url": "https://biomejs.dev/linter/rules/useObjectSpread"
			}
		],
		"eslint": [
			{
				"name": "prefer-object-spread",
				"url": "https://eslint.org/docs/latest/rules/prefer-object-spread"
			}
		],
		"flint": {
			"name": "objectAssignSpreads",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-object-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-object-spread.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-object-constructor",
				"url": "https://eslint.org/docs/latest/rules/no-object-constructor"
			}
		],
		"flint": {
			"name": "objectCalls",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-object-constructor",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-object-constructor.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-object-as-default-parameter",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-object-as-default-parameter.md"
			}
		],
		"flint": {
			"name": "objectDefaultParameters",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/no-object-as-default-parameter",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-object-as-default-parameter.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-object-from-entries",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-object-from-entries.md"
			}
		],
		"flint": {
			"name": "objectEntriesMethods",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-object-from-entries",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-object-from-entries.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noPrototypeBuiltins",
				"url": "https://biomejs.dev/linter/rules/noPrototypeBuiltins"
			}
		],
		"eslint": [
			{
				"name": "prefer-object-has-own",
				"url": "https://eslint.org/docs/latest/rules/prefer-object-has-own"
			}
		],
		"flint": {
			"name": "objectHasOwns",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-object-has-own",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-object-has-own.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noDuplicateObjectKeys",
				"url": "https://biomejs.dev/linter/rules/noDuplicateObjectKeys"
			}
		],
		"eslint": [
			{
				"name": "no-dupe-keys",
				"url": "https://eslint.org/docs/latest/rules/no-dupe-keys"
			}
		],
		"flint": {
			"name": "objectKeyDuplicates",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"flint": {
			"name": "objectLiteralComparisons",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/bad-object-literal-comparison",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-object-literal-comparison.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-proto",
				"url": "https://eslint.org/docs/latest/rules/no-proto"
			}
		],
		"flint": {
			"implemented": true,
			"name": "objectProto",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-proto",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-proto.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noPrototypeBuiltins",
				"url": "https://biomejs.dev/linter/rules/noPrototypeBuiltins"
			}
		],
		"deno": [
			{
				"name": "no-prototype-builtins",
				"url": "https://docs.deno.com/lint/rules/no-prototype-builtins"
			}
		],
		"eslint": [
			{
				"name": "no-prototype-builtins",
				"url": "https://eslint.org/docs/latest/rules/no-prototype-builtins"
			}
		],
		"flint": {
			"name": "objectPrototypeBuiltIns",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-prototype-builtins",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-prototype-builtins.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useConsistentObjectDefinitions",
				"url": "https://biomejs.dev/linter/rules/useConsistentObjectDefinitions"
			}
		],
		"eslint": [
			{
				"name": "object-shorthand",
				"url": "https://eslint.org/docs/latest/rules/object-shorthand"
			}
		],
		"flint": {
			"name": "objectShorthand",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-useless-fallback-in-spread",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-useless-fallback-in-spread.md"
			}
		],
		"flint": {
			"name": "objectSpreadUnnecessaryFallbacks",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-useless-fallback-in-spread",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-fallback-in-spread.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useConsistentTypeDefinitions",
				"url": "https://biomejs.dev/linter/rules/useConsistentTypeDefinitions"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/consistent-type-definitions",
				"url": "https://typescript-eslint.io/rules/consistent-type-definitions"
			}
		],
		"flint": {
			"name": "objectTypeDefinitions",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/consistent-type-definitions",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/consistent-type-definitions.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noOctalEscape",
				"url": "https://biomejs.dev/linter/rules/noOctalEscape"
			}
		],
		"eslint": [
			{
				"name": "no-octal-escape",
				"url": "https://eslint.org/docs/latest/rules/no-octal-escape"
			}
		],
		"flint": {
			"name": "octalEscapes",
			"plugin": "ts",
			"preset": "Untyped",
			"implemented": true
		}
	},
	{
		"eslint": [
			{
				"name": "no-octal",
				"url": "https://eslint.org/docs/latest/rules/no-octal"
			}
		],
		"flint": {
			"implemented": true,
			"name": "octalNumbers",
			"plugin": "ts",
			"preset": "Untyped"
		}
	},
	{
		"biome": [
			{
				"name": "useShorthandAssign",
				"url": "https://biomejs.dev/linter/rules/useShorthandAssign"
			}
		],
		"eslint": [
			{
				"name": "operator-assignment",
				"url": "https://eslint.org/docs/latest/rules/operator-assignment"
			}
		],
		"flint": {
			"name": "operatorAssignmentShorthand",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/operator-assignment",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/operator-assignment.html"
			}
		]
	},
	{
		"flint": {
			"name": "optionalChainExpressions",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/no-optional-chaining",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-optional-chaining.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useOptionalChain",
				"url": "https://biomejs.dev/linter/rules/useOptionalChain"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-optional-chain",
				"url": "https://typescript-eslint.io/rules/prefer-optional-chain"
			}
		],
		"flint": {
			"name": "optionalChainOperators",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"biome": [
			{
				"name": "useAdjacentOverloadSignatures",
				"url": "https://biomejs.dev/linter/rules/useAdjacentOverloadSignatures"
			}
		],
		"deno": [
			{
				"name": "adjacent-overload-signatures",
				"url": "https://docs.deno.com/lint/rules/adjacent-overload-signatures"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/adjacent-overload-signatures",
				"url": "https://typescript-eslint.io/rules/adjacent-overload-signatures"
			}
		],
		"flint": {
			"name": "overloadSignaturesAdjacent",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/adjacent-overload-signatures",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/adjacent-overload-signatures.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noParameterProperties",
				"url": "https://biomejs.dev/linter/rules/noParameterProperties"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/parameter-properties",
				"url": "https://typescript-eslint.io/rules/parameter-properties"
			},
			{
				"name": "erasable-syntax-only/parameter-properties",
				"url": "https://github.com/JoshuaKGoldberg/eslint-plugin-erasable-syntax-only/blob/HEAD/docs/rules/parameter-properties.md"
			}
		],
		"flint": {
			"name": "parameterProperties",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-parameter-property-assignment",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-parameter-property-assignment"
			}
		],
		"flint": {
			"name": "parameterPropertyAssignment",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unnecessary-parameter-property-assignment",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-parameter-property-assignment.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noParameterAssign",
				"url": "https://biomejs.dev/linter/rules/noParameterAssign"
			}
		],
		"eslint": [
			{
				"name": "no-param-reassign",
				"url": "https://eslint.org/docs/latest/rules/no-param-reassign"
			}
		],
		"flint": {
			"name": "parameterReassignments",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"biome": [
			{
				"name": "useParseIntRadix",
				"url": "https://biomejs.dev/linter/rules/useParseIntRadix"
			}
		],
		"eslint": [
			{
				"name": "radix",
				"url": "https://eslint.org/docs/latest/rules/radix"
			}
		],
		"flint": {
			"name": "parseIntRadixes",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/radix",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/radix.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/restrict-plus-operands",
				"url": "https://typescript-eslint.io/rules/restrict-plus-operands"
			}
		],
		"flint": {
			"name": "plusOperands",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/restrict-plus-operands",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/restrict-plus-operands.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-plusplus",
				"url": "https://eslint.org/docs/latest/rules/no-plusplus"
			}
		],
		"flint": {
			"name": "plusPlusOperators",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-plusplus",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-plusplus.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-keyword-prefix",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-keyword-prefix.md"
			}
		],
		"flint": {
			"name": "prefixedClassLikes",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"flint": {
			"name": "promiseAlwaysReturn",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Superseded by no-floating-promises",
		"oxlint": [
			{
				"name": "promise/always-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/always-return.html"
			}
		]
	},
	{
		"flint": {
			"name": "promiseArgumentCounts",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/valid-params",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/valid-params.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "promise/prefer-await-to-callbacks",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/prefer-await-to-callbacks.md"
			}
		],
		"flint": {
			"name": "promiseAwaitableCallbacks",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/prefer-await-to-callbacks",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/prefer-await-to-callbacks.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "promise/prefer-await-to-then",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/prefer-await-to-then.md"
			}
		],
		"flint": {
			"name": "promiseAwaitableThens",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/prefer-await-to-then",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/prefer-await-to-then.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "promise/prefer-catch",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/prefer-catch.md"
			}
		],
		"flint": {
			"name": "promiseCatchableThens",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/prefer-catch",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/prefer-catch.html"
			}
		]
	},
	{
		"flint": {
			"name": "promiseCatchOrReturn",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Superseded by no-floating-promises",
		"oxlint": [
			{
				"name": "promise/catch-or-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/catch-or-return.html"
			}
		]
	},
	{
		"flint": {
			"name": "promiseErrorFirstCallbacks",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Superseded by no-floating-promises",
		"oxlint": [
			{
				"name": "promise/no-promise-in-callback",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-promise-in-callback.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-promise-executor-return",
				"url": "https://eslint.org/docs/latest/rules/no-promise-executor-return"
			}
		],
		"flint": {
			"name": "promiseExecutorReturns",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "promise/no-return-in-finally",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/no-return-in-finally.md"
			}
		],
		"flint": {
			"name": "promiseFinallyReturns",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "promise/no-return-in-finally",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-return-in-finally.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/promise-function-async",
				"url": "https://typescript-eslint.io/rules/promise-function-async"
			}
		],
		"flint": {
			"name": "promiseFunctionAsync",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/promise-function-async",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/promise-function-async.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-single-promise-in-promise-methods",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-single-promise-in-promise-methods.md"
			}
		],
		"flint": {
			"name": "promiseMethodSingleArrayArguments",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-single-promise-in-promise-methods",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-single-promise-in-promise-methods.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "promise/no-nesting",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/no-nesting.md"
			}
		],
		"flint": {
			"name": "promiseNesting",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/no-nesting",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-nesting.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "promise/avoid-new",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/avoid-new.md"
			}
		],
		"flint": {
			"name": "promiseNews",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/avoid-new",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/avoid-new.html"
			}
		]
	},
	{
		"flint": {
			"name": "promiseNewStatics",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/no-new-statics",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-new-statics.html"
			}
		]
	},
	{
		"flint": {
			"name": "promiseNonSpecMethods",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Superseded by no-floating-promises",
		"oxlint": [
			{
				"name": "promise/spec-only",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/spec-only.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "promise/param-names",
				"url": "https://github.com/eslint-community/eslint-plugin-promise/blob/HEAD/docs/rules/param-names.md"
			}
		],
		"flint": {
			"name": "promiseParameterNames",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "promise/param-names",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/param-names.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "prefer-promise-reject-errors",
				"url": "https://eslint.org/docs/latest/rules/prefer-promise-reject-errors"
			},
			{
				"name": "@typescript-eslint/prefer-promise-reject-errors",
				"url": "https://typescript-eslint.io/rules/prefer-promise-reject-errors"
			}
		],
		"flint": {
			"name": "promiseRejectErrors",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-promise-reject-errors",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-promise-reject-errors.html"
			},
			{
				"name": "typescript/prefer-promise-reject-errors",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-promise-reject-errors.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useLiteralKeys",
				"url": "https://biomejs.dev/linter/rules/useLiteralKeys"
			}
		],
		"eslint": [
			{
				"name": "dot-notation",
				"url": "https://eslint.org/docs/latest/rules/dot-notation"
			},
			{
				"name": "@typescript-eslint/dot-notation",
				"url": "https://typescript-eslint.io/rules/dot-notation"
			}
		],
		"flint": {
			"name": "propertyAccessNotation",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "no-iterator",
				"url": "https://eslint.org/docs/latest/rules/no-iterator"
			}
		],
		"flint": {
			"name": "prototypeIterators",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-iterator",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-iterator.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useReadonlyClassProperties",
				"url": "https://biomejs.dev/linter/rules/useReadonlyClassProperties"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-readonly",
				"url": "https://typescript-eslint.io/rules/prefer-readonly"
			}
		],
		"flint": {
			"name": "readonlyClassProperties",
			"plugin": "ts",
			"preset": "Not implementing",
			"strictness": "Strict"
		}
	},
	{
		"flint": {
			"name": "recursionOnlyArguments",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/only-used-in-recursion",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/only-used-in-recursion.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-reduce-type-parameter",
				"url": "https://typescript-eslint.io/rules/prefer-reduce-type-parameter"
			}
		],
		"flint": {
			"name": "reduceTypeParameters",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-reduce-type-parameter",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-reduce-type-parameter.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-redundant-type-constituents",
				"url": "https://typescript-eslint.io/rules/no-redundant-type-constituents"
			}
		],
		"flint": {
			"name": "redundantTypeConstituents",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-redundant-type-constituents",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-redundant-type-constituents.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-reflect-apply",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-reflect-apply.md"
			}
		],
		"flint": {
			"name": "reflectApplies",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-reflect-apply",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-reflect-apply.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "regexp/no-missing-g-flag",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-missing-g-flag.html"
			}
		],
		"flint": {
			"name": "regexAllGlobalFlags",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/bad-replace-all-arg",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-replace-all-arg.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "regexp/strict",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/strict.html"
			}
		],
		"flint": {
			"name": "regexAmbiguousInvalidity",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-character-class",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-character-class.html"
			}
		],
		"flint": {
			"name": "regexCharacterClasses",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-range",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-range.html"
			}
		],
		"flint": {
			"name": "regexCharacterClassRanges",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-set-operation",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-set-operation.html"
			}
		],
		"flint": {
			"name": "regexCharacterClassSetOperations",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/negation",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/negation.html"
			}
		],
		"flint": {
			"name": "regexConciseCharacterClassNegations",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/better-regex",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/better-regex.md"
			}
		],
		"flint": {
			"name": "regexConciseness",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Superseded by other regex cleanliness rules"
	},
	{
		"biome": [
			{
				"name": "noAdjacentSpacesInRegex",
				"url": "https://biomejs.dev/linter/rules/noAdjacentSpacesInRegex"
			}
		],
		"deno": [
			{
				"name": "no-regex-spaces",
				"url": "https://docs.deno.com/lint/rules/no-regex-spaces"
			}
		],
		"eslint": [
			{
				"name": "no-regex-spaces",
				"url": "https://eslint.org/docs/latest/rules/no-regex-spaces"
			}
		],
		"flint": {
			"name": "regexConsecutiveSpaces",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-regex-spaces",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-regex-spaces.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "regexp/no-contradiction-with-assertion",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-contradiction-with-assertion.html"
			}
		],
		"flint": {
			"name": "regexContradictoryAssertions",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/control-character-escape",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/control-character-escape.html"
			}
		],
		"flint": {
			"name": "regexControlCharacterEscapes",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noControlCharactersInRegex",
				"url": "https://biomejs.dev/linter/rules/noControlCharactersInRegex"
			}
		],
		"deno": [
			{
				"name": "no-control-regex",
				"url": "https://docs.deno.com/lint/rules/no-control-regex"
			}
		],
		"eslint": [
			{
				"name": "no-control-regex",
				"url": "https://eslint.org/docs/latest/rules/no-control-regex"
			},
			{
				"name": "regexp/no-control-character",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-control-character.html"
			}
		],
		"flint": {
			"name": "regexControlCharacters",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-control-regex",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-control-regex.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-d",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-d.html"
			}
		],
		"flint": {
			"name": "regexDigitMatchers",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "no-div-regex",
				"url": "https://eslint.org/docs/latest/rules/no-div-regex"
			}
		],
		"flint": {
			"name": "regexDivisionStarts",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-div-regex",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-div-regex.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-escape-replacement-dollar-char",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-escape-replacement-dollar-char.html"
			}
		],
		"flint": {
			"name": "regexDollarEscapes",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-dupe-characters-character-class",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-dupe-characters-character-class.html"
			}
		],
		"flint": {
			"name": "regexDuplicateCharacterClassCharacters",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-dupe-disjunctions",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-dupe-disjunctions.html"
			}
		],
		"flint": {
			"name": "regexDuplicateDisjunctions",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-empty-alternative",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-alternative.html"
			}
		],
		"flint": {
			"name": "regexEmptyAlternatives",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-empty-capturing-group",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-capturing-group.html"
			}
		],
		"flint": {
			"name": "regexEmptyCapturingGroups",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-empty-character-class",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-character-class.html"
			}
		],
		"flint": {
			"name": "regexEmptyCharacterClasses",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-empty-group",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-group.html"
			}
		],
		"flint": {
			"name": "regexEmptyGroups",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-lazy-ends",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-lazy-ends.html"
			}
		],
		"flint": {
			"name": "regexEmptyLazyQuantifiers",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-empty-lookarounds-assertion",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-lookarounds-assertion.html"
			}
		],
		"flint": {
			"name": "regexEmptyLookaroundsAssertions",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-empty-string-literal",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-string-literal.html"
			}
		],
		"flint": {
			"name": "regexEmptyStringLiterals",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-escape-backspace",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-escape-backspace.html"
			}
		],
		"flint": {
			"name": "regexEscapeBackspaces",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-regexp-exec",
				"url": "https://typescript-eslint.io/rules/prefer-regexp-exec"
			},
			{
				"name": "regexp/prefer-regexp-exec",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-regexp-exec.html"
			}
		],
		"flint": {
			"name": "regexExecutors",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/grapheme-string-literal",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/grapheme-string-literal.html"
			}
		],
		"flint": {
			"name": "regexGraphemeStringLiterals",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/hexadecimal-escape",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/hexadecimal-escape.html"
			}
		],
		"flint": {
			"name": "regexHexadecimalEscapes",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/use-ignore-case",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/use-ignore-case.html"
			}
		],
		"flint": {
			"name": "regexIgnoreCaseFlags",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-invisible-character",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-invisible-character.html"
			}
		],
		"flint": {
			"name": "regexInvisibleCharacters",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-legacy-features",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-legacy-features.html"
			}
		],
		"flint": {
			"name": "regexLegacyFeatures",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/letter-case",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/letter-case.html"
			}
		],
		"flint": {
			"name": "regexLetterCasing",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"biome": [
			{
				"name": "useRegexLiterals",
				"url": "https://biomejs.dev/linter/rules/useRegexLiterals"
			}
		],
		"eslint": [
			{
				"name": "prefer-regex-literals",
				"url": "https://eslint.org/docs/latest/rules/prefer-regex-literals"
			}
		],
		"flint": {
			"name": "regexLiterals",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-lookaround",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-lookaround.html"
			}
		],
		"flint": {
			"name": "regexLookaroundAssertions",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/optimal-lookaround-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/optimal-lookaround-quantifier.html"
			}
		],
		"flint": {
			"name": "regexLookaroundQuantifierOptimizations",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/match-any",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/match-any.html"
			}
		],
		"flint": {
			"name": "regexMatchNotation",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-misleading-capturing-group",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-misleading-capturing-group.html"
			}
		],
		"flint": {
			"name": "regexMisleadingCapturingGroups",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/confusing-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/confusing-quantifier.html"
			}
		],
		"flint": {
			"name": "regexMisleadingQuantifiers",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noMisleadingCharacterClass",
				"url": "https://biomejs.dev/linter/rules/noMisleadingCharacterClass"
			}
		],
		"eslint": [
			{
				"name": "no-misleading-character-class",
				"url": "https://eslint.org/docs/latest/rules/no-misleading-character-class"
			},
			{
				"name": "regexp/no-misleading-unicode-character",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-misleading-unicode-character.html"
			}
		],
		"flint": {
			"name": "regexMisleadingUnicodeCharacters",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-named-backreference",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-named-backreference.html"
			}
		],
		"flint": {
			"name": "regexNamedBackreferences",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "prefer-named-capture-group",
				"url": "https://eslint.org/docs/latest/rules/prefer-named-capture-group"
			},
			{
				"name": "regexp/prefer-named-capture-group",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-named-capture-group.html"
			}
		],
		"flint": {
			"name": "regexNamedCaptureGroups",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-named-replacement",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-named-replacement.html"
			}
		],
		"flint": {
			"name": "regexNamedReplacements",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-non-standard-flag",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-non-standard-flag.html"
			}
		],
		"flint": {
			"name": "regexNonStandardFlags",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-obscure-range",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-obscure-range.html"
			}
		],
		"flint": {
			"name": "regexObscureRanges",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-octal",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-octal.html"
			}
		],
		"flint": {
			"name": "regexOctalEscapes",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-plus-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-plus-quantifier.html"
			}
		],
		"flint": {
			"name": "regexPlusQuantifiers",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-predefined-assertion",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-predefined-assertion.html"
			}
		],
		"flint": {
			"name": "regexPredefinedAssertions",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/optimal-quantifier-concatenation",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/optimal-quantifier-concatenation.html"
			}
		],
		"flint": {
			"name": "regexQuantifierOptimizations",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-question-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-question-quantifier.html"
			}
		],
		"flint": {
			"name": "regexQuestionQuantifiers",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-quantifier.html"
			}
		],
		"flint": {
			"name": "regexRepeatQuantifiers",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-result-array-groups",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-result-array-groups.html"
			}
		],
		"flint": {
			"name": "regexResultArrayGroups",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/simplify-set-operations",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/simplify-set-operations.html"
			}
		],
		"flint": {
			"name": "regexSetOperationOptimizations",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-standalone-backslash",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-standalone-backslash.html"
			}
		],
		"flint": {
			"name": "regexStandaloneBackslashes",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-star-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-star-quantifier.html"
			}
		],
		"flint": {
			"name": "regexStarQuantifiers",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-super-linear-backtracking",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-super-linear-backtracking.html"
			}
		],
		"flint": {
			"name": "regexSuperLinearBacktracking",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-super-linear-move",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-super-linear-move.html"
			}
		],
		"flint": {
			"name": "regexSuperLinearMoves",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-regexp-test",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-regexp-test.html"
			},
			{
				"name": "unicorn/prefer-regexp-test",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-regexp-test.md"
			}
		],
		"flint": {
			"name": "regexTestMethods",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-regexp-test",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-regexp-test.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useTopLevelRegex",
				"url": "https://biomejs.dev/linter/rules/useTopLevelRegex"
			}
		],
		"flint": {
			"name": "regexTopLevelDeclarations",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-unicode-codepoint-escapes",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-unicode-codepoint-escapes.html"
			}
		],
		"flint": {
			"name": "regexUnicodeCodepointEscapes",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/unicode-escape",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/unicode-escape.html"
			}
		],
		"flint": {
			"name": "regexUnicodeEscapes",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "require-unicode-regexp",
				"url": "https://eslint.org/docs/latest/rules/require-unicode-regexp"
			},
			{
				"name": "regexp/require-unicode-regexp",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/require-unicode-regexp.html"
			}
		],
		"flint": {
			"name": "regexUnicodeFlag",
			"plugin": "ts",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/unicode-property",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/unicode-property.html"
			}
		],
		"flint": {
			"name": "regexUnicodeProperties",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/require-unicode-sets-regexp",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/require-unicode-sets-regexp.html"
			}
		],
		"flint": {
			"name": "regexUnicodeSetsFlag",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-useless-assertions",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-assertions.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryAssertions",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noUselessRegexBackrefs",
				"url": "https://biomejs.dev/linter/rules/noUselessRegexBackrefs"
			}
		],
		"eslint": [
			{
				"name": "no-useless-backreference",
				"url": "https://eslint.org/docs/latest/rules/no-useless-backreference"
			},
			{
				"name": "regexp/no-useless-backreference",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-backreference.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryBackreferences",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-backreference",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-backreference.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "regexp/no-useless-character-class",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-character-class.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryCharacterClasses",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-useless-range",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-range.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryCharacterRanges",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-useless-string-literal",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-string-literal.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryDisjunctions",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-useless-dollar-replacements",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-dollar-replacements.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryDollarReplacements",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-useless-escape",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-escape.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryEscapes",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-escape",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-escape.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "regexp/no-extra-lookaround-assertions",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-extra-lookaround-assertions.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryLookaroundAssertions",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-trivially-nested-assertion",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-trivially-nested-assertion.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryNestedAssertions",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-trivially-nested-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-trivially-nested-quantifier.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryNestedQuantifiers",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-useless-non-capturing-group",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-non-capturing-group.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryNonCapturingGroups",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-useless-two-nums-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-two-nums-quantifier.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryNumericQuantifiers",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-optional-assertion",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-optional-assertion.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryOptionalAssertions",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-potentially-useless-backreference",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-potentially-useless-backreference.html"
			}
		],
		"flint": {
			"name": "regexUnnecessaryReferentialBackreferences",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-useless-set-operand",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-set-operand.html"
			}
		],
		"flint": {
			"name": "regexUnnecessarySetOperands",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-unused-capturing-group",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-unused-capturing-group.html"
			}
		],
		"flint": {
			"name": "regexUnusedCapturingGroups",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-useless-flag",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-flag.html"
			}
		],
		"flint": {
			"name": "regexUnusedFlags",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-useless-lazy",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-lazy.html"
			}
		],
		"flint": {
			"name": "regexUnusedLazyQuantifiers",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-useless-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-quantifier.html"
			}
		],
		"flint": {
			"name": "regexUnusedQuantifiers",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"deno": [
			{
				"name": "no-invalid-regexp",
				"url": "https://docs.deno.com/lint/rules/no-invalid-regexp"
			}
		],
		"eslint": [
			{
				"name": "no-invalid-regexp",
				"url": "https://eslint.org/docs/latest/rules/no-invalid-regexp"
			},
			{
				"name": "regexp/no-invalid-regexp",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-invalid-regexp.html"
			}
		],
		"flint": {
			"name": "regexValidity",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-invalid-regexp",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-invalid-regexp.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "regexp/prefer-w",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-w.html"
			}
		],
		"flint": {
			"name": "regexWordMatchers",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "regexp/no-zero-quantifier",
				"url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-zero-quantifier.html"
			}
		],
		"flint": {
			"name": "regexZeroQuantifiers",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noCommonJs",
				"url": "https://biomejs.dev/linter/rules/noCommonJs"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-require-imports",
				"url": "https://typescript-eslint.io/rules/no-require-imports"
			}
		],
		"flint": {
			"name": "requireImports",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-require-imports",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-require-imports.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useStaticResponseMethods",
				"url": "https://biomejs.dev/linter/rules/useStaticResponseMethods"
			}
		],
		"flint": {
			"name": "responseMethods",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "@eslint-community/eslint-comments/no-use",
				"url": "https://eslint-community.github.io/eslint-comments.html"
			}
		],
		"flint": {
			"name": "restrictedDirectives",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "no-restricted-exports",
				"url": "https://eslint.org/docs/latest/rules/no-restricted-exports"
			}
		],
		"flint": {
			"name": "restrictedExports",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noRestrictedGlobals",
				"url": "https://biomejs.dev/linter/rules/noRestrictedGlobals"
			}
		],
		"eslint": [
			{
				"name": "no-restricted-globals",
				"url": "https://eslint.org/docs/latest/rules/no-restricted-globals"
			}
		],
		"flint": {
			"name": "restrictedGlobals",
			"plugin": "ts",
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "eslint/no-restricted-globals",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-restricted-globals.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "id-denylist",
				"url": "https://eslint.org/docs/latest/rules/id-denylist"
			}
		],
		"flint": {
			"name": "restrictedIdentifiers",
			"plugin": "ts",
			"preset": "None"
		}
	},
	{
		"biome": [
			{
				"name": "noRestrictedImports",
				"url": "https://biomejs.dev/linter/rules/noRestrictedImports"
			}
		],
		"eslint": [
			{
				"name": "no-restricted-imports",
				"url": "https://eslint.org/docs/latest/rules/no-restricted-imports"
			},
			{
				"name": "@typescript-eslint/no-restricted-imports",
				"url": "https://typescript-eslint.io/rules/no-restricted-imports"
			}
		],
		"flint": {
			"name": "restrictedImports",
			"plugin": "ts",
			"preset": "None"
		},
		"oxlint": [
			{
				"name": "eslint/no-restricted-imports",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-restricted-imports.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "jsdoc/no-restricted-syntax",
				"url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/HEAD/docs/rules/no-restricted-syntax.md"
			}
		],
		"flint": {
			"name": "restrictedJSDocs",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "no-restricted-properties",
				"url": "https://eslint.org/docs/latest/rules/no-restricted-properties"
			}
		],
		"flint": {
			"name": "restrictedProperties",
			"plugin": "ts",
			"preset": "None"
		}
	},
	{
		"eslint": [
			{
				"name": "no-restricted-syntax",
				"url": "https://eslint.org/docs/latest/rules/no-restricted-syntax"
			}
		],
		"flint": {
			"name": "restrictedSyntax",
			"plugin": "ts",
			"preset": "None"
		}
	},
	{
		"biome": [
			{
				"name": "noBannedTypes",
				"url": "https://biomejs.dev/linter/rules/noBannedTypes"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-restricted-types",
				"url": "https://typescript-eslint.io/rules/no-restricted-types"
			}
		],
		"flint": {
			"name": "restrictedTypes",
			"plugin": "ts",
			"preset": "None"
		}
	},
	{
		"flint": {
			"name": "restSpreadProperties",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "oxc/no-rest-spread-properties",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-rest-spread-properties.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-return-assign",
				"url": "https://eslint.org/docs/latest/rules/no-return-assign"
			}
		],
		"flint": {
			"implemented": true,
			"name": "returnAssignments",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-return-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-return-assign.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/return-await",
				"url": "https://typescript-eslint.io/rules/return-await"
			}
		],
		"flint": {
			"name": "returnAwaitPromises",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/return-await",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/return-await.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-return-this-type",
				"url": "https://typescript-eslint.io/rules/prefer-return-this-type"
			}
		],
		"flint": {
			"name": "returnThisTypes",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "typescript/prefer-return-this-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-return-this-type.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noSelfAssign",
				"url": "https://biomejs.dev/linter/rules/noSelfAssign"
			}
		],
		"deno": [
			{
				"name": "no-self-assign",
				"url": "https://docs.deno.com/lint/rules/no-self-assign"
			}
		],
		"eslint": [
			{
				"name": "no-self-assign",
				"url": "https://eslint.org/docs/latest/rules/no-self-assign"
			}
		],
		"flint": {
			"name": "selfAssignments",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-self-assign",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-self-assign.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noSelfCompare",
				"url": "https://biomejs.dev/linter/rules/noSelfCompare"
			}
		],
		"deno": [
			{
				"name": "no-self-compare",
				"url": "https://docs.deno.com/lint/rules/no-self-compare"
			}
		],
		"eslint": [
			{
				"name": "no-self-compare",
				"url": "https://eslint.org/docs/latest/rules/no-self-compare"
			}
		],
		"flint": {
			"name": "selfComparisons",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"notes": "Superseded by unnecessaryConditions",
		"oxlint": [
			{
				"name": "eslint/no-self-compare",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-self-compare.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noCommaOperator",
				"url": "https://biomejs.dev/linter/rules/noCommaOperator"
			}
		],
		"eslint": [
			{
				"name": "no-sequences",
				"url": "https://eslint.org/docs/latest/rules/no-sequences"
			}
		],
		"flint": {
			"implemented": true,
			"name": "sequences",
			"plugin": "ts",
			"preset": "Untyped"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-set-has",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-set-has.md"
			}
		],
		"flint": {
			"name": "setHasExistenceChecks",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-set-has",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-set-has.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-set-size",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-set-size.md"
			}
		],
		"flint": {
			"name": "setSizeLengthChecks",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-set-size",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-set-size.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noSetterReturn",
				"url": "https://biomejs.dev/linter/rules/noSetterReturn"
			}
		],
		"deno": [
			{
				"name": "no-setter-return",
				"url": "https://docs.deno.com/lint/rules/no-setter-return"
			}
		],
		"eslint": [
			{
				"name": "no-setter-return",
				"url": "https://eslint.org/docs/latest/rules/no-setter-return"
			}
		],
		"flint": {
			"name": "setterReturns",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-setter-return",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-setter-return.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noShadowRestrictedNames",
				"url": "https://biomejs.dev/linter/rules/noShadowRestrictedNames"
			}
		],
		"deno": [
			{
				"name": "no-shadow-restricted-names",
				"url": "https://docs.deno.com/lint/rules/no-shadow-restricted-names"
			}
		],
		"eslint": [
			{
				"name": "no-shadow-restricted-names",
				"url": "https://eslint.org/docs/latest/rules/no-shadow-restricted-names"
			}
		],
		"flint": {
			"name": "shadowedRestrictedNames",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-shadow-restricted-names",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-shadow-restricted-names.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noShadow",
				"url": "https://biomejs.dev/linter/rules/noShadow"
			}
		],
		"eslint": [
			{
				"name": "no-shadow",
				"url": "https://eslint.org/docs/latest/rules/no-shadow"
			},
			{
				"name": "@typescript-eslint/no-shadow",
				"url": "https://typescript-eslint.io/rules/no-shadow"
			}
		],
		"flint": {
			"name": "shadows",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"biome": [
			{
				"name": "noShoutyConstants",
				"url": "https://biomejs.dev/linter/rules/noShoutyConstants"
			}
		],
		"flint": {
			"name": "shoutyConstants",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "useSingleVarDeclarator",
				"url": "https://biomejs.dev/linter/rules/useSingleVarDeclarator"
			}
		],
		"deno": [
			{
				"name": "single-var-declarator",
				"url": "https://docs.deno.com/lint/rules/single-var-declarator"
			}
		],
		"eslint": [
			{
				"name": "one-var",
				"url": "https://eslint.org/docs/latest/rules/one-var"
			}
		],
		"flint": {
			"name": "singleVariableDeclarations",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "useExplicitLengthCheck",
				"url": "https://biomejs.dev/linter/rules/useExplicitLengthCheck"
			}
		],
		"eslint": [
			{
				"name": "unicorn/explicit-length-check",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/explicit-length-check.md"
			}
		],
		"flint": {
			"name": "sizeComparisonOperators",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/explicit-length-check",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/explicit-length-check.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "no-slow-types",
				"url": "https://docs.deno.com/lint/rules/no-slow-types"
			}
		],
		"flint": {
			"name": "slowTypes",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noSparseArray",
				"url": "https://biomejs.dev/linter/rules/noSparseArray"
			}
		],
		"deno": [
			{
				"name": "no-sparse-arrays",
				"url": "https://docs.deno.com/lint/rules/no-sparse-arrays"
			}
		],
		"eslint": [
			{
				"name": "no-sparse-arrays",
				"url": "https://eslint.org/docs/latest/rules/no-sparse-arrays"
			}
		],
		"flint": {
			"implemented": true,
			"name": "sparseArrays",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-sparse-arrays",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-sparse-arrays.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noStaticOnlyClass",
				"url": "https://biomejs.dev/linter/rules/noStaticOnlyClass"
			}
		],
		"eslint": [
			{
				"name": "unicorn/no-static-only-class",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-static-only-class.md"
			}
		],
		"flint": {
			"name": "staticMemberOnlyClasses",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-static-only-class",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-static-only-class.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useStrictMode",
				"url": "https://biomejs.dev/linter/rules/useStrictMode"
			}
		],
		"flint": {
			"name": "strictMode",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noStringCaseMismatch",
				"url": "https://biomejs.dev/linter/rules/noStringCaseMismatch"
			}
		],
		"flint": {
			"name": "stringCaseMismatches",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-code-point",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-code-point.md"
			}
		],
		"flint": {
			"name": "stringCodePoints",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-code-point",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-code-point.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useTemplate",
				"url": "https://biomejs.dev/linter/rules/useTemplate"
			}
		],
		"eslint": [
			{
				"name": "prefer-template",
				"url": "https://eslint.org/docs/latest/rules/prefer-template"
			}
		],
		"flint": {
			"name": "stringConcatenationTemplates",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/prefer-template",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-template.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/string-content",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/string-content.md"
			}
		],
		"flint": {
			"name": "stringContents",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-string-raw",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-string-raw.md"
			}
		],
		"flint": {
			"name": "stringRawEscapes",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-string-raw",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-raw.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-string-replace-all",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-string-replace-all.md"
			}
		],
		"flint": {
			"name": "stringReplaceAllRegexSearches",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-string-replace-all",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-replace-all.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noSubstr",
				"url": "https://biomejs.dev/linter/rules/noSubstr"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-string-slice",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-string-slice.md"
			}
		],
		"flint": {
			"name": "stringSliceMethods",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-string-slice",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-slice.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/prefer-string-starts-ends-with",
				"url": "https://typescript-eslint.io/rules/prefer-string-starts-ends-with"
			}
		],
		"flint": {
			"name": "stringStartsEndsWith",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-string-starts-ends-with",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-starts-ends-with.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-string-starts-ends-with",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-string-starts-ends-with.md"
			}
		],
		"flint": {
			"name": "stringStartsEndsWithMethods",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noTemplateCurlyInString",
				"url": "https://biomejs.dev/linter/rules/noTemplateCurlyInString"
			}
		],
		"eslint": [
			{
				"name": "no-template-curly-in-string",
				"url": "https://eslint.org/docs/latest/rules/no-template-curly-in-string"
			}
		],
		"flint": {
			"name": "stringTemplateCurlies",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-template-curly-in-string",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-template-curly-in-string.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useTrimStartEnd",
				"url": "https://biomejs.dev/linter/rules/useTrimStartEnd"
			}
		],
		"eslint": [
			{
				"name": "unicorn/prefer-string-trim-start-end",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-string-trim-start-end.md"
			}
		],
		"flint": {
			"name": "stringTrimMethods",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-string-trim-start-end",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-trim-start-end.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-structured-clone",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-structured-clone.md"
			}
		],
		"flint": {
			"name": "structuredCloneMethods",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-structured-clone",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-structured-clone.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/switch-case-braces",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/switch-case-braces.md"
			}
		],
		"flint": {
			"name": "switchCaseBraces",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/switch-case-braces",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/switch-case-braces.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useExhaustiveSwitchCases",
				"url": "https://biomejs.dev/linter/rules/useExhaustiveSwitchCases"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/switch-exhaustiveness-check",
				"url": "https://typescript-eslint.io/rules/switch-exhaustiveness-check"
			}
		],
		"flint": {
			"name": "switchExhaustiveness",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "typescript/switch-exhaustiveness-check",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/switch-exhaustiveness-check.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useSymbolDescription",
				"url": "https://biomejs.dev/linter/rules/useSymbolDescription"
			}
		],
		"eslint": [
			{
				"name": "symbol-description",
				"url": "https://eslint.org/docs/latest/rules/symbol-description"
			}
		],
		"flint": {
			"implemented": true,
			"name": "symbolDescriptions",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/symbol-description",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/symbol-description.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "no-await-in-sync-fun",
				"url": "https://docs.deno.com/lint/rules/no-await-in-sync-fun"
			}
		],
		"flint": {
			"name": "syncFunctionAwaits",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Generally handled by parsers."
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/restrict-template-expressions",
				"url": "https://typescript-eslint.io/rules/restrict-template-expressions"
			}
		],
		"flint": {
			"name": "templateExpressionValues",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/restrict-template-expressions",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/restrict-template-expressions.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/template-indent",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/template-indent.md"
			}
		],
		"flint": {
			"name": "templateIndents",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noNestedTernary",
				"url": "https://biomejs.dev/linter/rules/noNestedTernary"
			}
		],
		"eslint": [
			{
				"name": "no-nested-ternary",
				"url": "https://eslint.org/docs/latest/rules/no-nested-ternary"
			},
			{
				"name": "unicorn/no-nested-ternary",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-nested-ternary.md"
			}
		],
		"flint": {
			"name": "ternaryNesting",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-nested-ternary",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-nested-ternary.html"
			},
			{
				"name": "unicorn/no-nested-ternary",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-nested-ternary.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-ternary",
				"url": "https://eslint.org/docs/latest/rules/no-ternary"
			}
		],
		"flint": {
			"name": "ternaryOperators",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-ternary",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-ternary.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/text-encoding-identifier-case",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/text-encoding-identifier-case.md"
			}
		],
		"flint": {
			"name": "textEncodingCases",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/text-encoding-identifier-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/text-encoding-identifier-case.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "consistent-this",
				"url": "https://eslint.org/docs/latest/rules/consistent-this"
			}
		],
		"flint": {
			"name": "thisAliases",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noUnreachableSuper",
				"url": "https://biomejs.dev/linter/rules/noUnreachableSuper"
			}
		],
		"deno": [
			{
				"name": "no-this-before-super",
				"url": "https://docs.deno.com/lint/rules/no-this-before-super"
			}
		],
		"eslint": [
			{
				"name": "no-this-before-super",
				"url": "https://eslint.org/docs/latest/rules/no-this-before-super"
			}
		],
		"flint": {
			"name": "thisBeforeSuper",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-this-before-super",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-this-before-super.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noThisInStatic",
				"url": "https://biomejs.dev/linter/rules/noThisInStatic"
			}
		],
		"flint": {
			"name": "thisInStatic",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "useThrowOnlyError",
				"url": "https://biomejs.dev/linter/rules/useThrowOnlyError"
			}
		],
		"deno": [
			{
				"name": "no-throw-literal",
				"url": "https://docs.deno.com/lint/rules/no-throw-literal"
			}
		],
		"eslint": [
			{
				"name": "no-throw-literal",
				"url": "https://eslint.org/docs/latest/rules/no-throw-literal"
			},
			{
				"name": "@typescript-eslint/only-throw-errors",
				"url": "https://typescript-eslint.io/rules/only-throw-errors"
			},
			{
				"name": "unicorn/throw-new-error",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/throw-new-error.md"
			}
		],
		"flint": {
			"name": "throwErrors",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-throw-literal",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-throw-literal.html"
			},
			{
				"name": "typescript/only-throw-error",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/only-throw-error.html"
			},
			{
				"name": "unicorn/throw-new-error",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/throw-new-error.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "ban-untagged-todo",
				"url": "https://docs.deno.com/lint/rules/ban-untagged-todo"
			}
		],
		"eslint": [
			{
				"name": "unicorn/expiring-todo-comments",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/expiring-todo-comments.md"
			}
		],
		"flint": {
			"name": "todoExpirations",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-top-level-await",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-top-level-await.md"
			}
		],
		"flint": {
			"name": "topLevelAwaits",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"deno": [
			{
				"name": "triple-slash-reference",
				"url": "https://docs.deno.com/lint/rules/triple-slash-reference"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/triple-slash-reference",
				"url": "https://typescript-eslint.io/rules/triple-slash-reference"
			}
		],
		"flint": {
			"name": "tripleSlashReferences",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/triple-slash-reference",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/triple-slash-reference.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "no-invalid-triple-slash-references",
				"url": "https://docs.deno.com/lint/rules/no-invalid-triple-slash-references"
			}
		],
		"flint": {
			"name": "tripleSlashReferenceValidity",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noTsIgnore",
				"url": "https://biomejs.dev/linter/rules/noTsIgnore"
			}
		],
		"deno": [
			{
				"name": "ban-ts-comment",
				"url": "https://docs.deno.com/lint/rules/ban-ts-comment"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/ban-ts-comment",
				"url": "https://typescript-eslint.io/rules/ban-ts-comment"
			}
		],
		"flint": {
			"name": "tsComments",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/ban-ts-comment",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/ban-ts-comment.html"
			},
			{
				"name": "typescript/prefer-ts-expect-error",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-ts-expect-error.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/ban-tslint-comment",
				"url": "https://typescript-eslint.io/rules/ban-tslint-comment"
			}
		],
		"flint": {
			"name": "tslintComments",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/ban-tslint-comment",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/ban-tslint-comment.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/consistent-type-assertions",
				"url": "https://typescript-eslint.io/rules/consistent-type-assertions"
			}
		],
		"flint": {
			"name": "typeAssertions",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-type-error",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-type-error.md"
			}
		],
		"flint": {
			"name": "typeChecksTypeErrors",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-type-error",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-type-error.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-duplicate-type-constituents",
				"url": "https://typescript-eslint.io/rules/no-duplicate-type-constituents"
			}
		],
		"flint": {
			"name": "typeConstituentDuplicates",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-duplicate-type-constituents",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-duplicate-type-constituents.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "consistentTypeExports",
				"url": "https://biomejs.dev/linter/rules/consistentTypeExports"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/consistent-type-exports",
				"url": "https://typescript-eslint.io/rules/consistent-type-exports"
			}
		],
		"flint": {
			"name": "typeExports",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"biome": [
			{
				"name": "consistentTypeImports",
				"url": "https://biomejs.dev/linter/rules/consistentTypeImports"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/consistent-type-imports",
				"url": "https://typescript-eslint.io/rules/consistent-type-imports"
			},
			{
				"name": "import/consistent-type-specifier-style",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/consistent-type-specifier-style.md"
			}
		],
		"flint": {
			"name": "typeImports",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "import/consistent-type-specifier-style",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/consistent-type-specifier-style.html"
			},
			{
				"name": "typescript/consistent-type-imports",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/consistent-type-imports.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useValidTypeof",
				"url": "https://biomejs.dev/linter/rules/useValidTypeof"
			}
		],
		"deno": [
			{
				"name": "valid-typeof",
				"url": "https://docs.deno.com/lint/rules/valid-typeof"
			}
		],
		"eslint": [
			{
				"name": "valid-typeof",
				"url": "https://eslint.org/docs/latest/rules/valid-typeof"
			}
		],
		"flint": {
			"name": "typeofComparisons",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/valid-typeof",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/valid-typeof.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "import/no-unassigned-import",
				"url": "https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-unassigned-import.md"
			}
		],
		"flint": {
			"name": "unassignedImports",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "import/no-unassigned-import",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-unassigned-import.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUnassignedVariables",
				"url": "https://biomejs.dev/linter/rules/noUnassignedVariables"
			}
		],
		"eslint": [
			{
				"name": "no-unassigned-vars",
				"url": "https://eslint.org/docs/latest/rules/no-unassigned-vars"
			}
		],
		"flint": {
			"implemented": true,
			"name": "unassignedVariables",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-unassigned-vars",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unassigned-vars.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/unbound-method",
				"url": "https://typescript-eslint.io/rules/unbound-method"
			}
		],
		"flint": {
			"name": "unboundMethods",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/unbound-method",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/unbound-method.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUselessUndefinedInitialization",
				"url": "https://biomejs.dev/linter/rules/noUselessUndefinedInitialization"
			}
		],
		"deno": [
			{
				"name": "no-undef",
				"url": "https://docs.deno.com/lint/rules/no-undef"
			}
		],
		"eslint": [
			{
				"name": "no-undef-init",
				"url": "https://eslint.org/docs/latest/rules/no-undef-init"
			}
		],
		"flint": {
			"name": "undefinedInitialValues",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "no-undefined",
				"url": "https://eslint.org/docs/latest/rules/no-undefined"
			}
		],
		"flint": {
			"name": "undefinedNames",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-undefined",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-undefined.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-typeof-undefined",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-typeof-undefined.md"
			}
		],
		"flint": {
			"name": "undefinedTypeofChecks",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/no-typeof-undefined",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-typeof-undefined.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUndeclaredVariables",
				"url": "https://biomejs.dev/linter/rules/noUndeclaredVariables"
			}
		],
		"eslint": [
			{
				"name": "no-undef",
				"url": "https://eslint.org/docs/latest/rules/no-undef"
			}
		],
		"flint": {
			"implemented": true,
			"name": "undefinedVariables",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-undef",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-undef.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-underscore-dangle",
				"url": "https://eslint.org/docs/latest/rules/no-underscore-dangle"
			}
		],
		"flint": {
			"name": "underscoreNames",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "unicode-bom",
				"url": "https://eslint.org/docs/latest/rules/unicode-bom"
			}
		],
		"flint": {
			"implemented": true,
			"name": "unicodeBOMs",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/unicode-bom",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/unicode-bom.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useUnifiedTypeSignatures",
				"url": "https://biomejs.dev/linter/rules/useUnifiedTypeSignatures"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/unified-signatures",
				"url": "https://typescript-eslint.io/rules/unified-signatures"
			}
		],
		"flint": {
			"name": "unifiedSignatures",
			"plugin": "ts",
			"preset": "Logical",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "no-extra-bind",
				"url": "https://eslint.org/docs/latest/rules/no-extra-bind"
			}
		],
		"flint": {
			"name": "unnecessaryBind",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-extra-bind",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-extra-bind.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUselessLoneBlockStatements",
				"url": "https://biomejs.dev/linter/rules/noUselessLoneBlockStatements"
			}
		],
		"eslint": [
			{
				"name": "no-lone-blocks",
				"url": "https://eslint.org/docs/latest/rules/no-lone-blocks"
			}
		],
		"flint": {
			"name": "unnecessaryBlocks",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-lone-blocks",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-lone-blocks.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noExtraBooleanCast",
				"url": "https://biomejs.dev/linter/rules/noExtraBooleanCast"
			}
		],
		"deno": [
			{
				"name": "no-extra-boolean-cast",
				"url": "https://docs.deno.com/lint/rules/no-extra-boolean-cast"
			}
		],
		"eslint": [
			{
				"name": "no-extra-boolean-cast",
				"url": "https://eslint.org/docs/latest/rules/no-extra-boolean-cast"
			}
		],
		"flint": {
			"name": "unnecessaryBooleanCasts",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-extra-boolean-cast",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-extra-boolean-cast.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUselessCatch",
				"url": "https://biomejs.dev/linter/rules/noUselessCatch"
			}
		],
		"eslint": [
			{
				"name": "no-useless-catch",
				"url": "https://eslint.org/docs/latest/rules/no-useless-catch"
			}
		],
		"flint": {
			"implemented": true,
			"name": "unnecessaryCatches",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-catch",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-catch.html"
			}
		]
	},
	{
		"flint": {
			"name": "unnecessaryComparisons",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/const-comparisons",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/const-comparisons.html"
			},
			{
				"name": "oxc/double-comparisons",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/double-comparisons.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useLiteralKeys",
				"url": "https://biomejs.dev/linter/rules/useLiteralKeys"
			}
		],
		"eslint": [
			{
				"name": "no-useless-computed-key",
				"url": "https://eslint.org/docs/latest/rules/no-useless-computed-key"
			}
		],
		"flint": {
			"name": "unnecessaryComputedKeys",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"biome": [
			{
				"name": "noUselessStringConcat",
				"url": "https://biomejs.dev/linter/rules/noUselessStringConcat"
			}
		],
		"eslint": [
			{
				"name": "no-useless-concat",
				"url": "https://eslint.org/docs/latest/rules/no-useless-concat"
			}
		],
		"flint": {
			"name": "unnecessaryConcatentation",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-concat",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-concat.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUnnecessaryConditions",
				"url": "https://biomejs.dev/linter/rules/noUnnecessaryConditions"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-condition",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-condition"
			}
		],
		"flint": {
			"name": "unnecessaryConditions",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noUselessConstructor",
				"url": "https://biomejs.dev/linter/rules/noUselessConstructor"
			}
		],
		"eslint": [
			{
				"name": "no-useless-constructor",
				"url": "https://eslint.org/docs/latest/rules/no-useless-constructor"
			},
			{
				"name": "@typescript-eslint/no-useless-constructor",
				"url": "https://typescript-eslint.io/rules/no-useless-constructor"
			}
		],
		"flint": {
			"name": "unnecessaryConstructors",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-constructor",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-constructor.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUselessContinue",
				"url": "https://biomejs.dev/linter/rules/noUselessContinue"
			}
		],
		"flint": {
			"name": "unnecessaryContinues",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noUselessEscapeInRegex",
				"url": "https://biomejs.dev/linter/rules/noUselessEscapeInRegex"
			},
			{
				"name": "noUselessEscapeInString",
				"url": "https://biomejs.dev/linter/rules/noUselessEscapeInString"
			}
		],
		"eslint": [
			{
				"name": "no-useless-escape",
				"url": "https://eslint.org/docs/latest/rules/no-useless-escape"
			}
		],
		"flint": {
			"name": "unnecessaryEscapes",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "no-useless-call",
				"url": "https://eslint.org/docs/latest/rules/no-useless-call"
			}
		],
		"flint": {
			"name": "unnecessaryFunctionCurries",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-call",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-call.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUselessLabel",
				"url": "https://biomejs.dev/linter/rules/noUselessLabel"
			}
		],
		"eslint": [
			{
				"name": "no-extra-label",
				"url": "https://eslint.org/docs/latest/rules/no-extra-label"
			}
		],
		"flint": {
			"name": "unnecessaryLabels",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/no-extra-label",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-extra-label.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "useSimplifiedLogicExpression",
				"url": "https://biomejs.dev/linter/rules/useSimplifiedLogicExpression"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-boolean-literal-compare",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-boolean-literal-compare"
			}
		],
		"flint": {
			"name": "unnecessaryLogicalComparisons",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unnecessary-boolean-literal-compare",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-boolean-literal-compare.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noConstantMathMinMaxClamp",
				"url": "https://biomejs.dev/linter/rules/noConstantMathMinMaxClamp"
			}
		],
		"flint": {
			"name": "unnecessaryMathClamps",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "oxc/bad-min-max-func",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-min-max-func.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-zero-fractions",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-zero-fractions.md"
			}
		],
		"flint": {
			"name": "unnecessaryNumericFractions",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-zero-fractions",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-zero-fractions.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-unnecessary-polyfills",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-unnecessary-polyfills.md"
			}
		],
		"flint": {
			"name": "unnecessaryPolyfills",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Superseded by the e18e initiative"
	},
	{
		"biome": [
			{
				"name": "noUselessRename",
				"url": "https://biomejs.dev/linter/rules/noUselessRename"
			}
		],
		"deno": [
			{
				"name": "no-useless-rename",
				"url": "https://docs.deno.com/lint/rules/no-useless-rename"
			}
		],
		"eslint": [
			{
				"name": "no-useless-rename",
				"url": "https://eslint.org/docs/latest/rules/no-useless-rename"
			}
		],
		"flint": {
			"name": "unnecessaryRenames",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-useless-rename",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-rename.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-useless-return",
				"url": "https://eslint.org/docs/latest/rules/no-useless-return"
			}
		],
		"flint": {
			"name": "unnecessaryReturns",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-useless-spread",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-useless-spread.md"
			}
		],
		"flint": {
			"name": "unnecessarySpreads",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noUselessStringRaw",
				"url": "https://biomejs.dev/linter/rules/noUselessStringRaw"
			}
		],
		"flint": {
			"name": "unnecessaryStringRaws",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noUnusedTemplateLiteral",
				"url": "https://biomejs.dev/linter/rules/noUnusedTemplateLiteral"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-template-expression",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-template-expression"
			}
		],
		"flint": {
			"name": "unnecessaryTemplateExpressions",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unnecessary-template-expression",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-template-expression.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-logical-operator-over-ternary",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-logical-operator-over-ternary.md"
			}
		],
		"flint": {
			"name": "unnecessaryTernaries",
			"plugin": "ts",
			"preset": "Stylistic",
			"strictness": "Strict"
		},
		"oxlint": [
			{
				"name": "unicorn/prefer-logical-operator-over-ternary",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-logical-operator-over-ternary.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noInferrableTypes",
				"url": "https://biomejs.dev/linter/rules/noInferrableTypes"
			}
		],
		"deno": [
			{
				"name": "no-inferrable-types",
				"url": "https://docs.deno.com/lint/rules/no-inferrable-types"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-inferrable-types",
				"url": "https://typescript-eslint.io/rules/no-inferrable-types"
			}
		],
		"flint": {
			"name": "unnecessaryTypeAnnotations",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "typescript/no-inferrable-types",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-inferrable-types.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-type-arguments",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-type-arguments"
			}
		],
		"flint": {
			"name": "unnecessaryTypeArguments",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unnecessary-type-arguments",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-type-arguments.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-type-assertion",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-type-assertion"
			}
		],
		"flint": {
			"name": "unnecessaryTypeAssertions",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unnecessary-type-assertion",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-type-assertion.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUselessTypeConstraint",
				"url": "https://biomejs.dev/linter/rules/noUselessTypeConstraint"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-type-constraint",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-type-constraint"
			}
		],
		"flint": {
			"name": "unnecessaryTypeConstraints",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unnecessary-type-constraint",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-type-constraint.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-type-conversion",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-type-conversion"
			}
		],
		"flint": {
			"name": "unnecessaryTypeConversions",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unnecessary-type-parameters",
				"url": "https://typescript-eslint.io/rules/no-unnecessary-type-parameters"
			}
		],
		"flint": {
			"name": "unnecessaryTypeParameters",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noUselessUndefined",
				"url": "https://biomejs.dev/linter/rules/noUselessUndefined"
			}
		],
		"eslint": [
			{
				"name": "unicorn/no-useless-undefined",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-useless-undefined.md"
			}
		],
		"flint": {
			"name": "unnecessaryUndefinedDefaults",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-useless-undefined",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-undefined.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noRedundantUseStrict",
				"url": "https://biomejs.dev/linter/rules/noRedundantUseStrict"
			}
		],
		"flint": {
			"name": "unnecessaryUseStricts",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "no-unreachable-loop",
				"url": "https://eslint.org/docs/latest/rules/no-unreachable-loop"
			}
		],
		"flint": {
			"name": "unreachableLoops",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noUnreachable",
				"url": "https://biomejs.dev/linter/rules/noUnreachable"
			}
		],
		"deno": [
			{
				"name": "no-unreachable",
				"url": "https://docs.deno.com/lint/rules/no-unreachable"
			}
		],
		"eslint": [
			{
				"name": "no-unreachable",
				"url": "https://eslint.org/docs/latest/rules/no-unreachable"
			}
		],
		"flint": {
			"name": "unreachableStatements",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-unreachable",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unreachable.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUnsafeDeclarationMerging",
				"url": "https://biomejs.dev/linter/rules/noUnsafeDeclarationMerging"
			}
		],
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-declaration-merging",
				"url": "https://typescript-eslint.io/rules/no-unsafe-declaration-merging"
			}
		],
		"flint": {
			"name": "unsafeDeclarationmerging",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-declaration-merging",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-declaration-merging.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-enum-comparison",
				"url": "https://typescript-eslint.io/rules/no-unsafe-enum-comparison"
			}
		],
		"flint": {
			"name": "unsafeEnumComparisons",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-enum-comparison",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-enum-comparison.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUnsafeFinally",
				"url": "https://biomejs.dev/linter/rules/noUnsafeFinally"
			}
		],
		"deno": [
			{
				"name": "no-unsafe-finally",
				"url": "https://docs.deno.com/lint/rules/no-unsafe-finally"
			}
		],
		"eslint": [
			{
				"name": "no-unsafe-finally",
				"url": "https://eslint.org/docs/latest/rules/no-unsafe-finally"
			}
		],
		"flint": {
			"name": "unsafeFinallyStatements",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-unsafe-finally",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unsafe-finally.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-function-type",
				"url": "https://typescript-eslint.io/rules/no-unsafe-function-type"
			}
		],
		"flint": {
			"name": "unsafeFunctionTypes",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-function-type",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-function-type.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUnsafeNegation",
				"url": "https://biomejs.dev/linter/rules/noUnsafeNegation"
			}
		],
		"deno": [
			{
				"name": "no-unsafe-negation",
				"url": "https://docs.deno.com/lint/rules/no-unsafe-negation"
			}
		],
		"eslint": [
			{
				"name": "no-unsafe-negation",
				"url": "https://eslint.org/docs/latest/rules/no-unsafe-negation"
			}
		],
		"flint": {
			"implemented": true,
			"name": "unsafeNegations",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-unsafe-negation",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unsafe-negation.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUnsafeOptionalChaining",
				"url": "https://biomejs.dev/linter/rules/noUnsafeOptionalChaining"
			}
		],
		"eslint": [
			{
				"name": "no-unsafe-optional-chaining",
				"url": "https://eslint.org/docs/latest/rules/no-unsafe-optional-chaining"
			}
		],
		"flint": {
			"name": "unsafeOptionalChains",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-unsafe-optional-chaining",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unsafe-optional-chaining.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-base-to-string",
				"url": "https://typescript-eslint.io/rules/no-base-to-string"
			}
		],
		"flint": {
			"name": "unsafeToString",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-base-to-string",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-base-to-string.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-unsafe-unary-minus",
				"url": "https://typescript-eslint.io/rules/no-unsafe-unary-minus"
			}
		],
		"flint": {
			"name": "unsafeUnaryNegations",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "typescript/no-unsafe-unary-minus",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-unary-minus.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/prefer-optional-catch-binding",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/prefer-optional-catch-binding.md"
			}
		],
		"flint": {
			"name": "unusedCatchBindings",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"notes": "Superseded by unusedVariables",
		"oxlint": [
			{
				"name": "unicorn/prefer-optional-catch-binding",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-optional-catch-binding.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-unused-expressions",
				"url": "https://eslint.org/docs/latest/rules/no-unused-expressions"
			},
			{
				"name": "@typescript-eslint/no-unused-expressions",
				"url": "https://typescript-eslint.io/rules/no-unused-expressions"
			}
		],
		"flint": {
			"name": "unusedExpressions",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-unused-expressions",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unused-expressions.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUnusedLabels",
				"url": "https://biomejs.dev/linter/rules/noUnusedLabels"
			}
		],
		"deno": [
			{
				"name": "no-unused-labels",
				"url": "https://docs.deno.com/lint/rules/no-unused-labels"
			}
		],
		"eslint": [
			{
				"name": "no-unused-labels",
				"url": "https://eslint.org/docs/latest/rules/no-unused-labels"
			}
		],
		"flint": {
			"name": "unusedLabels",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-unused-labels",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unused-labels.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/no-unused-properties",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-unused-properties.md"
			}
		],
		"flint": {
			"name": "unusedObjectProperties",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noUnusedPrivateClassMembers",
				"url": "https://biomejs.dev/linter/rules/noUnusedPrivateClassMembers"
			}
		],
		"eslint": [
			{
				"name": "no-unused-private-class-members",
				"url": "https://eslint.org/docs/latest/rules/no-unused-private-class-members"
			}
		],
		"flint": {
			"name": "unusedPrivateClassMembers",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-unused-private-class-members",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unused-private-class-members.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noUselessSwitchCase",
				"url": "https://biomejs.dev/linter/rules/noUselessSwitchCase"
			}
		],
		"eslint": [
			{
				"name": "unicorn/no-useless-switch-case",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/no-useless-switch-case.md"
			}
		],
		"flint": {
			"name": "unusedSwitchStatements",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "unicorn/no-useless-switch-case",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-switch-case.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "no-useless-assignment",
				"url": "https://eslint.org/docs/latest/rules/no-useless-assignment"
			}
		],
		"flint": {
			"name": "unusedValues",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"biome": [
			{
				"name": "noUnusedFunctionParameters",
				"url": "https://biomejs.dev/linter/rules/noUnusedFunctionParameters"
			},
			{
				"name": "noUnusedVariables",
				"url": "https://biomejs.dev/linter/rules/noUnusedVariables"
			}
		],
		"deno": [
			{
				"name": "no-unused-vars",
				"url": "https://docs.deno.com/lint/rules/no-unused-vars"
			}
		],
		"eslint": [
			{
				"name": "no-unused-vars",
				"url": "https://eslint.org/docs/latest/rules/no-unused-vars"
			},
			{
				"name": "@typescript-eslint/no-unused-vars",
				"url": "https://typescript-eslint.io/rules/no-unused-vars"
			}
		],
		"flint": {
			"name": "unusedVariables",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-unused-vars",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unused-vars.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "unicorn/relative-url-style",
				"url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/HEAD/docs/rules/relative-url-style.md"
			}
		],
		"flint": {
			"name": "urlRelativity",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noInvalidUseBeforeDeclaration",
				"url": "https://biomejs.dev/linter/rules/noInvalidUseBeforeDeclaration"
			}
		],
		"eslint": [
			{
				"name": "no-use-before-define",
				"url": "https://eslint.org/docs/latest/rules/no-use-before-define"
			},
			{
				"name": "@typescript-eslint/no-use-before-define",
				"url": "https://typescript-eslint.io/rules/no-use-before-define"
			}
		],
		"flint": {
			"name": "usageBeforeDefinition",
			"plugin": "ts",
			"preset": "Untyped"
		}
	},
	{
		"eslint": [
			{
				"name": "strict",
				"url": "https://eslint.org/docs/latest/rules/strict"
			}
		],
		"flint": {
			"name": "useStrictDirectives",
			"plugin": "ts",
			"preset": "Untyped"
		}
	},
	{
		"biome": [
			{
				"name": "noVar",
				"url": "https://biomejs.dev/linter/rules/noVar"
			}
		],
		"deno": [
			{
				"name": "no-var",
				"url": "https://docs.deno.com/lint/rules/no-var"
			}
		],
		"eslint": [
			{
				"name": "no-var",
				"url": "https://eslint.org/docs/latest/rules/no-var"
			}
		],
		"flint": {
			"name": "varDeclarations",
			"plugin": "ts",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "block-scoped-var",
				"url": "https://eslint.org/docs/latest/rules/block-scoped-var"
			}
		],
		"flint": {
			"name": "variableBlockScopeUsage",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/block-scoped-var",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/block-scoped-var.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "init-declarations",
				"url": "https://eslint.org/docs/latest/rules/init-declarations"
			},
			{
				"name": "@typescript-eslint/init-declarations",
				"url": "https://typescript-eslint.io/rules/init-declarations"
			}
		],
		"flint": {
			"name": "variableDeclarationInitializations",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/init-declarations",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/init-declarations.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "sort-vars",
				"url": "https://eslint.org/docs/latest/rules/sort-vars"
			}
		],
		"flint": {
			"name": "variableDeclarationSorting",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/sort-vars",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/sort-vars.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "no-delete-var",
				"url": "https://docs.deno.com/lint/rules/no-delete-var"
			}
		],
		"eslint": [
			{
				"name": "no-delete-var",
				"url": "https://eslint.org/docs/latest/rules/no-delete-var"
			}
		],
		"flint": {
			"implemented": true,
			"name": "variableDeletions",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-delete-var",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-delete-var.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noRedeclare",
				"url": "https://biomejs.dev/linter/rules/noRedeclare"
			}
		],
		"deno": [
			{
				"name": "no-redeclare",
				"url": "https://docs.deno.com/lint/rules/no-redeclare"
			}
		],
		"eslint": [
			{
				"name": "no-redeclare",
				"url": "https://eslint.org/docs/latest/rules/no-redeclare"
			},
			{
				"name": "@typescript-eslint/no-redeclare",
				"url": "https://typescript-eslint.io/rules/no-redeclare"
			}
		],
		"flint": {
			"name": "variableRedeclarations",
			"plugin": "ts",
			"preset": "Untyped"
		},
		"oxlint": [
			{
				"name": "eslint/no-redeclare",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-redeclare.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "vars-on-top",
				"url": "https://eslint.org/docs/latest/rules/vars-on-top"
			}
		],
		"flint": {
			"name": "variablesOnTop",
			"plugin": "ts",
			"preset": "Not implementing"
		},
		"oxlint": [
			{
				"name": "eslint/vars-on-top",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/vars-on-top.html"
			}
		]
	},
	{
		"deno": [
			{
				"name": "verbatim-module-syntax",
				"url": "https://docs.deno.com/lint/rules/verbatim-module-syntax"
			}
		],
		"flint": {
			"name": "verbatimModuleSyntax",
			"plugin": "ts",
			"preset": "Not implementing"
		}
	},
	{
		"biome": [
			{
				"name": "noVoid",
				"url": "https://biomejs.dev/linter/rules/noVoid"
			}
		],
		"eslint": [
			{
				"name": "no-void",
				"url": "https://eslint.org/docs/latest/rules/no-void"
			}
		],
		"flint": {
			"implemented": true,
			"name": "voidOperator",
			"plugin": "ts",
			"preset": "Stylistic"
		},
		"oxlint": [
			{
				"name": "eslint/no-void",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-void.html"
			}
		]
	},
	{
		"biome": [
			{
				"name": "noWith",
				"url": "https://biomejs.dev/linter/rules/noWith"
			}
		],
		"deno": [
			{
				"name": "no-with",
				"url": "https://docs.deno.com/lint/rules/no-with"
			}
		],
		"eslint": [
			{
				"name": "no-with",
				"url": "https://eslint.org/docs/latest/rules/no-with"
			}
		],
		"flint": {
			"name": "withStatements",
			"plugin": "ts",
			"preset": "Logical"
		},
		"oxlint": [
			{
				"name": "eslint/no-with",
				"url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-with.html"
			}
		]
	},
	{
		"eslint": [
			{
				"name": "@typescript-eslint/no-wrapper-object-types",
				"url": "https://typescript-eslint.io/rules/no-wrapper-object-types"
			}
		],
		"flint": {
			"name": "wrapperObjectTypes",
			"plugin": "ts",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/block-mapping",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/block-mapping.html"
			}
		],
		"flint": {
			"name": "blockMappings",
			"plugin": "yml",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/block-sequence",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/block-sequence.html"
			}
		],
		"flint": {
			"name": "blockSequences",
			"plugin": "yml",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/no-empty-document",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-empty-document.html"
			}
		],
		"flint": {
			"name": "emptyDocuments",
			"plugin": "yml",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/no-empty-key",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-empty-key.html"
			}
		],
		"flint": {
			"implemented": true,
			"name": "emptyMappingKeys",
			"plugin": "yml",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/no-empty-mapping-value",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-empty-mapping-value.html"
			}
		],
		"flint": {
			"name": "emptyMappingValues",
			"plugin": "yml",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/no-empty-sequence-entry",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-empty-sequence-entry.html"
			}
		],
		"flint": {
			"name": "emptySequenceEntries",
			"plugin": "yml",
			"preset": "Logical"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/file-extension",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/file-extension.html"
			}
		],
		"flint": {
			"name": "fileExtensions",
			"plugin": "yml",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/no-irregular-whitespace",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-irregular-whitespace.html"
			}
		],
		"flint": {
			"name": "irregularWhitespace",
			"plugin": "yml",
			"preset": "Stylistic"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/key-name-casing",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/key-name-casing.html"
			}
		],
		"flint": {
			"name": "mappingKeyCasing",
			"plugin": "yml",
			"preset": "Not implementing"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/no-trailing-zeros",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-trailing-zeros.html"
			}
		],
		"flint": {
			"name": "numericTrailingZeros",
			"plugin": "yml",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/plain-scalar",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/plain-scalar.html"
			}
		],
		"flint": {
			"name": "plainScalars",
			"plugin": "yml",
			"preset": "Stylistic",
			"strictness": "Strict"
		}
	},
	{
		"eslint": [
			{
				"name": "yml/require-string-key",
				"url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/require-string-key.html"
			}
		],
		"flint": {
			"name": "stringMappingKeys",
			"plugin": "yml",
			"preset": "Logical",
			"strictness": "Strict"
		}
	}
]
